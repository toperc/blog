{"per_page":10,"total":12,"current":9,"data":[{"title":"Android项目中Git忽略文件.gitignore的写法","date":"2018-05-04T14:51:03.000Z","date_formatted":{"ll":"2018年5月4日","L":"2018/05/04","MM-DD":"05-04"},"excerpt":"<p>又到周五了，这周过的最快，因为只有三天，就总结一个简单的东西吧——Android项目中Git忽略文件.gitignore的写法。</p>","link":"posts/1525445463","tags":["Git"],"categories":["Android"]},{"title":"TextView局部字体超链接处理方案","date":"2018-04-30T06:42:45.000Z","date_formatted":{"ll":"2018年4月30日","L":"2018/04/30","MM-DD":"04-30"},"excerpt":"<p>还是之前的老项目问题，应法务部门的要求要将之前客户端的相关条款调整一下，每条内容中还有多个条款可方便用户进行点击查看详细内容，本来没啥问题，当去寻找内容所在的时候却发现都是在本地配置的，并且是xml写死的，而且对于TextView中的条款却是采用多个TextView进行组合而成的。擦类，对于产品的要求要多种情况进行变换，还要调整大小屏，在我的思想里这…必须要换了。</p>","link":"posts/1525070565","categories":["Android"]},{"title":"Android屏幕适配解决方案","date":"2018-03-27T15:13:17.000Z","date_formatted":{"ll":"2018年3月27日","L":"2018/03/27","MM-DD":"03-27"},"excerpt":"<p>学习android避免不掉要进行屏幕适配，因为android碎片化极其严重，尤其是在国内这种环境下，不受google所约束，奇葩屏幕更是多种多样，由于android的开源性，从小到手表，大到电视以及企业影院屏幕，不得已给开发者更多的任务和困难去进行处理，没办法，来就来了，总结一下吧。</p>","link":"posts/1522163597","categories":["Android"]},{"title":"AndroidStudio配置Terminal窗口及相关命令归总","date":"2018-03-22T16:25:46.000Z","date_formatted":{"ll":"2018年3月23日","L":"2018/03/23","MM-DD":"03-23"},"excerpt":"<p>Terminal大家都熟悉，是一个类似cmd的命令行工具，AndroidStudio中自带，我们可以在上面利用ADB工具的相关命令进行应用程序安装、卸载、文件写入、日志输出等操作，也可以利用Gradle构建工具的相关命令进行项目的构建打包、签名等操作。</p>","link":"posts/1521735946","categories":["Android"]},{"title":"Android多CPU适配总结","date":"2018-03-21T15:43:59.000Z","date_formatted":{"ll":"2018年3月21日","L":"2018/03/21","MM-DD":"03-21"},"excerpt":"<p>这两天准备重构一个好几年的老项目，项目中使用了NDK，但是莫名的报ABI的错误，最终找出问题是项目中.so文件放的位置不对。ABI的概念之前也了解过，今天总结一下。</p>","link":"posts/1521647039","categories":["Android"]},{"title":"Java泛型的认识和理解","date":"2018-03-14T16:08:11.000Z","date_formatted":{"ll":"2018年3月15日","L":"2018/03/15","MM-DD":"03-15"},"excerpt":"<p>针对泛型大家并不陌生，主要是针对某些对象以及方法参数的限定，避免在代码编写的过程中由于类型的不匹配从而造成运行期发生异常，泛型只在编译阶段有用，运行期间则会进行泛型擦除。</p>","link":"posts/1521043691","categories":["Java"]},{"title":"Service的生命周期和启动方式等相关总结","date":"2018-02-26T16:02:55.000Z","date_formatted":{"ll":"2018年2月27日","L":"2018/02/27","MM-DD":"02-27"},"excerpt":"<p>Service是安卓开发四大组件中和Activity最相似的组件，与Activity不同的是，Service是没有界面的,一直在后台运行。四大组件都有自己的生命周期，service也不例外，并且service的生命周期最长。</p>","link":"posts/1519660975","tags":["基础组件"],"categories":["Android"]},{"title":"Activity的生命周期和启动模式","date":"2018-02-26T14:27:49.000Z","date_formatted":{"ll":"2018年2月26日","L":"2018/02/26","MM-DD":"02-26"},"excerpt":"<p>Activity的生命周期和启动模式属于面试必考内容，有些时候可能随着工作经历的增长面试官不会去问这些，但是在面试的过程中或多或少都会牵涉一点，因为这是基础，虽然简单，还是总结一下，以后看着也舒服。</p>","link":"posts/1519655269","tags":["基础组件"],"categories":["Android"]},{"title":"View创建的那些事儿","date":"2018-01-29T04:24:17.000Z","date_formatted":{"ll":"2018年1月29日","L":"2018/01/29","MM-DD":"01-29"},"excerpt":"<p>本来是想总结view的绘制测量过程，但是一开始就来个measure、layout、draw总感觉让人有点丈二的和尚摸不着头脑。什么时候添加的这个view？谁控制添加的？它为什么能控制添加？这个view现在在哪呢？等等一系列问题都出来了。</p>","link":"posts/1517199857","tags":["View视图"],"categories":["Android"]},{"title":"数据结构和算法知识归总","date":"2018-01-21T11:46:16.000Z","date_formatted":{"ll":"2018年1月21日","L":"2018/01/21","MM-DD":"01-21"},"excerpt":"","link":"posts/1516535176","tags":["数据结构","知识体系","算法"],"categories":["知识体系"]}]}