{"title":"Android开发弹性布局FlexboxLayout知识总结","date":"2021-01-27T12:47:25.000Z","date_formatted":{"ll":"2021年1月27日","L":"2021/01/27","MM-DD":"01-27"},"link":"posts/1611751645","comments":true,"tags":["Android","控件"],"categories":["Android"],"updated":"2021-01-29T12:51:44.653Z","content":"<p>今天分享一下弹性布局FlexboxLayout的使用总结，又是一篇个人有道云笔记转移系列。早些年我们实现一个换行的标签云、实现一个不规则的九宫格、实现一个不规整瀑布流等等这些“嘿嘿嘿”设计总是要思索半天，FlexboxLayout的出现面对这些问题将为你节省几亿个脑细胞不在话下。我第一次接触这个布局方式还是从早前一个前端写H5的小哥嘴里得到的，我顺便举一反三搜了一下发现我们Android上也有，还是google官方出品，看来知识都是相通的。好了，废话不多说，直接淦！</p>\n<a id=\"more\"></a>\n<h2 id=\"github\">GitHub<a title=\"#github\" href=\"#github\"></a></h2>\n<p><strong>官方地址：</strong> <a href=\"https://github.com/google/flexbox-layout\">https://github.com/google/flexbox-layout</a></p>\n<p><strong>接入依赖：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    implementation <span class=\"string\">&#x27;com.google.android:flexbox:2.0.1&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>值得注意的是从1.1.0开始，该库直接对接AndroidX，如果想要使用1.1.0及以上版本尽快升级到AndroidX咯。</p>\n<h2 id=\"简单使用方式\">简单使用方式<a title=\"#简单使用方式\" href=\"#简单使用方式\"></a></h2>\n<p><strong>XML</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.google.android.flexbox.FlexboxLayout</span><br><span class=\"line\">    xmlns:android=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class=\"line\">    xmlns:app=<span class=\"string\">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class=\"line\">    android:layout_width=<span class=\"string\">&quot;match_parent&quot;</span></span><br><span class=\"line\">    android:layout_height=<span class=\"string\">&quot;match_parent&quot;</span></span><br><span class=\"line\">    app:flexWrap=<span class=\"string\">&quot;wrap&quot;</span></span><br><span class=\"line\">    app:alignItems=<span class=\"string\">&quot;stretch&quot;</span></span><br><span class=\"line\">    app:alignContent=<span class=\"string\">&quot;stretch&quot;</span> &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/textview1&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;120dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;80dp&quot;</span></span><br><span class=\"line\">        app:layout_flexBasisPercent=<span class=\"string\">&quot;50%&quot;</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/textview2&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;80dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;80dp&quot;</span></span><br><span class=\"line\">        app:layout_alignSelf=<span class=\"string\">&quot;center&quot;</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/textview3&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;160dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;80dp&quot;</span></span><br><span class=\"line\">        app:layout_alignSelf=<span class=\"string\">&quot;flex_end&quot;</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/com.google.android.flexbox.FlexboxLayout&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>From Code</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FlexboxLayout flexboxLayout = (FlexboxLayout) findViewById(R.id.flexbox_layout);</span><br><span class=\"line\">flexboxLayout.setFlexDirection(FlexDirection.ROW);</span><br><span class=\"line\"></span><br><span class=\"line\">View view = flexboxLayout.getChildAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">FlexboxLayout.LayoutParams lp = (FlexboxLayout.LayoutParams) view.getLayoutParams();</span><br><span class=\"line\">lp.setOrder(-<span class=\"number\">1</span>);</span><br><span class=\"line\">lp.setFlexGrow(<span class=\"number\">2</span>);</span><br><span class=\"line\">view.setLayoutParams(lp);</span><br></pre></td></tr></table></figure>\n<p><strong>FlexboxLayoutManager (within RecyclerView)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 针对所有item</span><br><span class=\"line\">RecyclerView recyclerView &#x3D; (RecyclerView) context.findViewById(R.id.recyclerview);</span><br><span class=\"line\">FlexboxLayoutManager layoutManager &#x3D; new FlexboxLayoutManager(context);</span><br><span class=\"line\">layoutManager.setFlexDirection(FlexDirection.COLUMN);</span><br><span class=\"line\">layoutManager.setJustifyContent(JustifyContent.FLEX_END);</span><br><span class=\"line\">recyclerView.setLayoutManager(layoutManager);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 针对单个item</span><br><span class=\"line\">mImageView.setImageDrawable(drawable);</span><br><span class=\"line\">ViewGroup.LayoutParams lp &#x3D; mImageView.getLayoutParams();</span><br><span class=\"line\">if (lp instanceof FlexboxLayoutManager.LayoutParams) &#123;</span><br><span class=\"line\">    FlexboxLayoutManager.LayoutParams flexboxLp &#x3D; (FlexboxLayoutManager.LayoutParams) lp;</span><br><span class=\"line\">    flexboxLp.setFlexGrow(1.0f);</span><br><span class=\"line\">    flexboxLp.setAlignSelf(AlignSelf.FLEX_END);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"相关属性\">相关属性<a title=\"#相关属性\" href=\"#相关属性\"></a></h2>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/B6F1A81D73B24230BA06552320DE2A7C?method=download&amp;shareKey=e30151e4c96aabd0cfd4ad5042bb16bc\" alt=\"FlexboxLayout相关属性\" class=\"φcx\"></p>\n<p>下边我直接介绍相关属性使用方法</p>\n<h2 id=\"父布局属性\">父布局属性<a title=\"#父布局属性\" href=\"#父布局属性\"></a></h2>\n<p>以下五种是父布局中所使用的，也是最常用的。</p>\n<h3 id=\"flexdirection\">flexDirection<a title=\"#flexdirection\" href=\"#flexdirection\"></a></h3>\n<p><code>flexDirection</code>属性是决定主轴的方向。好比LinearLayout的vertical(垂直) 和 horizontal(水平)方向。</p>\n<ul>\n<li>row：一般为默认值，主轴为水平方向，起点在左端。</li>\n<li>row-reverse: 主轴为水平方向，起点在右端。</li>\n<li>column：主轴为垂直方向，起点在上沿。</li>\n<li>column-reverse：主轴为垂直方向，起点在下沿。</li>\n</ul>\n<h3 id=\"flexwrap\">flexWrap<a title=\"#flexwrap\" href=\"#flexwrap\"></a></h3>\n<p><code>flexWrap</code>属性是决定是否换行排列，默认情况下是不支持换行排列。</p>\n<ul>\n<li>nowrap：不换行。</li>\n<li>wrap: 正常方向换行。</li>\n<li>wrap-reverse: 反方向换行。</li>\n</ul>\n<h3 id=\"justifycontent\">justifyContent<a title=\"#justifycontent\" href=\"#justifycontent\"></a></h3>\n<p><code>justifyContent</code>指定了项目在主轴上的对齐方式。</p>\n<ul>\n<li>flex-start: 默认值为左对齐。</li>\n<li>flex-end:   右对齐。</li>\n<li>center:     居中。</li>\n<li>space-between: 两端对齐，其间间距相等。</li>\n<li>space-around:  两侧间距相等。</li>\n</ul>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/8BCD2941B66342BB87E6D56313145AD4?method=download&amp;shareKey=1ae6841be4c97800b15cfb6ca60a4e59\" alt=\"justifyContent图示\" class=\"φcx\"></p>\n<h3 id=\"alignltems\">alignltems<a title=\"#alignltems\" href=\"#alignltems\"></a></h3>\n<p><code>alignltems</code>指定项目在副轴（交叉轴，和主轴垂直）上的对齐方式。</p>\n<ul>\n<li>flex-start: 交叉轴的起点对齐。(上)</li>\n<li>flex-end:   交叉轴的终点对齐。(下)</li>\n<li>center:     交叉轴的中点对齐。(中间线)</li>\n<li>baseline:   第一行文字的基线对齐。()</li>\n<li>stretch:    默认值是占满整个容器的高度，在未设置高度或者为auto。</li>\n</ul>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/C06F478BF6EA4F79A79F7752FABEADA0?method=download&amp;shareKey=ad6a11d1fa6768815af22d17136655c8\" alt=\"alignltems图示\" class=\"φcx\"></p>\n<h3 id=\"aligncontent\">alignContent<a title=\"#aligncontent\" href=\"#aligncontent\"></a></h3>\n<p><code>alignContent</code>指定多根轴线的对齐方式，如果只有一条轴，该属性不起任何作用。</p>\n<ul>\n<li>flex-start: 与交叉轴的起点对齐。</li>\n<li>flex-end:   与交叉轴的终点对齐。</li>\n<li>center:     与交叉轴的中点对齐。</li>\n<li>space-between:  与交叉轴的两端对齐，轴线之间的间隔分布均匀。</li>\n<li>space-around:   每根轴线两侧的间隔相等。</li>\n<li>stretch: 默认值为轴线占满整个交叉轴。</li>\n</ul>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/2684AA38A4D441878CA01C271671D949?method=download&amp;shareKey=919a495ed5f1d10a5610fd2d306f4ad1\" alt=\"alignContent图示\" class=\"φcx\"></p>\n<h2 id=\"分割线\">分割线<a title=\"#分割线\" href=\"#分割线\"></a></h2>\n<h3 id=\"水平分割线\">水平分割线<a title=\"#水平分割线\" href=\"#水平分割线\"></a></h3>\n<p>采用<code>showDividerHorizontal</code>和<code>dividerDrawableHorizontal</code>属性设置水平分割线</p>\n<ul>\n<li>showDividerHorizontal<br>\n控制显示水平方向的分割线，值为none | beginning | middle | end其中的一个或者多个。</li>\n<li>dividerDrawableHorizontal<br>\n设置Flex 轴线之间水平方向的分割线。</li>\n</ul>\n<h3 id=\"垂直分割线\">垂直分割线<a title=\"#垂直分割线\" href=\"#垂直分割线\"></a></h3>\n<p>采用<code>showDividerVertical</code>和<code>dividerDrawableVertical</code>属性设置垂直分割线</p>\n<ul>\n<li>showDividerVertical<br>\n控制显示垂直方向的分割线，值为none | beginning | middle | end其中的一个或者多个。</li>\n<li>dividerDrawableVertical<br>\n设置子元素垂直方向的分割线。</li>\n</ul>\n<h3 id=\"水平垂直分割线\">水平垂直分割线<a title=\"#水平垂直分割线\" href=\"#水平垂直分割线\"></a></h3>\n<p>采用<code>showDivider</code>和<code>dividerDrawable</code>属性同时设置水平垂直分割线</p>\n<ul>\n<li>showDivider<br>\n控制显示水平和垂直方向的分割线，值为none | beginning | middle | end其中的一个或者多个。</li>\n<li>dividerDrawable<br>\n设置水平和垂直方向的分割线，但是注意，如果同时和其他属性使用，比如为Flex轴、子元素设置了<code>justifyContent=“space_around” </code>、<code>alignContent=“space_between”</code> 等等。可能会看到意料不到的结果，因此应该避免和这些值同时使用。</li>\n</ul>\n<h2 id=\"子布局属性\">子布局属性<a title=\"#子布局属性\" href=\"#子布局属性\"></a></h2>\n<h3 id=\"layout_order\">layout_order<a title=\"#layout_order\" href=\"#layout_order\"></a></h3>\n<p>这个属性可以改变布局子视图的顺序。默认情况下，子元素的显示和布局顺序与布局XML中的顺序相同。如果没有指定，则将1设置为默认值( CSS 中默认值为 0) ，数值越小，排列越靠前。</p>\n<h3 id=\"layout_flexgrow\">layout_flexGrow<a title=\"#layout_flexgrow\" href=\"#layout_flexgrow\"></a></h3>\n<p>放大比例。这个属性类似于 LinearLayout 中的 layout_weight 属性，如果没有指定，则将 0 设置为默认值。如果果同一 flex 行中的多个子 View 有正的 layout_flexGrow 值，那么剩余的空闲空间将根据它们声明的 layout_flexGrow 值的比例分布。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.google.android.flexbox.FlexboxLayout xmlns:android=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class=\"line\">    xmlns:app=<span class=\"string\">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class=\"line\">    android:layout_width=<span class=\"string\">&quot;300dp&quot;</span></span><br><span class=\"line\">    android:layout_height=<span class=\"string\">&quot;300dp&quot;</span></span><br><span class=\"line\">    android:background=<span class=\"string\">&quot;@android:color/black&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">         flex-grow（放大比例，剩余空间怎么分配) : 权重</span><br><span class=\"line\">         <span class=\"keyword\">float</span> FLEX_GROW_DEFAULT = <span class=\"number\">0f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">         剩余宽度 = <span class=\"number\">300</span> - (<span class=\"number\">0</span> +  <span class=\"number\">0</span> + <span class=\"number\">0</span>) = <span class=\"number\">300</span></span><br><span class=\"line\">         tv1宽度 = <span class=\"number\">0</span> + <span class=\"number\">300</span> * (<span class=\"number\">2</span> / <span class=\"number\">4</span>) = <span class=\"number\">150</span></span><br><span class=\"line\">         tv2宽度 = <span class=\"number\">0</span> + <span class=\"number\">300</span> * (<span class=\"number\">1</span> / <span class=\"number\">4</span>) = <span class=\"number\">75</span></span><br><span class=\"line\">         tv3宽度 = <span class=\"number\">0</span> + <span class=\"number\">300</span> * (<span class=\"number\">1</span> / <span class=\"number\">4</span>) = <span class=\"number\">75</span></span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/tv1&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;0dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;wrap_content&quot;</span></span><br><span class=\"line\">        android:background=<span class=\"string\">&quot;@android:color/holo_purple&quot;</span></span><br><span class=\"line\">        android:gravity=<span class=\"string\">&quot;center&quot;</span></span><br><span class=\"line\">        android:padding=<span class=\"string\">&quot;5dp&quot;</span></span><br><span class=\"line\">        android:text=<span class=\"string\">&quot;tv1&quot;</span></span><br><span class=\"line\">        android:textColor=<span class=\"string\">&quot;@android:color/white&quot;</span></span><br><span class=\"line\">        app:layout_flexGrow=<span class=\"string\">&quot;2&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/tv2&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;0dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;wrap_content&quot;</span></span><br><span class=\"line\">        android:background=<span class=\"string\">&quot;#FFC107&quot;</span></span><br><span class=\"line\">        android:gravity=<span class=\"string\">&quot;center&quot;</span></span><br><span class=\"line\">        android:padding=<span class=\"string\">&quot;5dp&quot;</span></span><br><span class=\"line\">        android:text=<span class=\"string\">&quot;tv2&quot;</span></span><br><span class=\"line\">        app:layout_flexGrow=<span class=\"string\">&quot;1&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/tv3&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;0dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;wrap_content&quot;</span></span><br><span class=\"line\">        android:background=<span class=\"string\">&quot;#00BCD4&quot;</span></span><br><span class=\"line\">        android:gravity=<span class=\"string\">&quot;center&quot;</span></span><br><span class=\"line\">        android:padding=<span class=\"string\">&quot;5dp&quot;</span></span><br><span class=\"line\">        android:text=<span class=\"string\">&quot;tv3&quot;</span></span><br><span class=\"line\">        app:layout_flexGrow=<span class=\"string\">&quot;1&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/com.google.android.flexbox.FlexboxLayout&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"layout_flexshrink\">layout_flexShrink<a title=\"#layout_flexshrink\" href=\"#layout_flexshrink\"></a></h3>\n<p>缩小比例。如果所有子 View 的 layout_flexShrink 属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的 layout_flexShrink 属性为0，其他子View都为 1，则空间不足时，layout_flexShrink 属性为 0 的不缩小。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.google.android.flexbox.FlexboxLayout xmlns:android=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class=\"line\">    xmlns:app=<span class=\"string\">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class=\"line\">    android:layout_width=<span class=\"string\">&quot;300dp&quot;</span></span><br><span class=\"line\">    android:layout_height=<span class=\"string\">&quot;500dp&quot;</span></span><br><span class=\"line\">    android:background=<span class=\"string\">&quot;@android:color/black&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">        flex-shrink （缩小比例，超出空间怎么压缩）</span><br><span class=\"line\">        默认： <span class=\"keyword\">float</span> FLEX_SHRINK_DEFAULT = <span class=\"number\">1f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        计算方法：</span><br><span class=\"line\">        孩子宽度和 = <span class=\"number\">150</span> * <span class=\"number\">3</span> = <span class=\"number\">450</span></span><br><span class=\"line\">        <span class=\"number\">450</span> - <span class=\"number\">300</span> = <span class=\"number\">150</span> 即超出父布局宽度<span class=\"number\">150</span></span><br><span class=\"line\">        tv1最终宽度 = 自身宽度<span class=\"number\">150</span> - 超出宽度所占比例的宽度<span class=\"number\">150</span> * (<span class=\"number\">2</span> / <span class=\"number\">4</span>)  = <span class=\"number\">75</span></span><br><span class=\"line\">        tv2最终宽度 = 自身宽度<span class=\"number\">150</span> - 超出宽度所占比例的宽度<span class=\"number\">150</span> * (<span class=\"number\">1</span> / <span class=\"number\">4</span>)  = <span class=\"number\">112.5</span></span><br><span class=\"line\">        tv3最终宽度 = 自身宽度<span class=\"number\">150</span> - 超出宽度所占比例的宽度<span class=\"number\">150</span> * (<span class=\"number\">1</span> / <span class=\"number\">4</span>)  = <span class=\"number\">112.5</span></span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/tv1&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;150dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;wrap_content&quot;</span></span><br><span class=\"line\">        android:background=<span class=\"string\">&quot;@android:color/holo_purple&quot;</span></span><br><span class=\"line\">        android:gravity=<span class=\"string\">&quot;center&quot;</span></span><br><span class=\"line\">        android:padding=<span class=\"string\">&quot;5dp&quot;</span></span><br><span class=\"line\">        android:text=<span class=\"string\">&quot;tv1&quot;</span></span><br><span class=\"line\">        android:textColor=<span class=\"string\">&quot;@android:color/white&quot;</span></span><br><span class=\"line\">        app:layout_flexShrink=<span class=\"string\">&quot;2&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/tv2&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;150dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;wrap_content&quot;</span></span><br><span class=\"line\">        android:background=<span class=\"string\">&quot;#FFC107&quot;</span></span><br><span class=\"line\">        android:gravity=<span class=\"string\">&quot;center&quot;</span></span><br><span class=\"line\">        android:padding=<span class=\"string\">&quot;5dp&quot;</span></span><br><span class=\"line\">        android:text=<span class=\"string\">&quot;tv2&quot;</span></span><br><span class=\"line\">        app:layout_flexShrink=<span class=\"string\">&quot;1&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/tv3&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;150dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;wrap_content&quot;</span></span><br><span class=\"line\">        android:background=<span class=\"string\">&quot;#00BCD4&quot;</span></span><br><span class=\"line\">        android:gravity=<span class=\"string\">&quot;center&quot;</span></span><br><span class=\"line\">        android:padding=<span class=\"string\">&quot;5dp&quot;</span></span><br><span class=\"line\">        android:text=<span class=\"string\">&quot;tv3&quot;</span></span><br><span class=\"line\">        app:layout_flexShrink=<span class=\"string\">&quot;1&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/com.google.android.flexbox.FlexboxLayout&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"layout_alignself\">layout_alignSelf<a title=\"#layout_alignself\" href=\"#layout_alignself\"></a></h3>\n<p>子元素对齐。对齐方式，取值和align相同，覆盖align-items。</p>\n<p>layout_alignSelf 属性可以给子元素设置对齐方式，这个属性的功能和alignItems一样，</p>\n<p>只不过alignItems作用于所有子元素，而 layout_alignSelf 作用于单个子元素。</p>\n<p>默认值为auto, 表示继承alignItems属性，如果为auto以外的值，则会覆盖alignItems属性。有以下6种取值：</p>\n<ul>\n<li>auto (default)</li>\n<li>flex_start</li>\n<li>flex_end</li>\n<li>center</li>\n<li>baseline</li>\n<li>stretch</li>\n</ul>\n<h3 id=\"layout_flexbasispercent\">layout_flexBasisPercent<a title=\"#layout_flexbasispercent\" href=\"#layout_flexbasispercent\"></a></h3>\n<p>子元素占父元素百分比。layout_flexBasisPercent的值为一个百分比，表示设置子元素的长度为它父容器长度的百分比，如果设置了这个值，那么通过这个属性计算的值将会覆盖layout_width或者layout_height的值。</p>\n<p>但是需要注意，这个值只有设置了父容器的长度时才有效，默认值是-1。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.google.android.flexbox.FlexboxLayout xmlns:android=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class=\"line\">    xmlns:app=<span class=\"string\">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class=\"line\">    android:layout_width=<span class=\"string\">&quot;300dp&quot;</span></span><br><span class=\"line\">    android:layout_height=<span class=\"string\">&quot;300dp&quot;</span></span><br><span class=\"line\">    android:background=<span class=\"string\">&quot;@android:color/black&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">        layout_flexBasisPercent </span><br><span class=\"line\">        决定了在分配多余空间之前，子元素占据的主轴空间的百分比。</span><br><span class=\"line\">        默认为自身大小     </span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/tv1&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;50dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;wrap_content&quot;</span></span><br><span class=\"line\">        android:background=<span class=\"string\">&quot;@android:color/holo_purple&quot;</span></span><br><span class=\"line\">        android:gravity=<span class=\"string\">&quot;center&quot;</span></span><br><span class=\"line\">        android:padding=<span class=\"string\">&quot;5dp&quot;</span></span><br><span class=\"line\">        android:text=<span class=\"string\">&quot;tv1&quot;</span></span><br><span class=\"line\">        android:textColor=<span class=\"string\">&quot;@android:color/white&quot;</span></span><br><span class=\"line\">        app:layout_flexBasisPercent=<span class=\"string\">&quot;40%&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/tv2&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;50dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;wrap_content&quot;</span></span><br><span class=\"line\">        android:background=<span class=\"string\">&quot;#FFC107&quot;</span></span><br><span class=\"line\">        android:gravity=<span class=\"string\">&quot;center&quot;</span></span><br><span class=\"line\">        android:padding=<span class=\"string\">&quot;5dp&quot;</span></span><br><span class=\"line\">        android:text=<span class=\"string\">&quot;tv2&quot;</span></span><br><span class=\"line\">        app:layout_flexBasisPercent=<span class=\"string\">&quot;30%&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=<span class=\"string\">&quot;@+id/tv3&quot;</span></span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;50dp&quot;</span></span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;wrap_content&quot;</span></span><br><span class=\"line\">        android:background=<span class=\"string\">&quot;#00BCD4&quot;</span></span><br><span class=\"line\">        android:gravity=<span class=\"string\">&quot;center&quot;</span></span><br><span class=\"line\">        android:padding=<span class=\"string\">&quot;5dp&quot;</span></span><br><span class=\"line\">        android:text=<span class=\"string\">&quot;tv3&quot;</span></span><br><span class=\"line\">        app:layout_flexBasisPercent=<span class=\"string\">&quot;20%&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/com.google.android.flexbox.FlexboxLayout&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"layout_minwidth-/-layout_minheight\">layout_minWidth / layout_minHeight<a title=\"#layout_minwidth-/-layout_minheight\" href=\"#layout_minwidth-/-layout_minheight\"></a></h3>\n<p>这个属性设置了子 View 的最小的宽和高。在 layout_flexShrink 模式下，再怎么缩小也不会小于这个值</p>\n<h3 id=\"layout_maxwidth-/-layout_maxheight\">layout_maxWidth / layout_maxHeight<a title=\"#layout_maxwidth-/-layout_maxheight\" href=\"#layout_maxwidth-/-layout_maxheight\"></a></h3>\n<p>这个属性设置了子 View 的最大的宽和高。在 layout_flexGrow 模式下，再怎么放大也不会大于这个值</p>\n<h3 id=\"layout_wrapbefore\">layout_wrapBefore<a title=\"#layout_wrapbefore\" href=\"#layout_wrapbefore\"></a></h3>\n<p>这个属性使得子 View 可以强制换行，不管在 main size 剩余空间有多少。这种对于类似 grid 网格布局中特殊设置某一个 item 布局特别有用。默认 false。</p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li><a href=\"https://github.com/google/flexbox-layout\">https://github.com/google/flexbox-layout</a></li>\n<li><a href=\"https://stackoverflow.com/questions/31250174/css-flexbox-difference-between-align-items-and-align-content\">https://stackoverflow.com/questions/31250174/css-flexbox-difference-between-align-items-and-align-content</a></li>\n</ul>\n","next":{"title":"健康其实很简单","link":"posts/1611674668"},"plink":"https://blog.ixin.run/posts/1611751645/","toc":[{"id":"github","title":"GitHub","index":"1"},{"id":"简单使用方式","title":"简单使用方式","index":"2"},{"id":"相关属性","title":"相关属性","index":"3"},{"id":"父布局属性","title":"父布局属性","index":"4","children":[{"id":"flexdirection","title":"flexDirection","index":"4.1"},{"id":"flexwrap","title":"flexWrap","index":"4.2"},{"id":"justifycontent","title":"justifyContent","index":"4.3"},{"id":"alignltems","title":"alignltems","index":"4.4"},{"id":"aligncontent","title":"alignContent","index":"4.5"}]},{"id":"分割线","title":"分割线","index":"5","children":[{"id":"水平分割线","title":"水平分割线","index":"5.1"},{"id":"垂直分割线","title":"垂直分割线","index":"5.2"},{"id":"水平垂直分割线","title":"水平垂直分割线","index":"5.3"}]},{"id":"子布局属性","title":"子布局属性","index":"6","children":[{"id":"layout_order","title":"layout_order","index":"6.1"},{"id":"layout_flexgrow","title":"layout_flexGrow","index":"6.2"},{"id":"layout_flexshrink","title":"layout_flexShrink","index":"6.3"},{"id":"layout_alignself","title":"layout_alignSelf","index":"6.4"},{"id":"layout_flexbasispercent","title":"layout_flexBasisPercent","index":"6.5"},{"id":"layout_minwidth-/-layout_minheight","title":"layout_minWidth &#x2F; layout_minHeight","index":"6.6"},{"id":"layout_maxwidth-/-layout_maxheight","title":"layout_maxWidth &#x2F; layout_maxHeight","index":"6.7"},{"id":"layout_wrapbefore","title":"layout_wrapBefore","index":"6.8"}]},{"id":"参考","title":"参考","index":"7"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1611751645/\" title=\"Android开发弹性布局FlexboxLayout知识总结\">https://blog.ixin.run/posts/1611751645/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}