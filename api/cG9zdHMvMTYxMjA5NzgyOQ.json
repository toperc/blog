{"title":"Jenkins自动化构建（一）玩转Android项目自动化打包","date":"2021-01-31T12:56:15.000Z","date_formatted":{"ll":"2021年1月31日","L":"2021/01/31","MM-DD":"01-31"},"link":"posts/1612097829","comments":true,"tags":["Android","DevOps","Jenkins"],"categories":["DevOps"],"updated":"2021-02-02T12:27:34.089Z","content":"<p>早些年Eclipse时代Android打包采用的<code>ant</code>，现在AndroidStudio时代采用的<code>Gradle</code>，目前的开发模式都是采用敏捷开发，如果仍采用手动打包给QA提测未免太耽误事了，目前众多公司采用的是自动化打包策略+自动化测试，本文是Jenkins自动化构建的第一篇，玩转Android项目的自动化打包，来自早些时候个人整理的有道云笔记，不对之处请指出。前方高能，巨图众多！</p>\n<a id=\"more\"></a>\n<h2 id=\"jenkins工作流程\">jenkins工作流程<a title=\"#jenkins工作流程\" href=\"#jenkins工作流程\"></a></h2>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/B662DC3EB3A44160A28C398EB50CAAD2?method=download&amp;shareKey=041489f4b970d0359b0ecfd548befb69\" alt=\"jenkins工作流程\" class=\"φbs\"></p>\n<h2 id=\"jenkins安装\">jenkins安装<a title=\"#jenkins安装\" href=\"#jenkins安装\"></a></h2>\n<p>一般公司自动化构建都会将jenkins配置到Tomcat下，无论是jenkins还是tomcat都需要jdk。</p>\n<h3 id=\"准备工作\">准备工作<a title=\"#准备工作\" href=\"#准备工作\"></a></h3>\n<p>1.<a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\">Java jdk下载</a></p>\n<p>java jdk下载、安装、配置环境变量，安装过程忽略。</p>\n<p>2.<a href=\"http://tomcat.apache.org/\" target=\"_blank\">Tomcat下载</a></p>\n<p>tomcat下载，安装，配置环境变量，安装过程忽略。</p>\n<p>需要注意，tomcat默认端口8080，此端口很容易被其他服务占用，可根据自己需求修改tomcat端口号。</p>\n<p>3.<a href=\"https://jenkins.io/zh/\" target=\"_blank\">jenkins下载</a></p>\n<p>jenkins下载有多种类型，主要看当前的系统环境。一般我们选war包形式下载，后续结合tomcat进行安装。</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/9DE9944A1081464A97796F8E510C3052?method=download&amp;shareKey=970a68a2c2e0401b55c8fd22219da83b\" alt=\"jenkins下载\" class=\"φbs\"></p>\n<h3 id=\"jenkins安装-1\">jenkins安装<a title=\"#jenkins安装-1\" href=\"#jenkins安装-1\"></a></h3>\n<p>这里还是以war包结合tomcat来说，安装过程很简单，直接放到tomcat根目录webapps下，tomcat启动时会自动解压出一个jenkins文件夹。</p>\n<h3 id=\"jenkins-home位置修改\">jenkins home位置修改<a title=\"#jenkins-home位置修改\" href=\"#jenkins-home位置修改\"></a></h3>\n<p>jenkins安装后默认在C盘User下会生成个工作区（.jenkins），将来的插件、配置，以及创建的jobo都在此文件夹下，默认是不需要环境变量的，但是有些时候我们需要将此文件夹放到一个安全的位置，防止系统损坏或者重装系统这些配置丢失。这个时候就要修改工作区的环境变量了。</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/D4457215D7AC49E18EAB21DFF8AF5EEB?method=download&amp;shareKey=8ec52debc05f6c86aa11d6fe79085c72\" alt=\"jenkins-home环境变量\" class=\"φbs\"></p>\n<h3 id=\"jenkins启动\">jenkins启动<a title=\"#jenkins启动\" href=\"#jenkins启动\"></a></h3>\n<p>启动tomcat， 输入jenkins的服务器地址<code>http://xxx.xxx.xxx.xxx:8080/jenkins/</code>，一路下来按照提示进行操作，设置root用户信息，安装相关插件（刚开始不建议完全安装推荐的插件，可以选择跳过，你也可以看一下推荐的插件有哪些，选择性安装），然后就回到主页了：</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/8781B10EC8594AE79015090E15E22EAE?method=download&amp;shareKey=f6034aab26bc7b5eafab982ec8ade67f\" alt=\"jenkins启动主页\" class=\"φbs\"></p>\n<h2 id=\"安装插件\">安装插件<a title=\"#安装插件\" href=\"#安装插件\"></a></h2>\n<p>汉化: <code>Localization: Chinese (Simplified)</code></p>\n<h3 id=\"问题：jenkins无法安装插件\">问题：jenkins无法安装插件<a title=\"#问题：jenkins无法安装插件\" href=\"#问题：jenkins无法安装插件\"></a></h3>\n<p>找到插件管理最后一项：</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/6A4B703DE8AD46618BD87AA595C4889F?method=download&amp;shareKey=74a4f3cc0e88fa04c10e40774ef6f7a1\" alt=\"jenkins插件http代理设置\" class=\"φbs\"></p>\n<p>滑到最下边找到<code>Upload Site</code>，将默认的https改为http，保存修改：<code>http://updates.jenkins-ci.org/update-center.json</code></p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/DDB99D5893EB49BEA4EB9873A3536190?method=download&amp;shareKey=27da911aacaae0407e0b2917276653a1\" alt=\"jenkens插件下载修改Upload-Site\" class=\"φbs\"></p>\n<p>如果一直下载失败，可全局开启vpn（个人建议），当然也可以将上边的地址切换为国内镜像：<br>\n<a href=\"http://mirror.xmission.com/jenkins/updates/current/update-center.json\">http://mirror.xmission.com/jenkins/updates/current/update-center.json</a></p>\n<h2 id=\"jenkins角色配置\">jenkins角色配置<a title=\"#jenkins角色配置\" href=\"#jenkins角色配置\"></a></h2>\n<h3 id=\"1.-添加用户\">1. 添加用户<a title=\"#1.-添加用户\" href=\"#1.-添加用户\"></a></h3>\n<p>路径：Manage Jenkins-&gt;Manage Users</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/599D46E75AC34BC5A8B8A2D7166D7239?method=download&amp;shareKey=71bca99539b441a9c5db391c5a905b6e\" alt=\"添加用户\" class=\"φbs\"></p>\n<p>默认是你自己的超级用户root，你可以在此处添加第二个，第三个用户。</p>\n<h3 id=\"2.-设置用户权限\">2. 设置用户权限<a title=\"#2.-设置用户权限\" href=\"#2.-设置用户权限\"></a></h3>\n<h4 id=\"2.1-安装插件\">2.1 安装插件<a title=\"#2.1-安装插件\" href=\"#2.1-安装插件\"></a></h4>\n<p><code>Role-based Authorization Strategy</code></p>\n<h4 id=\"2.2-授权策略\">2.2 授权策略<a title=\"#2.2-授权策略\" href=\"#2.2-授权策略\"></a></h4>\n<p>路径：Manage Jenkins-&gt;Configure Global Security</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/E9B590BD65F7434E8E2971B26D975987?method=download&amp;shareKey=4c7b53959c14ac960e6041a2959d3354\" alt=\"Configure-Global-Security\" class=\"φbs\"></p>\n<p>保存。</p>\n<h4 id=\"2.3-角色管理和分配角色\">2.3 角色管理和分配角色<a title=\"#2.3-角色管理和分配角色\" href=\"#2.3-角色管理和分配角色\"></a></h4>\n<p>路径：Manage Jenkins-&gt;Manage and Assign Roles</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/1677DDC14B374DFDAB0D01878567A5F4?method=download&amp;shareKey=cf37b092b581e335c1afc90c242be8b8\" alt=\"Manage-and-Assign-Roles\" class=\"φbs\"></p>\n<ul>\n<li>管理角色：就是把角色分一下类，例如超级管理员有哪些、QA有哪些、普通用户有哪些。</li>\n<li>分配角色：就是把上边的角色分配到个人。</li>\n</ul>\n<p>2.3.1 管理角色</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/E4E632C423704D2985222C694444C52C?method=download&amp;shareKey=e841be1d02d0312078bd719c6b1d6802\" alt=\"管理角色\" class=\"φbs\"></p>\n<p>这里配置三种权限角色：管理员模式、普通模式和匿名模式（Anonymous），配置项如上，将来普通模式可以分配给QA供打包测试，匿名模式可以分配给不登录模式下查看项目，当然如果有别的角色需要我们还可以再进行添加。</p>\n<p>2.3.2 分配角色</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/777C6F1A3FF9460FAED0868DB9E3326C?method=download&amp;shareKey=7d2639e2acaee714a6bca92784c542ba\" alt=\"分配角色\" class=\"φbs\"></p>\n<p>这一步就是将权限分配到个人，Anonymous分配匿名模式下的权限。</p>\n<p>以上只是基本的，我们还可以实现某人可以看到某些项目，或者针对某个项目有固定的权限等，这里就不说了。</p>\n<h2 id=\"简单了解系统设置\">简单了解系统设置<a title=\"#简单了解系统设置\" href=\"#简单了解系统设置\"></a></h2>\n<h3 id=\"使用html展示消息\">使用Html展示消息<a title=\"#使用html展示消息\" href=\"#使用html展示消息\"></a></h3>\n<p>1.安装插件</p>\n<p><code>OWASP Markup Formatter Plugin</code></p>\n<p>2.标记格式器</p>\n<p>路径：Manage Jenkins-&gt;Configure Global Security</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/D9D9A9EBB9704DE486C5B4954A5EAA9B?method=download&amp;shareKey=f39923d003ab13735fdf8e119302f642\" alt=\"标记格式器\" class=\"φbs\"></p>\n<p>3.添加Html通知体</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/50562EE3CE3D4378895ADA2A177F8F93?method=download&amp;shareKey=440ac5223fc2cb4df2af99f532bb5a6e\" alt=\"添加Html通知体\" class=\"φbs\"></p>\n<h2 id=\"创建项目\">创建项目<a title=\"#创建项目\" href=\"#创建项目\"></a></h2>\n<p>安装插件：</p>\n<ol>\n<li>Git，因为我们的代码是git管理的。</li>\n<li>Gradle</li>\n</ol>\n<h3 id=\"配置构建环境\">配置构建环境<a title=\"#配置构建环境\" href=\"#配置构建环境\"></a></h3>\n<p>配置JDK、Git、Gradle相关变量，路径：Manage Jenkins-&gt;Global Tool Configuration</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/770E708C74964B1BB30A057721C51A6B?method=download&amp;shareKey=2eb5ec5e53604fd0b39ef9e972480693\" alt=\"配置构建相关环境变量\" class=\"φbs\"></p>\n<h3 id=\"准备创建项目\">准备创建项目<a title=\"#准备创建项目\" href=\"#准备创建项目\"></a></h3>\n<p>1.创建项目</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/1159774AAEEA468FB33E0097033A507C?method=download&amp;shareKey=c448a8a815d4440035991303dcc711ac\" alt=\"创建项目\" class=\"φbs\"></p>\n<p>2.设置源码源</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/55D686E29BC14C26B247A74C26E8D0FF?method=download&amp;shareKey=3f751adf7dd4bcdb9a16a34e7074d7f6\" alt=\"设置代码源\" class=\"φbs\"></p>\n<p>这里的凭据，如果项目地址在域里面，并且登录人是域用户，可以不用设置凭据了。</p>\n<p>3.设置Gradle构建</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/80C732826EB5410283C203092C7C8433?method=download&amp;shareKey=091978bb4ab19545a4e24b459b19a311\" alt=\"设置Gradle构建\" class=\"φbs\"></p>\n<p>主要关注两点:</p>\n<ol>\n<li>gradle版本：建议和项目gradle版本保持一致。</li>\n<li>设置gradle打包命令，图上给的只是简单的。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clean：每次构建前clean一下项目；</span><br><span class=\"line\">assembleDebug：构建debug包</span><br><span class=\"line\">-stacktrace-debug：输出日志栈，打印日志信息。</span><br></pre></td></tr></table></figure>\n<p>更多gradle打包命令，可以进行百度，这里就不多说了。</p>\n<p>4.构建后操作</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/CEF623AC6B014B5D97409A6739A5BFDA?method=download&amp;shareKey=5fc28bd127bcb231fae3c1632397fe83\" alt=\"构建后操作\" class=\"φbs\"></p>\n<p>构建后主要用于打包产物的输出、存档。</p>\n<ol>\n<li>选择Archive the artifacts，匹配构建后的输出产物。</li>\n<li>打包后我们会在项目首页看到最后一次构建成功后产物的归档。</li>\n</ol>\n<p>5.项目构建</p>\n<p>回到项目首页，点击Build Now，即可看到构建过程：</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/4989AF553EDF4AC982A34F2C82B31F05?method=download&amp;shareKey=41319071f3f82f5ead46df4767d9767e\" alt=\"项目构建过程\" class=\"φbs\"></p>\n<p>点击构建条，进到项目中可以查看日志输出：</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/A7EAA3EB05F24DC1B32A065C37EF78F3?method=download&amp;shareKey=3c7742651d6dcde78ed3f4b184bdf8a1\" alt=\"项目构建控制台输出\" class=\"φbs\"></p>\n<p>6.自动清除历史构建</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/4F40D511106641B1AE40DADC363DCE18?method=download&amp;shareKey=4d415a7bd0f1fd6f03d1bf2a48152136\" alt=\"自动清除历史构建\" class=\"φbs\"></p>\n<h2 id=\"参数化构建\">参数化构建<a title=\"#参数化构建\" href=\"#参数化构建\"></a></h2>\n<p>下载插件：</p>\n<ol>\n<li>Build With Parameters</li>\n<li>Persistent Parameter</li>\n</ol>\n<p>说明：安装<code>Build With Parameters Plugin</code>为了实现参数化构建，安装<code>Persistent Parameter Plugin</code>为了实现构建时默认参数值取自上次构建的参数(当然如果要实现该功能，应该需要添加该插件对应的参数)</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/438CC95A1BA44C7A933A9CAF52B9F41A?method=download&amp;shareKey=a6db4d194621afeea4f07f6dbf0a6393\" alt=\"参数化构建\" class=\"φbs\"></p>\n<h3 id=\"1.-设置构建类型\">1. 设置构建类型<a title=\"#1.-设置构建类型\" href=\"#1.-设置构建类型\"></a></h3>\n<p>选择Choice Parameter</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/064D64E84CCA4ABF8E2FCC6043A9F39C?method=download&amp;shareKey=a956aeab14519cfa868cb709f9cc66db\" alt=\"Choice-Parameter\" class=\"φbs\"></p>\n<p>在gradle构建类型地方进行替换</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/4A136E7B71854A0283270ECB2953668C?method=download&amp;shareKey=ddc6ab5fdd9c086482b39c2da27676a8\" alt=\"指定构建类型\" class=\"φbs\"></p>\n<h3 id=\"2.-设置构建分支\">2. 设置构建分支<a title=\"#2.-设置构建分支\" href=\"#2.-设置构建分支\"></a></h3>\n<p>选择Git Parameter</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/5B99DB49AD6D484A92DA6189026E2C4B?method=download&amp;shareKey=78bd2db9703aafd3dc8d0f246979da89\" alt=\"Git-Parameter\" class=\"φbs\"></p>\n<p>在源码管理的地方进行替换</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/2902B03754184F339AFF2864BD06CAF4?method=download&amp;shareKey=c238c9611b61dd2ae49aef37300349a4\" alt=\"指定git分支\" class=\"φbs\"></p>\n<p>当然你也可以选择Choice Parameter，类似设置构建类型一样，自己发挥咯。我自己就是用这种方式实现的。</p>\n<p>放一张主页的截图：</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/9537409A501C42B399821F17BBA22A8F?method=download&amp;shareKey=fc16208cb040205a632f4f690eab0ac8\" alt=\"主页构建模型\" class=\"φbs\"></p>\n<h2 id=\"展示二维码\">展示二维码<a title=\"#展示二维码\" href=\"#展示二维码\"></a></h2>\n<p>为了展示二维码，需要知道二维码存放的具体路径，然后二维码的扫描出来的结果必须是apk的具体路径，所以需要经过以下几步：</p>\n<ol>\n<li>将构建后的apk重命名，方便生成二维码（明确将来的apk存放地址）</li>\n<li>将构建生成的apk，拷贝到服务器具体路径下，我这里的服务器就是我本机。</li>\n<li>根据apk的服务器路径生成二维码，并存放在服务器某个位置。</li>\n</ol>\n<p>生成二维码需要用到二维码生成库包，我这里分享一个：</p>\n<p><a href=\"http://note.youdao.com/noteshare?id=db341975d72cbad400bfe58dcea9d493&amp;sub=E98FDCAFFBB84CD1AA00CCCF6CA39CFF\" target=\"_blank\">QRCode.jar</a></p>\n<p>生成二维码的命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar [存放生成jar包的路径&#x2F;QRCode.jar] url&#x3D;[二维码扫描结果字符串] image&#x3D;[二维码的名字.jpg] save&#x3D;[二维码存放的位置]</span><br></pre></td></tr></table></figure>\n<h3 id=\"window脚本\">window脚本<a title=\"#window脚本\" href=\"#window脚本\"></a></h3>\n<p>1.我们按照上边的过程将其写成window脚本命令，打开window batch command窗口</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/ACC959EF39E64C58B511C1CD38B2F8ED?method=download&amp;shareKey=7f572c05b854ffad1786308f4fd93b7b\" alt=\"window脚本构建参数\" class=\"φbs\"></p>\n<p>2.输入脚本内容：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set buildApk=app\\build\\outputs\\apk\\%BuildFlavor%\\%BuildType%\\*.apk</span><br><span class=\"line\">set apkName=ehistore_%BuildBranch%_%BuildFlavor%_%BuildType%_%BUILD_ID%</span><br><span class=\"line\">set jenkinsBuildDir=F:\\Workspaces\\project_other\\tomcat-<span class=\"number\">8.5</span><span class=\"number\">.39</span>\\webapps\\jenkins_build</span><br><span class=\"line\">set jenkinsBuildResDir=%jenkinsBuildDir%\\res</span><br><span class=\"line\">set jenkinsBuildApkDir=%jenkinsBuildDir%\\apks</span><br><span class=\"line\">set apkDownLoadUrl=http:<span class=\"comment\">//192.xxx.x.xxx:8080/jenkins_build/apks/%apkName%.apk</span></span><br><span class=\"line\"></span><br><span class=\"line\">ren %buildApk% %apkName%.apk</span><br><span class=\"line\">copy %buildApk% %jenkinsBuildApkDir%</span><br><span class=\"line\">java -jar %jenkinsBuildResDir%\\QRCode.jar url=%apkDownLoadUrl% image=%apkName%.jpg save=%jenkinsBuildApkDir%</span><br></pre></td></tr></table></figure>\n<p>3.下载插件：<code>Build Name and Description Setter</code></p>\n<p>该插件主要用于修改构建名字和构建描述展示，利用描述内容我们来展示二维码。</p>\n<p>添加插件部件：</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/5D963071FAF8497A85456A5CBD152AF6?method=download&amp;shareKey=c2d057d780438c8811bdc93140ed055d\" alt=\"添加修改描述和名字的插件\" class=\"φbs\"></p>\n<p>Changes build description添加描述内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;192.xxx.x.xxx:8080&#x2F;jenkins_build&#x2F;apks&#x2F;ehistore_$&#123;BuildBranch&#125;_$&#123;BuildFlavor&#125;_$&#123;BuildType&#125;_$&#123;BUILD_ID&#125;.jpg&quot; height&#x3D;&quot;180&quot; width&#x3D;&quot;180&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>\n<p>4.具体设置如下</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/FB23F03CA7154D228C8B36FED70AD2B5?method=download&amp;shareKey=27deccd6ff1db6fab06e98a2626c6a1c\" alt=\"修改构建产物的描述和名字\" class=\"φbs\"></p>\n<h3 id=\"生成效果如下：\">生成效果如下：<a title=\"#生成效果如下：\" href=\"#生成效果如下：\"></a></h3>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/A3B2CD91E1EA46A2A161CC28D25F65F8?method=download&amp;shareKey=e2563f20de53fc1f34dc20e634deb52f\" alt=\"最终二维码展示\" class=\"φbs\"></p>\n<h2 id=\"最后\">最后<a title=\"#最后\" href=\"#最后\"></a></h2>\n<p>本文主要带你玩转Jenkins中实现Android项目自动化打包，这是第一篇，后续还有二、三篇，如果喜欢顺便点赞+关注哦</p>\n","prev":{"title":"Java多态小记","link":"posts/1612714489"},"next":{"title":"GitHub Pages你了解多少","link":"posts/1612084454"},"plink":"https://blog.ixin.run/posts/1612097829/","toc":[{"id":"jenkins工作流程","title":"jenkins工作流程","index":"1"},{"id":"jenkins安装","title":"jenkins安装","index":"2","children":[{"id":"准备工作","title":"准备工作","index":"2.1"},{"id":"jenkins安装-1","title":"jenkins安装","index":"2.2"},{"id":"jenkins-home位置修改","title":"jenkins home位置修改","index":"2.3"},{"id":"jenkins启动","title":"jenkins启动","index":"2.4"}]},{"id":"安装插件","title":"安装插件","index":"3","children":[{"id":"问题：jenkins无法安装插件","title":"问题：jenkins无法安装插件","index":"3.1"}]},{"id":"jenkins角色配置","title":"jenkins角色配置","index":"4","children":[{"id":"1.-添加用户","title":"1. 添加用户","index":"4.1"},{"id":"2.-设置用户权限","title":"2. 设置用户权限","index":"4.2"}]},{"id":"简单了解系统设置","title":"简单了解系统设置","index":"5","children":[{"id":"使用html展示消息","title":"使用Html展示消息","index":"5.1"}]},{"id":"创建项目","title":"创建项目","index":"6","children":[{"id":"配置构建环境","title":"配置构建环境","index":"6.1"},{"id":"准备创建项目","title":"准备创建项目","index":"6.2"}]},{"id":"参数化构建","title":"参数化构建","index":"7","children":[{"id":"1.-设置构建类型","title":"1. 设置构建类型","index":"7.1"},{"id":"2.-设置构建分支","title":"2. 设置构建分支","index":"7.2"}]},{"id":"展示二维码","title":"展示二维码","index":"8","children":[{"id":"window脚本","title":"window脚本","index":"8.1"},{"id":"生成效果如下：","title":"生成效果如下：","index":"8.2"}]},{"id":"最后","title":"最后","index":"9"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1612097829/\" title=\"Jenkins自动化构建（一）玩转Android项目自动化打包\">https://blog.ixin.run/posts/1612097829/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}