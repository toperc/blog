{"title":"AndroidStudio项目导入的那些事","date":"2018-05-05T06:05:54.000Z","date_formatted":{"ll":"2018年5月5日","L":"2018/05/05","MM-DD":"05-05"},"link":"post/1525500354","comments":true,"tags":["编译与构建"],"categories":["Android"],"updated":"2021-01-14T08:08:54.887Z","content":"<p>公司有一个老项目，曾经因为市场的原因搁置了，最近重新探究决定重启该项目，当然开发任务就由我来主持负责。拿到老项目第一件事，不用说就是先将老项目导入到开发环境中，然后看看具体架构和业务，该抛弃的抛弃该优化的优化。</p>\n<a id=\"more\"></a>\n<h2 id=\"工欲善其事，必先利其器\">工欲善其事，必先利其器<a title=\"#工欲善其事，必先利其器\" href=\"#工欲善其事，必先利其器\"></a></h2>\n<p>对于AndroidStudio的安装和使用在这里顺便也重申一下，有些童鞋喜欢重装这些开发环境，用以时常给自己冲冲血，一般不是大变化建议还是不用太频繁安装为好，毕竟开发才是首要任务。</p>\n<h3 id=\"第一次启动androidstudio很慢\">第一次启动AndroidStudio很慢<a title=\"#第一次启动androidstudio很慢\" href=\"#第一次启动androidstudio很慢\"></a></h3>\n<p>Android第一次启动时在某种情况下会发现特别慢，这里的某种情况是多重因素的结合：</p>\n<ol>\n<li>没有梯子。</li>\n<li>宽带不好。</li>\n<li>电脑老旧。</li>\n</ol>\n<p>因为AndroidStudio第一次启动时要进行检查SDK更新，所以上边的第一个条件也算是致命点，程序员不会搬梯子有点说不过去，没有梯子到后边启动项目时下载gradle也是个麻烦事。</p>\n<p>当然没有梯子可以采用禁止检查SDK更新也能顺利启动，解决办法：<br>\n在AndroidStudio安装目录的bin文件夹下找到<code>idea.properties</code>文件，任意记事本工具打开并在文末添加<code>disable.android.first.run=true</code>,然后保存，随后就能顺利启动AndroidStudio了。</p>\n<p>idea.propertie文件位置：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/749DC5C883064E4D8C199087915EF3B4?method=download&amp;shareKey=0120519d201da42b1152fc23058c2670\" alt=\"禁止检查SDK图0\"></p>\n<p>idea.propertie文件添加禁止SDK检查更新：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/AF70093904DD4E1CA28B05D70026A8FF?method=download&amp;shareKey=17a45338999a433556113f0d904183b2\" alt=\"禁止检查SDK图1\"></p>\n<h3 id=\"androidstudio运行卡、慢\">AndroidStudio运行卡、慢<a title=\"#androidstudio运行卡、慢\" href=\"#androidstudio运行卡、慢\"></a></h3>\n<p>这个问题有点牵强了，碰到老人机硬性条件怎么处理，我想只能换电脑换硬盘扩内存了吧，这里给的方案是在硬性条件的基础上进一步提升软性条件进而提升性能。</p>\n<p>AndroidStudio每次更新从google出厂时，google在AndroidStudio内存开销上会定义一些参数，他认为我们的机器都很棒，所以这些参数相应都不高，然后试试并非如此，哈哈。这些参数在哪儿设置呢？在AndroidStudio安装目录的bin文件下（和上边一样）找到<code>studio.exe.vmoptions</code>、<code>studio64.exe.vmoptions</code>这两个文件，前一个是针对32位PC的，后者是针对64位的，如果你的电脑是64位只需要将后者内容中的相关参数调大即可。</p>\n<p>studio64.exe.vmoptions文件的位置：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/EF35A7C2A4694712B217151E799033BE?method=download&amp;shareKey=bde5a40b01af953cd48273d4a95fd856\" alt=\"AndroidStudio解决卡顿图0\"></p>\n<p>studio64.exe.vmoptions文件内容参数调整实例：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/14EF89941F4E448F9E2218CD1FC42E35?method=download&amp;shareKey=a398001c549d6cae7a1f3c7f097fb10e\" alt=\"AndroidStudio解决卡顿图1\"></p>\n<h3 id=\"androidstudio常用插件\">AndroidStudio常用插件<a title=\"#androidstudio常用插件\" href=\"#androidstudio常用插件\"></a></h3>\n<p>以下是个人总结的开发过程中常用的插件：</p>\n<ul>\n<li><strong>GsonFormat</strong><br>\n快速将json字符串转换成一个Java Bean。</li>\n<li><strong>Android ButterKnife Zelezny</strong><br>\n配合ButterKnife实现注解，从此不用写findViewById。</li>\n<li><strong>Android Parcelable code generator</strong><br>\nJavaBean序列化，快速实现Parcelable接口。</li>\n<li><strong>GenerateSerialVersionUID</strong><br>\n实现Serializable序列化bean中的serialVersionUID。</li>\n<li><strong>Lifecycle Sorter</strong><br>\n可以根据Activity或者fragment的生命周期对其生命周期方法位置进行先后排序，快捷键Ctrl + alt + K。</li>\n<li><strong>CodeGlance</strong><br>\n在右边可以预览代码，实现快速定位。</li>\n<li><strong>FindBugs-IDEA</strong><br>\n查找bug的插件，Android Studio也提供了代码审查的功能（Analyze-Inspect Code…）。</li>\n<li><strong>Material Theme UI</strong><br>\n添加Material主题到你的AS。</li>\n<li><strong>Markdown Navigator</strong><br>\nMarkdown实时预览插件。</li>\n<li><strong>LayoutFormatter</strong><br>\n一键格式化你的XML文件的Android Studio插件。</li>\n</ul>\n<h3 id=\"androidstudio常用快捷键\">AndroidStudio常用快捷键<a title=\"#androidstudio常用快捷键\" href=\"#androidstudio常用快捷键\"></a></h3>\n<p>以下是个人总结的开发过程中常用的快捷键：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl + shift + 空格                    代码补全</span><br><span class=\"line\">ctrl + shift + enter                   语法结构匹配</span><br><span class=\"line\">ctrl +alt + 空格                       代码提示。</span><br><span class=\"line\">ctrl +shift +&#x2F;                         段注释</span><br><span class=\"line\">ctrl + shift + ?                       xml注释</span><br><span class=\"line\">ctrl + &#x2F;                               行注释</span><br><span class=\"line\">ctrl + alt + L                         代码格式化</span><br><span class=\"line\">ctrl + alt + O                         格式化类库</span><br><span class=\"line\">alt + enter                            引入库</span><br><span class=\"line\">ctrl + j                               自动代码结构补全</span><br><span class=\"line\">Ctrl+P                                 方法参数提示</span><br><span class=\"line\">shift + F6                             本类或本类中属性、方法重命名</span><br><span class=\"line\">ctrl+shift+r                           全工程内部属性、方法替换</span><br><span class=\"line\">ctrl + shift + u                       大小写转换。 （用于全局或静态变量设定）</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;**************搜索**************&#x2F;</span><br><span class=\"line\">ctrl + f                               类中搜索</span><br><span class=\"line\">双击shift                              全局搜索文件</span><br><span class=\"line\">ctrl + shift +f                        全局任意搜索（有些时候与搜狗输入法冲突，可将输入法相关快捷键给屏蔽掉）</span><br><span class=\"line\">ctrl + N                               搜索类</span><br><span class=\"line\">ctrl + shift + N                       搜索文件</span><br><span class=\"line\">ctrl + shift +alt +N                   搜索方法或变量</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;**************代码定位***********&#x2F;</span><br><span class=\"line\">ctrl + alt + 左方向（右方向）           代码查看时返回上一处，回退下一处。</span><br><span class=\"line\">Alt+ left&#x2F;right                        切换代码视图</span><br><span class=\"line\">Alt+ Up&#x2F;Down                           在方法间快速移动定位</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;**************移动复制***********&#x2F;</span><br><span class=\"line\">Ctrl+Shift+Up&#x2F;Down                     整块代码向上&#x2F;下移动。（一行，或一个接口实现或一个方法）</span><br><span class=\"line\">ctrl + y                               删除整行。</span><br><span class=\"line\">ctrl + D                               复制该行到下一行。</span><br><span class=\"line\">ctrl +c 、ctrl +v                      整行复制和粘贴</span><br></pre></td></tr></table></figure>\n<p>更多官方推荐默认快捷键请移步：<br>\n<a href=\"https://resources.jetbrains.com/storage/products/intellij-idea/docs/IntelliJIDEA_ReferenceCard.pdf\">https://resources.jetbrains.com/storage/products/intellij-idea/docs/IntelliJIDEA_ReferenceCard.pdf</a><br>\n或者点击菜单上help按钮下的&quot;Keymap Reference&quot;查看。</p>\n<h2 id=\"项目导入遇到的问题及解决方案\">项目导入遇到的问题及解决方案<a title=\"#项目导入遇到的问题及解决方案\" href=\"#项目导入遇到的问题及解决方案\"></a></h2>\n<p>项目导入过程常见的问题有以下几个：</p>\n<ul>\n<li>老项目的支持的SDK编译版本在新环境下要重新下载。</li>\n<li>兼容包v4或v7在新环境下默认的与SDK编译环境不一致。</li>\n<li>gradle版本和gradle插件版本不一致，甚至起初并没有gradle环境需要全新支持（eclipse）。</li>\n<li>导入过程中网络环境问题。</li>\n<li>老项目本身的代码问题，项目中的库在新环境下的兼容问题。</li>\n</ul>\n<h3 id=\"认清几个概念\">认清几个概念<a title=\"#认清几个概念\" href=\"#认清几个概念\"></a></h3>\n<p>1.主Module（Module和model不一样，前者指模块，后者指模型，后者主要用于放一些实体类bean）中的build.gradle，先放一张图：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/984709BCBA4443CD947E5941D131176E?method=download&amp;shareKey=2061e956af8c4f6e83beae85208aba20\" alt=\"主module下的build.gradle\"></p>\n<ul>\n<li>\n<p>compileSdkVersion<br>\n编译所用的Android SDK Platfom的大版本号，假如此版本号比较低，则编写应用时某些新的方法（Api）不能使用，推荐最新的，时刻屏蔽掉官方准备淘汰的一些API。</p>\n</li>\n<li>\n<p>buildToolsVersion<br>\n项目构建的版本号，即Android SDK Build-Tools的版本号，其大版本号要&gt;=compileSdkVersion，否则不允许构建，推荐在大版本号和compileSdkVersion保持一致同时选择Revision最高的。</p>\n</li>\n<li>\n<p>minSdkVersion<br>\n允许安装此应用的手机系统最低版本号。</p>\n</li>\n<li>\n<p>targetSdkVersion<br>\n目标系统的版本号，假如说设置为Android4.4的版本号（ApiLevel为19），则在Android6.0的系统上安装此应用则不能使用运行时权限。此处结合实际情况设置，推荐采用和compileSdkVersion保持一致的版本号。</p>\n</li>\n<li>\n<p>appcompat-v7<br>\nAndroid Support支持库，也叫Android兼容包，主要作用能在低版本的Android系统中运行高版本SDK所带来的新特效（特定框架组件、UI元素），目的是全平台视图效果保持一致。末尾大版本号和compileSdkVersion保持一致，保证能够采兼容到全平台，小版本号可参阅官方文档：<a href=\"https://developer.android.com/topic/libraries/support-library/revisions?hl=zh-CN\">https://developer.android.com/topic/libraries/support-library/revisions?hl=zh-CN</a></p>\n<p>Android Support支持库常见是v4和v7（依赖于 v4 支持库），还有v8、v13、v14、v17等。v4库项目引入默认支持，v7最常用，其他的根据实际情况自行添加。注意：Support库的大版本号要与compileSdkVersion的大版本号相同，且所有的库的版本号要相同。</p>\n<p>各类支持库的区别：<br>\nv4：最低支持android1.6，包含ViewPager、Fragment等。<br>\nv7：最低支持android2.3，v7依赖于v4，包含ActionBar、receyclerview等设计支持库(Material Design)：提供了一些符合设计风格的控件，比如悬浮操作按钮。<br>\n其他支持库参考：<a href=\"https://developer.android.com/topic/libraries/support-library/features?hl=zh-CN\">https://developer.android.com/topic/libraries/support-library/features?hl=zh-CN</a></p>\n</li>\n</ul>\n<p>2.项目中gradle配置：</p>\n<ul>\n<li>gradle版本<br>\ngradel是androidstudio默认的构建工具，主要用于项目的构建、依赖、打包、发布等，每次androidstudio版本更新时顺带会把gradle版本也进行更新。</li>\n<li>gradle构建插件版本<br>\ngradle是在maven、ant等前辈构建工具的基础上补齐他们的短板，所运用的平台也不仅仅是android，所以为了更好的服务于android开发，官方根据gradle特定版本范围单独开发一个用于构建android项目的gradle插件。</li>\n</ul>\n<p>gradle版本设置：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/FD1414E9C3D94F5BA5AC7FC5A6EC4547?method=download&amp;shareKey=9e7f1205e0a895ac1c4ec68af7c34c4b\" alt=\"gradle版本设置\"></p>\n<p>gradle构建插件版本设置：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/80C6CE1B698248F380A3C7AFEBD31D14?method=download&amp;shareKey=8afd0efc71171cf0dd53f65a47a3b17c\" alt=\"gradle构建插件版本设置\"></p>\n<p>gradle和gradle构建插件版本对应关系：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/4195BBC3F9E7430CB87BC15F49DC011C?method=download&amp;shareKey=5e5aeeccadcf758778df649bb32a2456\" alt=\"gradle和gradle构建插件版本对应关系\"></p>\n<p>更多可参考官方说明：<a href=\"https://developer.android.google.cn/studio/releases/gradle-plugin#updating-plugin\">https://developer.android.google.cn/studio/releases/gradle-plugin#updating-plugin</a></p>\n<p>3.SDK Manager中相关：</p>\n<ul>\n<li>Android SDK Platfom<br>\nAndroid开发API支持平台，AndroidStudio初次安装时默认会提示下载最新的SDK，强烈推荐下载安装稳定版最新的版本。compileSdkVersion所对应的就是这里已经下载安装过的某个版本号，一般选择的是稳定版最新的。</li>\n<li>Android SDK Build-Tools<br>\nAndroid SDK构建工具，包含：aapt工具，aidl工具等。推荐下载安装最新的。buildToolsVersion所对应的就是Android SDK Build-Tools的版本号，一般大版本号和compileSdkVersion保持一致同时选择Revision最高的。</li>\n<li>Android SDK Platform-Tools<br>\n针对pc端和移动端进行交互的一些工具：比如adb工具（通过该工具pc端获取移动端log信息），sqlite3工具（通过该工具查询移动端数据库信息）。结合实际情况更新。</li>\n<li>Android SDK Tools<br>\n针对pc平台下使用的工具：比如模拟器，.9patch工具，性能追踪可视化工具traceview。结合实际情况更新。</li>\n</ul>\n<h3 id=\"解决方案\">解决方案<a title=\"#解决方案\" href=\"#解决方案\"></a></h3>\n<p>通过对以上概念的认识，导入老项目也就是分分钟的事了，通常做三件事即可：</p>\n<ul>\n<li>备好梯子，没有梯子那就做搬运工吧。</li>\n<li>主Module中的build.gradle，buildToolsVersion、targetSdkVersion、appcompat-v7大版本号依据compileSdkVersion设置，小版本通过下载选择最新的或者依赖官方最新的（结合情况来），minSdkVersion自己看情况设置。</li>\n<li>gradle构建插件版本设置结合与gradle版本的关系设置，gradle的版本选择当前市面较新的（结合当前AndroidStudio的版本）。</li>\n</ul>\n<p>通过上边的三步一般都能够解决了，其实还有更简单的方法就是新建一个应用，将老项目中的这些参数全部改成和新项目中的一样，哈哈。然后Sync，必要时Clean、Rebuild一下，当然还有代码上的问题还需要慢慢调试解决。</p>\n<p>有些时候网络慢的原因也可能是google在作怪，可进入settings&gt;Plugins将google analytic upload插件对勾去除，重启androidstudio.</p>\n<h2 id=\"修改包名便捷方法\">修改包名便捷方法<a title=\"#修改包名便捷方法\" href=\"#修改包名便捷方法\"></a></h2>\n<p>有些时候针对老项目包名并不适合，我们需要进行调整，如果单纯想修改项目某个目录的话可以直接重名项目中的某个Package，如果想调整项目应用的包名，除了修改项目整个包名，还要修改项目的applicationId与包名保持一致，这样打包的应用才能算一个全新的应用。</p>\n<p>两步走：<br>\n1.AndroidManifest修改项目包名<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/9EF27E21B6A749A9B0D5781D561E53D2?method=download&amp;shareKey=49f646717964ede77819d2f1254fdbb0\" alt=\"修改包名\"></p>\n<p>2.主Module中的build.gradle中修改applicationId，并Sync。<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/053F971FEEA2446980054705AC3B9E44?method=download&amp;shareKey=1a91b8dbb298a2364a28d94c28fb554f\" alt=\"修改applicationId\"></p>\n<p>以上是针对项目导入过程的一些总结，后边若再有其他问题再来补充吧，至此告一段落，打完收工。</p>\n","prev":{"title":"AndroidStudio工程目录和项目资源文件介绍","link":"post/1536976596"},"next":{"title":"Android项目中Git忽略文件.gitignore的写法","link":"post/1525445463"},"plink":"https://blog.ixin.run/post/1525500354/","toc":[{"id":"工欲善其事，必先利其器","title":"工欲善其事，必先利其器","index":"1","children":[{"id":"第一次启动androidstudio很慢","title":"第一次启动AndroidStudio很慢","index":"1.1"},{"id":"androidstudio运行卡、慢","title":"AndroidStudio运行卡、慢","index":"1.2"},{"id":"androidstudio常用插件","title":"AndroidStudio常用插件","index":"1.3"},{"id":"androidstudio常用快捷键","title":"AndroidStudio常用快捷键","index":"1.4"}]},{"id":"项目导入遇到的问题及解决方案","title":"项目导入遇到的问题及解决方案","index":"2","children":[{"id":"认清几个概念","title":"认清几个概念","index":"2.1"},{"id":"解决方案","title":"解决方案","index":"2.2"}]},{"id":"修改包名便捷方法","title":"修改包名便捷方法","index":"3"}],"reward":true,"copyright":{"custom":"转载请注明出处，谢谢支持。"}}