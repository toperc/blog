{"title":"网络优化之HttpDNS实践","date":"2019-04-07T15:07:18.000Z","date_formatted":{"ll":"2019年4月7日","L":"2019/04/07","MM-DD":"04-07"},"link":"posts/1554649638","comments":true,"tags":["Android架构","CDN","DNS","网络"],"categories":["计算机基础"],"updated":"2021-01-29T12:51:44.676Z","content":"<p>**DNS是什么？**作为计算机专业的学生应该都不陌生，DNS全称“Domain Name System”，我们常常又叫做域名解析系统。每一个接入互联网的机器都有一个唯一的IP（形式是xxxx.xxxx.xxxx.xxxx），网上的人通过这个IP就可以访问到这台机器。但是看到那16个x是不是懵了，为了让别人更容易发现和记住怎么连接这台设备，需要对这个IP包装一下，额外起一个好记的名字，例如百度的网址是 <code>baidu.com</code>，再例如我的博客（i猩人）<a href=\"https://ixin.run\">https://ixin.run</a> 。从ixin.run到我的博客服务器这个阶段就需要DNS域名解析了，但是这个过程也容易被别人劫持攻击，有可能本来是正常访问一篇博客却弹出一个广告页。App大多是面向接口开发，即使不是网页，遇到这样的事也是很危险的，一些金融类或者电商类的App更不能忽视。</p>\n<a id=\"more\"></a>\n<h2 id=\"顶级域名、一级域名、二级域名、三级域名、父域名、子域名\">顶级域名、一级域名、二级域名、三级域名、父域名、子域名<a title=\"#顶级域名、一级域名、二级域名、三级域名、父域名、子域名\" href=\"#顶级域名、一级域名、二级域名、三级域名、父域名、子域名\"></a></h2>\n<p>在谈DNS，先了解一下域名知识。我们知道域名至少由两个词组成，中间用“.”分割，例如<code>baidu.com</code>。</p>\n<ul>\n<li>顶级域名<br>\n顶级域名常常被用来指域名后缀，例如表示工商企业的 .com，表示网络提供商的 .net，表示非盈利组织的 .org等。</li>\n<li>一级域名<br>\n一级域名又叫顶级域名，是由一个“.”分割出来的域名，例如<code>baidu.com</code>。</li>\n<li>二级域名<br>\n二级域名是由两个“.”分割出来的，例如<code>www.baidu.com</code>。</li>\n<li>三级域名<br>\n三级域名同理是由三个“.”分割出来的。</li>\n<li>父域名、子域名<br>\n这个地方是相对来说的，<code>www.sina.com.cn</code>和<code>news.sina.com.cn</code>都是<code>sina.com.cn</code>的子域名，其中<code>sina.com.cn</code>就是父域名。同样，<code>sina.com.cn</code>其实又可以看作是<code>com.cn</code>的子域名；而<code>com.cn</code>又是<code>.cn</code>的一个子域名。</li>\n</ul>\n<h2 id=\"dns分类\">DNS分类<a title=\"#dns分类\" href=\"#dns分类\"></a></h2>\n<p>DNS按照功能角色分类，个人总结分为如下四类。</p>\n<h3 id=\"1.权威dns：\">1.权威DNS：<a title=\"#1.权威dns：\" href=\"#1.权威dns：\"></a></h3>\n<p>权威DNS是经过上一级授权对域名进行解析的服务器，同时它可以把解析授权转授给其他人，如COM顶级服务器可以授权<code>ABC.COM</code>这个域名的权威服务器为<code>NS.ABC.COM</code>，同时<code>NS.ABC.COM</code>还可以把授权转授给<code>NS.DDD.COM</code>，这样<code>NS.DDD.COM</code>就成了<code>ABC.COM</code>实际上的权威服务器了。平时我们解析域名的结果都源自权威DNS。</p>\n<p>权威DNS即最终决定域名解析结果的服务器，开发者可以在权威DNS上配置、变更、删除具体域名的对应解析结果信息。阿里云云解析（ <a href=\"https://wanwang.aliyun.com/domain/dns\">https://wanwang.aliyun.com/domain/dns</a> ）即权威DNS服务提供商。</p>\n<h3 id=\"2.递归dns:\">2.递归DNS:<a title=\"#2.递归dns:\" href=\"#2.递归dns:\"></a></h3>\n<p>递归DNS又称为Local DNS，它没有域名解析结果的决定权，但代理了用户向权威DNS获取域名解析结果的过程。递归DNS上有缓存模块，当目标域名存在缓存解析结果并且<a href=\"https://baike.baidu.com/item/TTL/130248?fr=aladdin\" target=\"_blank\">TTL</a>未过期时（每个域名都有TTL时间，即有效生存时间，若域名解析结果缓存的时间超过TTL，需要重新向权威DNS获取解析结果），递归DNS会返回缓存结果，否则，递归DNS会一级一级地查询各个层级域名的权威DNS直至获取最终完整域名的解析结果。</p>\n<h3 id=\"3.转发dns:\">3.转发DNS:<a title=\"#3.转发dns:\" href=\"#3.转发dns:\"></a></h3>\n<p>负责接受用户查询，并返回结果给用户。但这个结果不是按标准的域名解析过程得到的，而是直接把递归DNS的结果转发给用户。它也具备缓存功能。他主要使用在没有直接的互联网连接，但可以连接到一个递归DNS那里，这时使用转发DNS就比较合适。其缺陷是：直接受递归DNS的影响，服务品质较差。比如我们用的路由器里面的DNS就是这一类，用路由器的朋友可以看下本地电脑的DNS一般都是192.168.1.1。</p>\n<h3 id=\"4.公共dns:\">4.公共DNS:<a title=\"#4.公共dns:\" href=\"#4.公共dns:\"></a></h3>\n<p>公共DNS是递归DNS的一种特例，它是一种全网开放的递归DNS服务，而传统的递归DNS信息一般由运营商分发给用户。一个比较典型的公共DNS即Google的8.8.8.8，我们可以通过在操作系统配置文件中配置公共DNS来代替Local DNS完成域名解析流程。</p>\n<h2 id=\"域名解析过程\">域名解析过程<a title=\"#域名解析过程\" href=\"#域名解析过程\"></a></h2>\n<p>在实际的使用过程中，我们通常不需要手工指定自己的Local DNS地址。运营商会通过DHCP协议在系统网络初始化阶段将Local DNS地址分配给我们的计算机。当我们需要使用公共DNS服务时，我们就必须手工指定这些服务的地址。以Linux为例，我们可以通过在’/etc/resolv.conf’中添加Local DNS地址项来改变本机Local DNS的地址。</p>\n<p>以下是<code>www.baidu.com</code>域名解析过程：</p>\n<ol>\n<li>\n<p>我有一台计算机，通过ISP（Internet Service Provider，互联网服务提供商，即向广大用户综合提供互联网接入业务、信息业务和增值业务的电信运营商）接入了互联网，那么ISP就会给我分配一个DNS服务器，这个DNS服务器不是权威服务器，而是相当于一个代理的dns解析服务器（递归DNS），他会帮你迭代权威服务器返回的应答，然后把最终查到IP返回给你。</p>\n</li>\n<li>\n<p>现在我的计算机要向这台ISPDNS发起请求查询www.baidu.com这个域名了，(这里的ISP也可能是公共DNS，例如我们自己电脑手动配置的8.8.8.8)</p>\n</li>\n<li>\n<p>ISPDNS拿到请求后，先检查一下自己的缓存(Local DNS)中有没有这个地址，有的话就直接返回。这个时候拿到的ip地址，会被标记为非权威服务器的应答。</p>\n</li>\n<li>\n<p>如果缓存中没有的话，ISPDNS会从配置文件里面读取13个根域名服务器的地址（这些地址是不变的，直接在BIND的配置文件中），</p>\n</li>\n<li>\n<p>然后向其中一台发起请求。</p>\n</li>\n<li>\n<p>根服务器拿到这个请求后，知道他是.com这个顶级域名下的，所以就会返回com域中的NS记录，一般来说是13台主机名和IP。</p>\n</li>\n<li>\n<p>然后ISPDNS向其中一台再次发起请求，com域的服务器发现你这请求是baidu.com这个域的，我一查发现了这个域的NS，那我就返回给你，你再去查。</p>\n</li>\n<li>\n<p>ISPDNS不厌其烦的再次向baidu.com这个域的权威服务器发起请求，baidu.com收到之后，查了下有www的这台主机，就把这个IP返回给你了，</p>\n</li>\n<li>\n<p>然后ISPDNS拿到了之后，将其返回给了客户端，并且把这个保存在高速缓存中。</p>\n</li>\n</ol>\n<p>图解DNS解析过程：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/31EB12BFABE14B68B4E44117F34692E2?method=download&amp;shareKey=65990704e6626ffae792d76e883072ee\" alt=\"图解DNS解析过程\"></p>\n<h2 id=\"传统域名解析所面临的窘境\">传统域名解析所面临的窘境<a title=\"#传统域名解析所面临的窘境\" href=\"#传统域名解析所面临的窘境\"></a></h2>\n<h3 id=\"域名劫持\">域名劫持<a title=\"#域名劫持\" href=\"#域名劫持\"></a></h3>\n<p>本来域名A应该返回的DNS解析结果的IP1被恶意替换为了IP2，导致对A的访问失败或访问了一个不安全的站点。以下是两种可能发生的劫持方式：</p>\n<p>1）攻击Local DNS周边：一方面，黑客侵入了宽带路由器并将终端用户指定的Local DNS篡改为黑客自己伪造的Local DNS；另一方面，由于传统DNS解析主要是基于UDP协议，攻击者可以监听终端用户的域名解析请求，并在Local DNS返回正确结果之前将伪造的DNS解析响应传递给终端用户，进而控制终端用户的域名访问行为。</p>\n<p>2）攻击Local DNS缓存：最常碰到的域名劫持现象是缓存污染。由于Local DNS在接收到域名解析请求时首先会查找缓存，如果命中就会直接返回缓存结果，不再进行递归DNS查询。如果黑客将缓存结果指向第三方的广告页，就会导致用户的访问请求被引导到这些广告页地址上。</p>\n<p>第二种针对Local DNS缓存的污染往往能带来更明显的群体伤害，比如某个省份某个运营商的用户群可能因为该地区Local DNS的缓存污染而导致群体性访问服务异常。而且这类缓存污染行为往往是间歇性、局部性发生的，没有明显的规律，导致开发者很难对其进行量化、评估、预防。</p>\n<h3 id=\"调度不精准\">调度不精准<a title=\"#调度不精准\" href=\"#调度不精准\"></a></h3>\n<p>基于传统Local DNS的域名解析还会带来域名调度精准性的问题。有这样一种场景，为了应用后续的访问性能，用户希望的初始的DNS解析结果带有地域或运营商性质，比如CDN。</p>\n<p>1）部分Local DNS供应商为了降低运营成本，会将发给自己的域名解析请求转发给其他供应商的Local DNS节点，如下图所示，<a href=\"http://xn--cdn-4x5f88or9bntnwqsu1c2q4ef1e.aliyun.com\">用户请求解析的是cdn.aliyun.com</a>，分配给用户的是Local DNS A，该DNS节点为了节省成本，把该次请求转发给了另一运营商的Local DNS B。而最终的权威DNS在进行域名解析时可能会根据Local DNS的IP信息进行智能调度（比如采用地理位置就近接入的调度策略），分配与Local DNS B 78.29.29.1相同运营商并且地理位置最近的CDN节点78.29.29.2，然而这个CDN节点对于终端135.35.35.1并不是最优的CDN节点，他们分属不同的运营商，并且地理位置上可能相隔很远。这类解析转发行为会严重影响域名解析的精准性并对用户业务访问延迟带来影响。<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/0758E7E4937A40AE916ADD40631F4A97?method=download&amp;shareKey=991a541d61900a2dc072d743d634bbb5\" alt=\"解析转发调度不精准\"></p>\n<p>2）除了解析转发对调度精准性带来的影响外，Local DNS的布署情况同样影响着域名智能解析的精准性。受成本因素制约，部分运营商Local DNS部署分布并不均匀，比如在东部地区部署比较密集，在西部地区部署比较稀疏。当一位西藏用户准备访问CDN节点时，我们预期他应该会被调度到西藏的CDN节点A上以实现就近接入和访问加速。但由于Local DNS的资源有限，西部地区的终端用户被统一调度到青海的Local DNS B上，这时候权威DNS根据Local DNS B的IP进行CDN域名的智能解析，并将青海的CDN节点B返回给西藏用户，导致西藏地区用户的网络访问延迟上升。另一种情况是Local DNS的分配甚至并非遵循就近原则，比如有实际案例显示西藏用户甚至被分配了北京的Local DNS节点C，导致西藏的用户在进行CDN资源访问时被调度到了北京的CDN节点C上，类似的由于调度精度的缺失带来的访问体验的影响是非常严重的。<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/C0D8E225337C431CA34FBF7C2041BE4F?method=download&amp;shareKey=9f2a51cbdd11f044bf94aea8a20f149d\" alt=\"DNS部署不均匀调度不精准\"></p>\n<h3 id=\"解析生效滞后\">解析生效滞后<a title=\"#解析生效滞后\" href=\"#解析生效滞后\"></a></h3>\n<p>Local DNS是由各个地区不同运营商独立部署的，服务质量参差不齐。在对域名解析缓存的处理上，各个独立节点的实现策略也有区别，比如部分节点为了节省开支忽略了域名解析结果的TTL时间限制，导致用户在权威DNS进行解析变更，但解析结果在全网生效的周期非常漫长（最长生效时间甚至高达48小时）。部分业务场景下开发者对域名解析结果变更的生效时间非常敏感，比如当业务服务器受到攻击时，我们需要最快速地将业务IP切换到另一组集群上，如果全网解析生效不够迅速，可能直接导致用户业务访问的异常，造成严重事故。<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/847465BE337F49DEBD55068A15AACA50?method=download&amp;shareKey=caa16aa63088a88e7e66c64cba956615\" alt=\"解析生效滞后\"></p>\n<h3 id=\"延迟大\">延迟大<a title=\"#延迟大\" href=\"#延迟大\"></a></h3>\n<p>DNS首次查询或缓存过期后的查询，需要递归遍历多个DNS服务器以获取最终的解析结果，这增加了网络请求的前置延时时间。特别是在移动互联网场景下，移动网络质量参差不齐，弱网环境的RTT时间可能高达数百毫秒，对于一次普通的业务请求而言，上述延时是非常沉重的负担。另一方面，弱网环境下的解析超时、解析失败等现象屡见不鲜，如何合理优化DNS解析对于整体网络访问质量的提升至关重要。</p>\n<h2 id=\"httpdns\">HTTPDNS<a title=\"#httpdns\" href=\"#httpdns\"></a></h2>\n<p>上边由于传统的DNS解析种种弊端，HTTPDNS应运而生。HTTPDNS能够有效避免Local DNS造成的域名劫持问题和调度不精准问题。</p>\n<h3 id=\"工作原理\">工作原理<a title=\"#工作原理\" href=\"#工作原理\"></a></h3>\n<p>HTTP DNS使用HTTP协议进行域名解析，代替现有Local DNS基于UDP的DNS协议。域名解析请求直接发送到HTTP DNS服务端，绕过运营商的Local DNS。</p>\n<h3 id=\"相关优点\">相关优点<a title=\"#相关优点\" href=\"#相关优点\"></a></h3>\n<p>除了解决传统DNS的容易劫持和调度不精准等问题，基于HTTP协议的设计可以适用于几乎所有的网络环境，同时保留了鉴权、HTTPS等更高安全性的扩展能力，避免恶意攻击劫持行为。而商业化的HTTP DNS服务（比如阿里和腾讯的HTTP DNS）对缓存管理有严格的安全保障，避免了类似Local DNS的缓存污染的问题。</p>\n<h3 id=\"如何接入\">如何接入<a title=\"#如何接入\" href=\"#如何接入\"></a></h3>\n<p>目前国内比较给力的DNS解析供应商有：</p>\n<ul>\n<li><a href=\"https://www.aliyun.com/product/httpdns\" target=\"_blank\">阿里云 HTTPDNS</a></li>\n<li><a href=\"https://cloud.tencent.com/product/hd\" target=\"_blank\">腾讯云 HTTPDNS</a></li>\n<li><a href=\"https://www.dnspod.cn/httpdns\" target=\"_blank\">DNSPOD | D+</a></li>\n</ul>\n<p>其中DNSPOD有免费版本可供使用，我们进入其网站的<a href=\"https://www.dnspod.cn/httpdns/guide\" target=\"_blank\">接入页面</a>，能够看到其收费信息和接入指南。一般来说一个服务提供商应该会想所有客户端提供响应的SDK以方便使用，不过这个 DNSPOD 没有，他只提供了一个C语言版本，如果是企业用户，他会给提供一个定制的SDK以供使用，对于免费用户，如果不用这个C语言版本，还有一个选择，那就是开源的第三方SDK：</p>\n<ul>\n<li><a href=\"https://github.com/SinaMSRE/HTTPDNSLib\" target=\"_blank\">新浪-安卓版(支持D+企业版加密功能)</a></li>\n<li><a href=\"https://github.com/qiniu/happy-dns-android\" target=\"_blank\">七牛-安卓版(支持D+企业版加密功能)</a></li>\n<li><a href=\"https://github.com/qiniu/happy-dns-objc\" target=\"_blank\">七牛-OC版(支持D+企业版加密功能)</a></li>\n</ul>\n<p>个人建议如果是企业开发建议还是选择阿里或者腾讯云的，官方文档比较详细，另外技术支持也比较好，比较稳定。当然如果是个人开发者可以看看第三种。</p>\n<h2 id=\"移动端域名解析最佳方案\">移动端域名解析最佳方案<a title=\"#移动端域名解析最佳方案\" href=\"#移动端域名解析最佳方案\"></a></h2>\n<p>android端针对DNS需要优化最多的大概在两个地方：</p>\n<ul>\n<li>WebView请求URL</li>\n<li>OKHttp数据接口请求</li>\n</ul>\n<p>这里的对接过程我就不详细阐述了，拿阿里云HTTPDNS来说，官方文档很详细，可查看以下链接进行自行对接学习：</p>\n<ul>\n<li><a href=\"https://help.aliyun.com/document_detail/60181.html?spm=a2c4g.11186623.6.568.32ac5b23vWKsr8\" target=\"_blank\">Webview + HttpDns最佳实践</a></li>\n<li><a href=\"https://help.aliyun.com/document_detail/52008.html?spm=a2c4g.11186623.6.570.6d9e623d3lR0Av\" target=\"_blank\">HttpDns+OkHttp最佳实践</a></li>\n</ul>\n<h2 id=\"cdn加速\">CDN加速<a title=\"#cdn加速\" href=\"#cdn加速\"></a></h2>\n<p>上边也提到了CDN的知识，CDN是什么？CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，<strong>使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率</strong>。</p>\n<p>CDN的基本原理是广泛采用各种缓存服务器，将这些缓存服务器分布到用户访问相对集中的地区或网络中，在用户访问网站时，利用全局负载技术将用户的访问指向距离最近的工作正常的缓存服务器上，由缓存服务器直接响应用户请求。</p>\n<p>CDN的关键技术主要有内容存储、分发技术和负载均衡等。具体详细说明可参阅<a href=\"https://baike.baidu.com/item/CDN/420951?fr=aladdin\" target=\"_blank\">百度百科</a></p>\n<p>目前市面上阿里云、腾讯云、七牛云等均提供有CDN加速服务，可根据个体情况进行接入。</p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li><a href=\"https://help.aliyun.com/product/30100.html?spm=a2c4g.11186623.6.540.5cda623dn0n0TK\">https://help.aliyun.com/product/30100.html?spm=a2c4g.11186623.6.540.5cda623dn0n0TK</a></li>\n<li><a href=\"https://www.aliyun.com/product/httpdns\">https://www.aliyun.com/product/httpdns</a></li>\n<li><a href=\"https://yq.aliyun.com/articles/58967?spm=a2c4g.11186623.2.11.139a702dOgB32o#2\">https://yq.aliyun.com/articles/58967?spm=a2c4g.11186623.2.11.139a702dOgB32o#2</a></li>\n</ul>\n","prev":{"title":"Android开发之Fragment知识总结","link":"posts/1555602958"},"next":{"title":"谈谈session、cookie、token的区别","link":"posts/1554395079"},"plink":"https://blog.ixin.run/posts/1554649638/","toc":[{"id":"顶级域名、一级域名、二级域名、三级域名、父域名、子域名","title":"顶级域名、一级域名、二级域名、三级域名、父域名、子域名","index":"1"},{"id":"dns分类","title":"DNS分类","index":"2","children":[{"id":"1.权威dns：","title":"1.权威DNS：","index":"2.1"},{"id":"2.递归dns:","title":"2.递归DNS:","index":"2.2"},{"id":"3.转发dns:","title":"3.转发DNS:","index":"2.3"},{"id":"4.公共dns:","title":"4.公共DNS:","index":"2.4"}]},{"id":"域名解析过程","title":"域名解析过程","index":"3"},{"id":"传统域名解析所面临的窘境","title":"传统域名解析所面临的窘境","index":"4","children":[{"id":"域名劫持","title":"域名劫持","index":"4.1"},{"id":"调度不精准","title":"调度不精准","index":"4.2"},{"id":"解析生效滞后","title":"解析生效滞后","index":"4.3"},{"id":"延迟大","title":"延迟大","index":"4.4"}]},{"id":"httpdns","title":"HTTPDNS","index":"5","children":[{"id":"工作原理","title":"工作原理","index":"5.1"},{"id":"相关优点","title":"相关优点","index":"5.2"},{"id":"如何接入","title":"如何接入","index":"5.3"}]},{"id":"移动端域名解析最佳方案","title":"移动端域名解析最佳方案","index":"6"},{"id":"cdn加速","title":"CDN加速","index":"7"},{"id":"参考","title":"参考","index":"8"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1554649638/\" title=\"网络优化之HttpDNS实践\">https://blog.ixin.run/posts/1554649638/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}