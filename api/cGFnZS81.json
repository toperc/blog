{"per_page":10,"total":10,"current":5,"data":[{"title":"Android数据库GreenDao的使用完全解析","date":"2019-07-23T12:20:19.000Z","date_formatted":{"ll":"2019年7月23日","L":"2019/07/23","MM-DD":"07-23"},"excerpt":"<p>最近一直在处理公司项目本地数据库，原来的订单数据都是采用SP加密保存的，但SP仅仅适合数据量小的数据存储，随着功能的扩展发现数据越来越多越来越杂，所以这部分数据全部迁移到本地数据库还是有必要的，之前项目已经采用了Greendao，这块本来也想做个总结，但是greendao知识点比较丰富，后来上网发现别人总结的一篇很全面——<a href=\"https://www.jianshu.com/p/53083f782ea2\" target=\"_blank\">《一篇技术好文之Android数据库 GreenDao的使用完全解析》</a>，这里就做一个转载记录，方便工作过程中查阅调优。<strong>另外特别说明一下Greendao官方已经不再维护了</strong>，替代方案也有很多，例如<code>ObjectBox</code>（与Greendao同一公司）、<code>Realm</code>、<code>Room</code>（Google官方）等。本篇也有额外说明，如果想更好的使用Greendao，请结合另外一篇<a href=\"https://blog.csdn.net/sinat_15877283/article/details/51098477\" target=\"_blank\">《DataBase 数据库整理（greenDao示例）》</a>查看，会起到事半功倍的效果。</p>\n<blockquote>\n<p>本文主要从如下几个方面进行讲解：</p>\n<ol>\n<li>存储的数据库结构</li>\n<li>GreenDao的优缺点</li>\n<li>GreenDao的使用配置</li>\n<li>使用GreenDao实现数据的增删改查</li>\n<li>GreenDao的注解使用</li>\n<li>GreenDao的关系处理</li>\n<li>GreenDao的升级</li>\n<li>GreenDao数据库加密</li>\n<li>项目地址</li>\n<li>总结</li>\n<li>参考博客</li>\n</ol>\n</blockquote>","link":"posts/1563884419","tags":["SQLite","数据持久化"],"categories":["Android"]},{"title":"对象拷贝性能对比分析","date":"2019-07-20T04:30:09.000Z","date_formatted":{"ll":"2019年7月20日","L":"2019/07/20","MM-DD":"07-20"},"excerpt":"<p>对象拷贝可分为浅拷贝和深拷贝，在开发过程中深拷贝不是随处可见，大部分是引用的赋值，也即是内存地址的引用。如果简单的类似<code>Student studen1 = student0</code>这样便认为复制了一份，这就大错特错了，有些时候你会莫名的发现studen1没有任何操作里面的属性却发生变化了，不用说一定是student0在某个时候被修改了，因为这两个对象引用的是一个地址的内容。开发过程中，因为嵌套过深，对象中转过多，着实需要小心。</p>\n<p>真正的拷贝是完全复制一份，从而与原对象隔离开，保证了原对象的定格，从而在操作过程中不用担心原对象被修改，必要时可“一键还原”。</p>","link":"posts/1563597009","tags":["Android基础","Java基础"],"categories":["Android"]},{"title":"Android开发之Context认识和运用","date":"2019-05-15T15:26:33.000Z","date_formatted":{"ll":"2019年5月15日","L":"2019/05/15","MM-DD":"05-15"},"excerpt":"<p>谈到Context，做Android的可以说是无人不知无人不晓，例如“XXXXActivity.this”、“getApplicationContext()”、“getContext()”等多种形式。虽然大家都知道，可是真正的去用好它也是一门艺术，深入不全免不了也要入坑。</p>\n<p>之前我们项目上新增了一个悬浮球功能，获取的是全局Application的WINDOW_SERVICE，然而那个悬浮球的实例却采用的Activity的context，存在的问题就是内存回收时将此context回收掉，导致windowManager不能控制这个view了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.IllegalArgumentException: View not attached to window manager</span><br></pre></td></tr></table></figure>\n<p>本篇就针对的Context深入学习做一个总结吧。</p>","link":"posts/1557933993","categories":["Android"]},{"title":"Android开发之UI线程和非UI线程","date":"2019-05-12T06:15:23.000Z","date_formatted":{"ll":"2019年5月12日","L":"2019/05/12","MM-DD":"05-12"},"excerpt":"<p>这里又是老生畅谈的话了，前边已经有多篇文章针对线程进行探究解释，Android开发过程中线程的体现更是淋漓尽致。Android开发过程中涉及到的线程从大类上分可以归为两类：UI线程和非UI线程。本篇就根据这两类做一个总结。</p>","link":"posts/1557641723","tags":["线程间通信"],"categories":["Android"]},{"title":"Java线程之ThreadLocal探讨","date":"2019-05-12T06:07:50.000Z","date_formatted":{"ll":"2019年5月12日","L":"2019/05/12","MM-DD":"05-12"},"excerpt":"<p>未wan待续。。。</p>","link":"posts/1557641270","categories":["Java"]},{"title":"Java线程总结","date":"2019-05-12T06:06:29.000Z","date_formatted":{"ll":"2019年5月12日","L":"2019/05/12","MM-DD":"05-12"},"excerpt":"<p>未wan待续。。。</p>","link":"posts/1557641189","tags":["多线程"],"categories":["Java"]},{"title":"Android开发之OKHttp知识归总","date":"2019-04-22T16:11:26.000Z","date_formatted":{"ll":"2019年4月23日","L":"2019/04/23","MM-DD":"04-23"},"excerpt":"<p>未wan待续。。。</p>","link":"posts/1555949544","categories":["Android"]},{"title":"Android开发之Fragment知识总结","date":"2019-04-18T15:55:14.000Z","date_formatted":{"ll":"2019年4月18日","L":"2019/04/18","MM-DD":"04-18"},"thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1555613909401&di=6752f902ac9ad9912b724457339747e7&imgtype=0&src=http%3A%2F%2Fnowre.com%2Fwp-content%2Fuploads%2F2019%2F02%2F000.jpg","excerpt":"<p>最近华为的新出的折叠手机（mate X）甚是火爆，甚至欧美国外发烧网友都为之疯狂，折起来是一步双面屏手机，展开有瞬间编程一个平板，最重要的特色就是分屏，可以左边看电视右边聊天。手机从塞班时代百花争艳到乔布斯的方块范畴，再到现在的不到不小的16:9，然后就是华为、三星的折叠系列，不出意料未来的手机又会到一个个性化高峰。这些对于我们开发者又是一个里程碑的挑战，以前我们只需要维护好一个页面，现在为了实行多样化需求，我们要尽可能在单个页面上做更多的碎片处理。</p>","link":"posts/1555602958","categories":["Android"]},{"title":"网络优化之HttpDNS实践","date":"2019-04-07T15:07:18.000Z","date_formatted":{"ll":"2019年4月7日","L":"2019/04/07","MM-DD":"04-07"},"excerpt":"<p>**DNS是什么？**作为计算机专业的学生应该都不陌生，DNS全称“Domain Name System”，我们常常又叫做域名解析系统。每一个接入互联网的机器都有一个唯一的IP（形式是xxxx.xxxx.xxxx.xxxx），网上的人通过这个IP就可以访问到这台机器。但是看到那16个x是不是懵了，为了让别人更容易发现和记住怎么连接这台设备，需要对这个IP包装一下，额外起一个好记的名字，例如百度的网址是 <code>baidu.com</code>，再例如我的博客（i猩人）<a href=\"https://ixin.run\">https://ixin.run</a> 。从ixin.run到我的博客服务器这个阶段就需要DNS域名解析了，但是这个过程也容易被别人劫持攻击，有可能本来是正常访问一篇博客却弹出一个广告页。App大多是面向接口开发，即使不是网页，遇到这样的事也是很危险的，一些金融类或者电商类的App更不能忽视。</p>","link":"posts/1554649638","tags":["Android架构","CDN","DNS","网络"],"categories":["计算机基础"]},{"title":"谈谈session、cookie、token的区别","date":"2019-04-04T16:24:39.000Z","date_formatted":{"ll":"2019年4月5日","L":"2019/04/05","MM-DD":"04-05"},"excerpt":"<p>作为移动端开发有好多同学对session、cookie、token这三个概念起初是陌生的，如果不涉及到架构很少接触的这一块。在android开发中用到的session和token比较多些，自己也是从小白一路走过来的，根据以往的学习和经验在这里就谈谈这三者的区别，以便于在日后的开发过程中温故而知新顺手能够拿来。</p>","link":"posts/1554395079","tags":["网络"],"categories":["计算机基础"]}]}