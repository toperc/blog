{"title":"浅入深出了解Android传感器","date":"2021-03-31T02:55:54.000Z","date_formatted":{"ll":"2021年3月31日","L":"2021/03/31","MM-DD":"03-31"},"link":"posts/1617159391","comments":true,"tags":["传感器"],"categories":["Android"],"updated":"2021-03-31T12:04:11.269Z","content":"<p>提到手机上的传感器大家应该都不陌生，比如说方向传感器、陀螺仪、重力传感器、光线传感器等。现在的手机基本集成少说有十几种传感器，面向将来的人工智能，这块知识也是我们必备的。</p>\n<a id=\"more\"></a>\n<h2 id=\"传感器分类\">传感器分类<a title=\"#传感器分类\" href=\"#传感器分类\"></a></h2>\n<p>Android 平台支持三大类传感器：</p>\n<ul>\n<li>动态传感器<br>\n这类传感器测量三个轴向上的加速力和旋转力。包含<code>加速度传感器</code>、<code>重力传感器</code>、<code>陀螺仪</code>和<code>旋转矢量传感器</code>。</li>\n<li>环境传感器<br>\n这类传感器测量各种环境参数，如环境气温、气压、照度和湿度。这个类别中包含<code>气压计</code>、<code>光度计</code>和<code>温度计</code>。</li>\n<li>位置传感器<br>\n这类传感器测量设备的物理位置。这个类别中包含<code>屏幕方向传感器</code>和<code>磁力计（电子罗盘）</code>。</li>\n</ul>\n<h2 id=\"传感器使用\">传感器使用<a title=\"#传感器使用\" href=\"#传感器使用\"></a></h2>\n<p>Android平台上google已经为我们提供了一套很方便的传感器框架，我们只需在这个框架下定义自己要用的传感器并实现其逻辑即可。</p>\n<p>传感器框架是 <code>android.hardware</code> 软件包的一部分，开发使用过程中主要用到了以下类和接口：</p>\n<ol>\n<li>SensorManager</li>\n<li>Sensor</li>\n<li>SensorEventListener</li>\n<li>SensorEvent</li>\n</ol>\n<p><strong>第一步：获取传感器管理对象</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SensorManager mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);</span><br></pre></td></tr></table></figure>\n<p><strong>第二步：指定传感器目标类型</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取传感器的类型(TYPE_ACCELEROMETER:加速度传感器)</span></span><br><span class=\"line\">Sensor sensor = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);</span><br></pre></td></tr></table></figure>\n<p>这里指定的传感器类型有很多种，这里暂且列举一些最常用的传感器：</p>\n<ul>\n<li>Sensor.TYPE_ACCELEROMETER： 三轴加速度传感器</li>\n<li>Sensor.TYPE_ORIENTATION：方向传感器</li>\n<li>Sensor.TYPE_GYROSCOPE：陀螺仪传感器</li>\n<li>Sensor.TYPE_MAGNETIC_FIELD：磁力传感器</li>\n<li>Sensor.TYPE_GRAVITY：重力传感器</li>\n<li>Sensor.TYPE_LINEAR_ACCELERATION：线性加速度传感器</li>\n<li>Sensor.TYPE_AMBIENT_TEMPERATURE：温度传感器</li>\n<li>Sensor.TYPE_LIGHT：光传感器</li>\n<li>Sensor.TYPE_PRESSURE：压力传感器</li>\n<li>Sensor.TYPE_ALL：所有类型的传感器，通过<code>getSensorList</code>返回所有支持的传感器列表。</li>\n</ul>\n<p><strong>第三步：注册传感器监听</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SensorEventListener mListener = <span class=\"keyword\">new</span> SensorEventListener() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 当传感器的值改变的时候回调该方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSensorChanged</span><span class=\"params\">(SensorEvent event)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// Do something with this sensor value.</span></span><br><span class=\"line\">        <span class=\"comment\">// The light sensor returns a single value.</span></span><br><span class=\"line\">        <span class=\"comment\">// Many sensors return 3 values, one for each axis.</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 当传感器精度发生改变时回调该方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAccuracyChanged</span><span class=\"params\">(Sensor sensor, <span class=\"keyword\">int</span> accuracy)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// Do something here if sensor accuracy changes.</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mSensorManager.registerListener(mListener, mSensor, SensorManager.SENSOR_DELAY_GAME);</span><br></pre></td></tr></table></figure>\n<p>其中registerListener最后一个参数是指定传感器获取数据的频率，有以下四种形式：</p>\n<ol>\n<li>SensorManager.SENSOR_DELAY_NORMAL，正常频率，一般对实时性要求不高的应用适合使用这种频率。</li>\n<li>SensorManager.SENSOR_DELAY_FASTEST，最快，延迟最小，同时也最消耗资源，一般只有特别依赖传感器的应用使用该频率，否则不推荐。</li>\n<li>SensorManager.SENSOR_DELAY_GAME，适合游戏的频率，一般有实时性要求的应用适合使用这种频率。</li>\n<li>SensorManager.SENSOR_DELAY_UI，适合普通应用的频率，这种模式比较省电，而且系统开销小，但延迟大，因此只适合普通小程序使用。</li>\n</ol>\n<p>一旦传感器监测到环境数据变化，便会回调两个实现方法：</p>\n<ul>\n<li>\n<p>onSensorChanged(SensorEvent event)：传感器报告了新值。<br>\n内部的SensorEvent 对象包含关于新传感器数据的信息，包括：数据的准确度、生成数据的传感器、生成数据的时间戳以及传感器记录的新数据，系统可能会频繁调用，切记<strong>请勿阻塞 onSensorChanged() 方法</strong>。</p>\n</li>\n<li>\n<p>onAccuracyChanged(Sensor sensor, int accuracy)：传感器的准确度发生了变化。<br>\n当传感器精度发生变化时onAccuracyChanged被触发。第一参数是发生变化的sensor对象，第二个参数是传感器的新精度（准确度）。精度有以下四种：</p>\n<ul>\n<li>SENSOR_STATUS_ACCURACY_LOW：低精度值</li>\n<li>SENSOR_STATUS_ACCURACY_MEDIUM：平均精度值</li>\n<li>SENSOR_STATUS_ACCURACY_HIGH：高精度值</li>\n<li>SENSOR_STATUS_UNRELIABLE：精度值不可靠</li>\n</ul>\n</li>\n</ul>\n<p><strong>第四步：解注册传感器监听</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mSensorManager.unregisterListener(mListener)</span><br></pre></td></tr></table></figure>\n<p>传感器几乎是非常消耗资源的，最佳的做法是始终停用不需要的传感器，特别是在活动处于暂停状态时。如果不这样做，可能会在几小时内将电池电量耗尽。</p>\n<p>第三步和第四步开发过程中一般是相呼应的，我们常常在onResume中进行注册，在onPause中进行解注册，也可根据业务需要自行确定时机。</p>\n<h2 id=\"运行时检测传感器\">运行时检测传感器<a title=\"#运行时检测传感器\" href=\"#运行时检测传感器\"></a></h2>\n<p>有时我们不能确定当前设备是否包含我们所需的传感器，所以在运行时我们需要做一个判断：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sensor sensor = mSensorManager.getDefaultSensor(Sensor.TYPE_PRESSURE);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(sensor != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Success! There&#x27;s a pressure sensor.</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Failure! No pressure sensor.</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果您要在 Google Play 上发布应用，您可以在清单文件中使用 <code>&lt;uses-feature&gt;</code> 元素，以对不具备适合您应用的传感器配置的设备屏蔽您的应用，以下清单示例条目会对没有加速度计的设备屏蔽应用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;uses-feature android:name=<span class=\"string\">&quot;android.hardware.sensor.accelerometer&quot;</span></span><br><span class=\"line\">                android:required=<span class=\"string\">&quot;true&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"传感器坐标系\">传感器坐标系<a title=\"#传感器坐标系\" href=\"#传感器坐标系\"></a></h2>\n<p>大部分传感器都是以三轴坐标来表示数据值。对于大多数传感器，当设备处于<strong>默认屏幕方向</strong>（平板和手机就有可能不一样）时，会相对于设备屏幕来定义坐标系，如下图：</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/A40F4C12E8844E8997E823746601E4AA?method=download&amp;shareKey=9f4ae176b8d36739b76272255abf759d\" alt=\"传感器3轴坐标系\" class=\"φbs\"></p>\n<p>以下传感器使用此坐标系：</p>\n<ul>\n<li>加速度传感器</li>\n<li>重力传感器</li>\n<li>陀螺仪</li>\n<li>线性加速度传感器</li>\n<li>地磁场传感器</li>\n</ul>\n<p>记着，传感器的坐标系是始终跟随设备的。</p>\n<h2 id=\"小栗子\">小栗子<a title=\"#小栗子\" href=\"#小栗子\"></a></h2>\n<p>下边就是通过三轴加速度传感器实现一个计步器功能，代码来源于网络，个人稍加注释：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StepDetector</span> <span class=\"keyword\">implements</span> <span class=\"title\">SensorEventListener</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String TAG = <span class=\"string\">&quot;StepDetector&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>   mLimit = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>   mLastValues[] = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">3</span>*<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>   mScale[] = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>   mYOffset;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>   mLastDirections[] = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">3</span>*<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>   mLastExtremes[][] = &#123; <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">3</span>*<span class=\"number\">2</span>], <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">3</span>*<span class=\"number\">2</span>] &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>   mLastDiff[] = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">3</span>*<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>     mLastMatch = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> ArrayList&lt;StepListener&gt; mStepListeners = <span class=\"keyword\">new</span> ArrayList&lt;StepListener&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">StepDetector</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 手机屏幕的高</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> h = <span class=\"number\">480</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 中心点，y轴的偏移量</span></span><br><span class=\"line\">        mYOffset = h * <span class=\"number\">0.5f</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 获取重力相关参数</span></span><br><span class=\"line\">        mScale[<span class=\"number\">0</span>] = - (h * <span class=\"number\">0.5f</span> * (<span class=\"number\">1.0f</span> / (SensorManager.STANDARD_GRAVITY * <span class=\"number\">2</span>)));</span><br><span class=\"line\">        mScale[<span class=\"number\">1</span>] = - (h * <span class=\"number\">0.5f</span> * (<span class=\"number\">1.0f</span> / (SensorManager.MAGNETIC_FIELD_EARTH_MAX)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSensitivity</span><span class=\"params\">(<span class=\"keyword\">float</span> sensitivity)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//灵敏度 1.97  2.96  4.44  6.66  10.00  15.00  22.50  33.75  50.62</span></span><br><span class=\"line\">        mLimit = sensitivity; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addStepListener</span><span class=\"params\">(StepListener sl)</span> </span>&#123;</span><br><span class=\"line\">        mStepListeners.add(sl);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"comment\">//public void onSensorChanged(int sensor, float[] values) &#123;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSensorChanged</span><span class=\"params\">(SensorEvent event)</span> </span>&#123;</span><br><span class=\"line\">        Sensor sensor = event.sensor; </span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (<span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> j = (sensor.getType() == Sensor.TYPE_ACCELEROMETER) ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//三个方向上的速度和</span></span><br><span class=\"line\">                <span class=\"keyword\">float</span> vSum = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span> ; i&lt;<span class=\"number\">3</span> ; i++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> v = mYOffset + event.values[i] * mScale[j];</span><br><span class=\"line\">                    vSum += v;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"comment\">//平均速度</span></span><br><span class=\"line\">                <span class=\"keyword\">float</span> v = vSum / <span class=\"number\">3</span>;</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">float</span> direction = (v &gt; mLastValues[k] ? <span class=\"number\">1</span> : (v &lt; mLastValues[k] ? -<span class=\"number\">1</span> : <span class=\"number\">0</span>));</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (direction == - mLastDirections[k]) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// Direction changed</span></span><br><span class=\"line\">                    <span class=\"keyword\">int</span> extType = (direction &gt; <span class=\"number\">0</span> ? <span class=\"number\">0</span> : <span class=\"number\">1</span>); <span class=\"comment\">// minumum or maximum?</span></span><br><span class=\"line\">                    mLastExtremes[extType][k] = mLastValues[k];</span><br><span class=\"line\">                    <span class=\"keyword\">float</span> diff = Math.abs(mLastExtremes[extType][k] - mLastExtremes[<span class=\"number\">1</span> - extType][k]);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//运动太慢，忽略</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (diff &gt; mLimit) &#123;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">boolean</span> isAlmostAsLargeAsPrevious = diff &gt; (mLastDiff[k]*<span class=\"number\">2</span>/<span class=\"number\">3</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">boolean</span> isPreviousLargeEnough = mLastDiff[k] &gt; (diff/<span class=\"number\">3</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">boolean</span> isNotContra = (mLastMatch != <span class=\"number\">1</span> - extType);</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">//判断有效的一步 </span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isAlmostAsLargeAsPrevious &amp;&amp; isPreviousLargeEnough &amp;&amp; isNotContra) &#123;</span><br><span class=\"line\">                            Log.i(TAG, <span class=\"string\">&quot;step&quot;</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">for</span> (StepListener stepListener : mStepListeners) &#123;</span><br><span class=\"line\">                                stepListener.onStep();</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            mLastMatch = extType;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            mLastMatch = -<span class=\"number\">1</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    mLastDiff[k] = diff;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                mLastDirections[k] = direction;</span><br><span class=\"line\">                mLastValues[k] = v;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAccuracyChanged</span><span class=\"params\">(Sensor sensor, <span class=\"keyword\">int</span> accuracy)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li><a href=\"https://developer.android.com/guide/topics/sensors/sensors_overview\">https://developer.android.com/guide/topics/sensors/sensors_overview</a></li>\n</ul>\n","prev":{"title":"DO AS ONE WISHES","link":"posts/0"},"next":{"title":"Java类加载机制","link":"posts/1616149094"},"plink":"https://blog.ixin.run/posts/1617159391/","toc":[{"id":"传感器分类","title":"传感器分类","index":"1"},{"id":"传感器使用","title":"传感器使用","index":"2"},{"id":"运行时检测传感器","title":"运行时检测传感器","index":"3"},{"id":"传感器坐标系","title":"传感器坐标系","index":"4"},{"id":"小栗子","title":"小栗子","index":"5"},{"id":"参考","title":"参考","index":"6"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1617159391/\" title=\"浅入深出了解Android传感器\">https://blog.ixin.run/posts/1617159391/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}