{"title":"Android开发通知栏的那些事","date":"2019-03-18T15:11:30.000Z","date_formatted":{"ll":"2019年3月18日","L":"2019/03/18","MM-DD":"03-18"},"link":"post/1552921890","comments":true,"tags":["Android"],"categories":["Android"],"updated":"2021-01-14T08:08:54.897Z","content":"<p>对于通知栏的使用，Android各个版本其实都有比较大的调整。例如老版本的不兼容，大小图标问题以及自定义通知栏适配问题，这些都是比较头大的事，当然弄懂了就清楚了，本篇就处理下这些疑惑。</p>\n<a id=\"more\"></a>\n<h2 id=\"通知栏的使用\">通知栏的使用<a title=\"#通知栏的使用\" href=\"#通知栏的使用\"></a></h2>\n<h3 id=\"显示一个普通的通知栏\">显示一个普通的通知栏<a title=\"#显示一个普通的通知栏\" href=\"#显示一个普通的通知栏\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">showNotification</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">    Notification notification = <span class=\"keyword\">new</span> NotificationCompat.Builder(context)</span><br><span class=\"line\">            <span class=\"comment\">/**设置通知左边的大图标**/</span></span><br><span class=\"line\">            .setLargeIcon(BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher))</span><br><span class=\"line\">            <span class=\"comment\">/**设置通知右边的小图标**/</span></span><br><span class=\"line\">            .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class=\"line\">            <span class=\"comment\">/**通知首次出现在通知栏，带上升动画效果的**/</span></span><br><span class=\"line\">            .setTicker(<span class=\"string\">&quot;通知来了&quot;</span>)</span><br><span class=\"line\">            <span class=\"comment\">/**设置通知的标题**/</span></span><br><span class=\"line\">            .setContentTitle(<span class=\"string\">&quot;这是一个通知的标题&quot;</span>)</span><br><span class=\"line\">            <span class=\"comment\">/**设置通知的内容**/</span></span><br><span class=\"line\">            .setContentText(<span class=\"string\">&quot;这是一个通知的内容这是一个通知的内容&quot;</span>)</span><br><span class=\"line\">            <span class=\"comment\">/**通知产生的时间，会在通知信息里显示**/</span></span><br><span class=\"line\">            .setWhen(System.currentTimeMillis())</span><br><span class=\"line\">            <span class=\"comment\">/**设置该通知优先级**/</span></span><br><span class=\"line\">            .setPriority(Notification.PRIORITY_DEFAULT)</span><br><span class=\"line\">            <span class=\"comment\">/**设置这个标志当用户单击面板就可以让通知将自动取消**/</span></span><br><span class=\"line\">            .setAutoCancel(<span class=\"keyword\">true</span>)</span><br><span class=\"line\">            <span class=\"comment\">/**设置他为一个正在进行的通知。他们通常是用来表示一个后台任务,用户积极参与(如播放音乐)或以某种方式正在等待,因此占用设备(如一个文件下载,同步操作,主动网络连接)**/</span></span><br><span class=\"line\">            .setOngoing(<span class=\"keyword\">false</span>)</span><br><span class=\"line\">            <span class=\"comment\">/**向通知添加声音、闪灯和振动效果的最简单、最一致的方式是使用当前的用户默认设置，使用defaults属性，可以组合：**/</span></span><br><span class=\"line\">            .setDefaults(Notification.DEFAULT_VIBRATE | Notification.DEFAULT_SOUND)</span><br><span class=\"line\">            .setContentIntent(PendingIntent.getActivity(context, <span class=\"number\">1</span>, <span class=\"keyword\">new</span> Intent(context, MainActivity.class), PendingIntent.FLAG_CANCEL_CURRENT))</span><br><span class=\"line\">            .build();</span><br><span class=\"line\">    NotificationManager notificationManager = (NotificationManager) context.getSystemService(context.NOTIFICATION_SERVICE);</span><br><span class=\"line\">    <span class=\"comment\">/**发起通知**/</span></span><br><span class=\"line\">    notificationManager.notify(<span class=\"number\">0</span>, notification);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"显示一个下载带进度条的通知\">显示一个下载带进度条的通知<a title=\"#显示一个下载带进度条的通知\" href=\"#显示一个下载带进度条的通知\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">showNotificationProgress</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//进度条通知</span></span><br><span class=\"line\">    <span class=\"keyword\">final</span> NotificationCompat.Builder builderProgress = <span class=\"keyword\">new</span> NotificationCompat.Builder(context);</span><br><span class=\"line\">    builderProgress.setContentTitle(<span class=\"string\">&quot;下载中&quot;</span>);</span><br><span class=\"line\">    builderProgress.setSmallIcon(R.mipmap.ic_launcher);</span><br><span class=\"line\">    builderProgress.setTicker(<span class=\"string\">&quot;进度条通知&quot;</span>);</span><br><span class=\"line\">    builderProgress.setProgress(<span class=\"number\">100</span>, <span class=\"number\">0</span>, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">final</span> Notification notification = builderProgress.build();</span><br><span class=\"line\">    <span class=\"keyword\">final</span> NotificationManager notificationManager = (NotificationManager) context.getSystemService(context.NOTIFICATION_SERVICE);</span><br><span class=\"line\">    <span class=\"comment\">//发送一个通知</span></span><br><span class=\"line\">    notificationManager.notify(<span class=\"number\">2</span>, notification);</span><br><span class=\"line\">    <span class=\"comment\">/**创建一个计时器,模拟下载进度**/</span></span><br><span class=\"line\">    Timer timer = <span class=\"keyword\">new</span> Timer();</span><br><span class=\"line\">    timer.schedule(<span class=\"keyword\">new</span> TimerTask() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> progress = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            Log.i(<span class=\"string\">&quot;progress&quot;</span>, progress + <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (progress &lt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">                progress++;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">//更新进度条</span></span><br><span class=\"line\">                builderProgress.setProgress(<span class=\"number\">100</span>, progress, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">                <span class=\"comment\">//再次通知</span></span><br><span class=\"line\">                notificationManager.notify(<span class=\"number\">2</span>, builderProgress.build());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//计时器退出</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.cancel();</span><br><span class=\"line\">            <span class=\"comment\">//进度条退出</span></span><br><span class=\"line\">            notificationManager.cancel(<span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;<span class=\"comment\">//结束方法</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"显示一个悬挂式的通知\">显示一个悬挂式的通知<a title=\"#显示一个悬挂式的通知\" href=\"#显示一个悬挂式的通知\"></a></h3>\n<p>悬挂式,部分系统厂商可能不支持。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">showFullScreen</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">    NotificationCompat.Builder builder = <span class=\"keyword\">new</span> NotificationCompat.Builder(context);</span><br><span class=\"line\">    Intent mIntent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(<span class=\"string\">&quot;http://blog.csdn.net/linglongxin24&quot;</span>));</span><br><span class=\"line\">    PendingIntent pendingIntent = PendingIntent.getActivity(context, <span class=\"number\">0</span>, mIntent, <span class=\"number\">0</span>);</span><br><span class=\"line\">    builder.setContentIntent(pendingIntent);</span><br><span class=\"line\">    builder.setSmallIcon(R.mipmap.ic_launcher);</span><br><span class=\"line\">    builder.setLargeIcon(BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher));</span><br><span class=\"line\">    builder.setAutoCancel(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    builder.setContentTitle(<span class=\"string\">&quot;悬挂式通知&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//设置点击跳转</span></span><br><span class=\"line\">    Intent hangIntent = <span class=\"keyword\">new</span> Intent();</span><br><span class=\"line\">    hangIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class=\"line\">    hangIntent.setClass(context, MainActivity.class);</span><br><span class=\"line\">    <span class=\"comment\">//如果描述的PendingIntent已经存在，则在产生新的Intent之前会先取消掉当前的</span></span><br><span class=\"line\">    PendingIntent hangPendingIntent = PendingIntent.getActivity(context, <span class=\"number\">0</span>, hangIntent, PendingIntent.FLAG_CANCEL_CURRENT);</span><br><span class=\"line\">    builder.setFullScreenIntent(hangPendingIntent, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    NotificationManager notificationManager = (NotificationManager) context.getSystemService(context.NOTIFICATION_SERVICE);</span><br><span class=\"line\">    notificationManager.notify(<span class=\"number\">3</span>, builder.build());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"显示一个折叠式的通知\">显示一个折叠式的通知<a title=\"#显示一个折叠式的通知\" href=\"#显示一个折叠式的通知\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">shwoNotify</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//先设定RemoteViews</span></span><br><span class=\"line\">    RemoteViews view_custom = <span class=\"keyword\">new</span> RemoteViews(context.getPackageName(), R.layout.view_custom);</span><br><span class=\"line\">    <span class=\"comment\">//设置对应IMAGEVIEW的ID的资源图片</span></span><br><span class=\"line\">    view_custom.setImageViewResource(R.id.custom_icon, R.mipmap.icon);</span><br><span class=\"line\">    view_custom.setTextViewText(R.id.tv_custom_title, <span class=\"string\">&quot;今日头条&quot;</span>);</span><br><span class=\"line\">    view_custom.setTextColor(R.id.tv_custom_title, Color.BLACK);</span><br><span class=\"line\">    view_custom.setTextViewText(R.id.tv_custom_content, <span class=\"string\">&quot;金州勇士官方宣布球队已经解雇了主帅马克-杰克逊，随后宣布了最后的结果。&quot;</span>);</span><br><span class=\"line\">    view_custom.setTextColor(R.id.tv_custom_content, Color.BLACK);</span><br><span class=\"line\">    NotificationCompat.Builder mBuilder = <span class=\"keyword\">new</span> NotificationCompat.Builder(context);</span><br><span class=\"line\">    mBuilder.setContent(view_custom)</span><br><span class=\"line\">            .setContentIntent(PendingIntent.getActivity(context, <span class=\"number\">4</span>, <span class=\"keyword\">new</span> Intent(context, MainActivity.class), PendingIntent.FLAG_CANCEL_CURRENT))</span><br><span class=\"line\">            .setWhen(System.currentTimeMillis())<span class=\"comment\">// 通知产生的时间，会在通知信息里显示</span></span><br><span class=\"line\">            .setTicker(<span class=\"string\">&quot;有新资讯&quot;</span>)</span><br><span class=\"line\">            .setPriority(Notification.PRIORITY_HIGH)<span class=\"comment\">// 设置该通知优先级</span></span><br><span class=\"line\">            .setOngoing(<span class=\"keyword\">false</span>)<span class=\"comment\">//不是正在进行的   true为正在进行  效果和.flag一样</span></span><br><span class=\"line\">            .setSmallIcon(R.mipmap.icon);</span><br><span class=\"line\">    Notification notify = mBuilder.build();</span><br><span class=\"line\">    NotificationManager notificationManager = (NotificationManager) context.getSystemService(context.NOTIFICATION_SERVICE);</span><br><span class=\"line\">    notificationManager.notify(<span class=\"number\">4</span>, notify);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"低版本不兼容处理\">低版本不兼容处理<a title=\"#低版本不兼容处理\" href=\"#低版本不兼容处理\"></a></h2>\n<p>Android在appcompat-v7库中提供了一个NotificationCompat类来处理新老版本的兼容问题，我们在编写通知功能时都使用NotificationCompat这个类来实现，appcompat-v7库就会自动帮我们做好所有系统版本的兼容性处理了。一段基本的触发通知代码如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NotificationManager manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class=\"line\">NotificationCompat.Builder builder = <span class=\"keyword\">new</span> NotificationCompat.Builder(context);</span><br><span class=\"line\">Notification notification = builder</span><br><span class=\"line\">.setContentTitle(<span class=\"string\">&quot;这是通知标题&quot;</span>)</span><br><span class=\"line\">.setContentText(<span class=\"string\">&quot;这是通知内容&quot;</span>)</span><br><span class=\"line\">.setWhen(System.currentTimeMillis())</span><br><span class=\"line\">.setSmallIcon(R.mipmap.ic_launcher)</span><br><span class=\"line\">.setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))</span><br><span class=\"line\">.build();</span><br><span class=\"line\">manager.notify(<span class=\"number\">1</span>, notification);</span><br></pre></td></tr></table></figure>\n<p>现在我们的app直接面对的设备一般都在android 5.0以上，所以也不需要做这种处理了。</p>\n<h2 id=\"大小图标问题\">大小图标问题<a title=\"#大小图标问题\" href=\"#大小图标问题\"></a></h2>\n<p>注意看一下我们给通知设置的图标，一个小图标、一个大图标，都是使用的R.mipmap.ic_launcher这张图，这在较低的编译版本上是没问题的，如果将targetSdkVersion指定成21或者更高的话，那么小图标则不可见（通知栏和大图的右下角有一个白白的圆），导致界面很不友好。</p>\n<p>这到底是为什么呢？实际上，Android从5.0系统开始，对于通知栏图标的设计进行了修改。现在Google要求，所有应用程序的通知栏图标，应该只使用alpha图层来进行绘制，而不应该包括RGB图层（通俗点来讲，就是让我们的通知栏图标不要带颜色就可以了）。下边是支付宝和网易新闻的展示：<br>\n<img src=\"https://img-blog.csdnimg.cn/20200421235650124.png\" alt=\"支付宝通知状态栏小图标展示\"><br>\n<img src=\"https://img-blog.csdnimg.cn/20200421235711698.png\" alt=\"支付宝通知样式\"><br>\n<img src=\"https://img-blog.csdnimg.cn/20200421235727153.png\" alt=\"网易新闻通知样式\"></p>\n<p>上图你会发现网易的图标更好看一些，因为系统给右下角的这个小圆圈默认是设置成灰色的，和我们的整体色调并不搭配，而网易则将这个小圆圈改成了红色，因此总体视觉效果更好。这种也很好处理，只需要在NotificationCompat.Builder中再多连缀一个setColor()方法就可以了：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Notification notification = builder</span><br><span class=\"line\">    ......</span><br><span class=\"line\">    .setColor(Color.parseColor(<span class=\"string\">&quot;#EAA935&quot;</span>))</span><br><span class=\"line\">    .build();</span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义通知栏\">自定义通知栏<a title=\"#自定义通知栏\" href=\"#自定义通知栏\"></a></h2>\n<p>自定义通知需要定义一个layout文件，使用RemoteViews加载它并设置一些点击事件，再设置到builder，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showNotification</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    NotificationCompat.Builder builder = <span class=\"keyword\">new</span> NotificationCompat.Builder(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    builder.setSmallIcon(R.mipmap.small_launch_ic);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//自定义布局</span></span><br><span class=\"line\">    RemoteViews rv = <span class=\"keyword\">new</span> RemoteViews(getPackageName(),R.layout.message);</span><br><span class=\"line\">    rv.setTextViewText(R.id.tv,<span class=\"string\">&quot;有新通知了&quot;</span>);</span><br><span class=\"line\">    builder.setContent(rv);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//点击跳转</span></span><br><span class=\"line\">    Intent intent = <span class=\"keyword\">new</span> Intent(<span class=\"keyword\">this</span>, MainAct.class);</span><br><span class=\"line\">    PendingIntent pendingIntent = PendingIntent.getActivity(<span class=\"keyword\">this</span>, <span class=\"number\">1</span>, intent, PendingIntent.FLAG_UPDATE_CURRENT);</span><br><span class=\"line\">    remoteViews.setOnClickPendingIntent(R.id.root, pendingIntent);</span><br><span class=\"line\"></span><br><span class=\"line\">    Notification notification = builder.build();</span><br><span class=\"line\">    NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);</span><br><span class=\"line\">    notificationManager.notify(NOTIFICATION_ID,notification);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"认识remoteviews\">认识RemoteViews<a title=\"#认识remoteviews\" href=\"#认识remoteviews\"></a></h3>\n<p>RemoteViews主要用在通知栏和桌面小部件上，简单来说RemoteViews是一个可以跨进程显示view的类，显示的view是从布局文件inflate出来，且该类提供了一些基本的方法来修改这个view的内容。</p>\n<p>RemoteViews并不是一个view， 但可以表示一个layout的布局；又因为是继承parcelable,所以可以跨进程使用，但因为是跨进程，所以没办法像我们之前通过findviewById方法来访问布局里的每个view，所以RemoteViews提供了一些set方法来更新view 的显示，RemoteViews可以支持大部分系统控件，但是不支持自定义控件。</p>\n<h4 id=\"原理\">原理<a title=\"#原理\" href=\"#原理\"></a></h4>\n<p>自定义通知栏和桌面小部件，是由NotificationManager和AppWidgetmanager管理，而NotificationManager和AppWidgetManager是通过Binder分别和SystemServer进程中的NotificationManagerServer以及AppWidgetService进行通信，他们是运行在系统进程中，即SystemServer进程, 而我们是要在自身的应用进程中来更新远程系统进程的UI。这样就构成来跨进程通信的场景。 最开始的一节我们知道RemoteViews 是实现了Parcelable接口的，这样就可以跨进程使用了。从构造方法开始，系统首先根据包名去得到该应用的资源，然后inflate出布局文件，在SystemServer进程中是一个普通的view,而在我们的进程看来这是一个RemoteViews，然后会通过一系列set方法来更新该RemoteViews。</p>\n<h3 id=\"认识pendingintent\">认识PendingIntent<a title=\"#认识pendingintent\" href=\"#认识pendingintent\"></a></h3>\n<p>所谓的 PendingIntent 是区别于 Intent 而存在的。Intent（即意图）是立即发生的，而 PendingIntent 是在将来的某个时刻发生的。PendIntent其实是Intent的封装。</p>\n<p>PendingIntent的使用场景主要用于闹钟、通知、桌面部件。</p>\n<h4 id=\"与intent的区别\">与Intent的区别<a title=\"#与intent的区别\" href=\"#与intent的区别\"></a></h4>\n<ul>\n<li>Intent 是意图的意思。Android 中的　Intent 正是取自这个意思，它是一个消息对象，通过它，Android 系统的四大组件能够方便的通信，并且保证解耦。Intent 可以说明某种意图，携带一种行为和相应的数据，发送到目标组件。</li>\n<li>PendingIntent是对Intent的封装，但它不是立刻执行某个行为，而是满足某些条件或触发某些事件后才执行指定的行为。</li>\n</ul>\n<p>我们的 Activity 如果设置了 exported = false，其他应用如果使用 Intent 就访问不到这个 Activity，但是使用 PendingIntent 是可以的。</p>\n<p>即：<strong>PendingIntent将某个动作的触发时机交给其他应用；让那个应用代表自己去执行那个动作（权限都给他）</strong></p>\n<h4 id=\"获取pendingintent\">获取PendingIntent<a title=\"#获取pendingintent\" href=\"#获取pendingintent\"></a></h4>\n<p>关于PendingIntent的实例获取一般有以下五种方法，分别对应Activity、Broadcast、Service：</p>\n<ul>\n<li>getActivity()</li>\n<li>getActivities()</li>\n<li>getBroadcast()</li>\n<li>getService()</li>\n<li>getForegroundService()</li>\n</ul>\n<p>它们的参数都相同，都是四个：Context， requestCode, Intent, flags，分别对应上下文对象、请求码、请求意图用以指明启动类及数据传递、关键标志位。前面三个参数共同标志一个行为的唯一性。</p>\n<h4 id=\"pendingintent的flag\">PendingIntent的FLAG<a title=\"#pendingintent的flag\" href=\"#pendingintent的flag\"></a></h4>\n<ul>\n<li>FLAG_CANCEL_CURRENT：如果当前系统中已经存在一个相同的PendingIntent对象，那么就将先将已有的PendingIntent取消，然后重新生成一个PendingIntent对象。</li>\n<li>FLAG_NO_CREATE：如果当前系统中不存在相同的PendingIntent对象，系统将不会创建该PendingIntent对象而是直接返回null，如果之前设置过，这次就能获取到。</li>\n<li>FLAG_ONE_SHOT：该PendingIntent只作用一次。在该PendingIntent对象通过send()方法触发过后，PendingIntent将自动调用cancel()进行销毁，那么如果你再调用send()方法的话，系统将会返回一个SendIntentException。</li>\n<li>FLAG_UPDATE_CURRENT：如果系统中有一个和你描述的PendingIntent对等的PendingInent，那么系统将使用该PendingIntent对象，但是会使用新的Intent来更新之前PendingIntent中的Intent对象数据，例如更新Intent中的Extras</li>\n</ul>\n<h2 id=\"8.0通知栏新增通知渠道\">8.0通知栏新增通知渠道<a title=\"#8.0通知栏新增通知渠道\" href=\"#8.0通知栏新增通知渠道\"></a></h2>\n<p>Android 8.0 系统，Google引入通知渠道，提高用户体验，方便用户管理通知信息，同时也提高了通知到达率</p>\n<p>什么是通知渠道呢？顾名思义，就是每条通知都要属于一个对应的渠道。每个App都可以自由地创建当前App拥有哪些通知渠道，但是这些通知渠道的控制权都是掌握在用户手上的。用户可以自由地选择这些通知渠道的重要程度，是否响铃、是否振动、或者是否要关闭这个渠道的通知。</p>\n<p>build.gradle中targetSdkVersion设置大于等于26。这时如果不对通知渠道适配，通知就无法显示。</p>\n<p>所以我们要额外处理：</p>\n<p>1.创建NotificationChannel对象，指定Channel的id、name和通知的重要程度</p>\n<p>2.使用NotificationMannager的createNotificationChannel方法来添加Channel。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> NotificationCompat.<span class=\"function\">Builder <span class=\"title\">getNotificationBuilder</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class=\"line\">        NotificationChannel channel = <span class=\"keyword\">new</span> NotificationChannel(<span class=\"string\">&quot;channel_id&quot;</span>, <span class=\"string\">&quot;channel_name&quot;</span>,</span><br><span class=\"line\">                NotificationManager.IMPORTANCE_DEFAULT);</span><br><span class=\"line\">        <span class=\"comment\">//是否绕过请勿打扰模式</span></span><br><span class=\"line\">        channel.canBypassDnd();</span><br><span class=\"line\">        <span class=\"comment\">//闪光灯</span></span><br><span class=\"line\">        channel.enableLights(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//锁屏显示通知</span></span><br><span class=\"line\">        channel.setLockscreenVisibility(VISIBILITY_SECRET);</span><br><span class=\"line\">        <span class=\"comment\">//闪关灯的灯光颜色</span></span><br><span class=\"line\">        channel.setLightColor(Color.RED);</span><br><span class=\"line\">        <span class=\"comment\">//桌面launcher的消息角标</span></span><br><span class=\"line\">        channel.canShowBadge();</span><br><span class=\"line\">        <span class=\"comment\">//是否允许震动</span></span><br><span class=\"line\">        channel.enableVibration(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取系统通知响铃声音的配置</span></span><br><span class=\"line\">        channel.getAudioAttributes();</span><br><span class=\"line\">        <span class=\"comment\">//获取通知取到组</span></span><br><span class=\"line\">        channel.getGroup();</span><br><span class=\"line\">        <span class=\"comment\">//设置可绕过  请勿打扰模式</span></span><br><span class=\"line\">        channel.setBypassDnd(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//设置震动模式</span></span><br><span class=\"line\">        channel.setVibrationPattern(<span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[]&#123;<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>&#125;);</span><br><span class=\"line\">        <span class=\"comment\">//是否会有灯光</span></span><br><span class=\"line\">        channel.shouldShowLights();</span><br><span class=\"line\">        getNotificationManager().createNotificationChannel(channel);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    NotificationCompat.Builder notification = <span class=\"keyword\">new</span> NotificationCompat.Builder(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;channel_id&quot;</span>);</span><br><span class=\"line\">    notification.setContentTitle(<span class=\"string\">&quot;新消息来了&quot;</span>);</span><br><span class=\"line\">    notification.setContentText(<span class=\"string\">&quot;周末到了，不用上班了&quot;</span>);</span><br><span class=\"line\">    notification.setSmallIcon(R.mipmap.ic_launcher);</span><br><span class=\"line\">    notification.setAutoCancel(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> notification;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.设置通知重要性级别</p>\n<p>Android 8.0 及以上是使用NotificationManager.IMPORTANCE_，Android 7.1 及以下是使用NotificationCompat.PRIORITY_它们都是定义的常量:<br>\n<img src=\"https://img-blog.csdnimg.cn/20200421235749413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMDk3OA==,size_16,color_FFFFFF,t_70\" alt=\"android8.0通知渠道级别\"></p>\n<h2 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h2>\n<p>以上是我对通知栏相关使用或自定义方式的总结，这块也很简单，重点关注是RemoteViews和PendingIntent的知识点的认识和理解。</p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/426d85f34561\">https://www.jianshu.com/p/426d85f34561</a></li>\n<li><a href=\"https://www.jianshu.com/p/b83fc1697232\">https://www.jianshu.com/p/b83fc1697232</a></li>\n</ul>\n","prev":{"title":"记一次Git抽风现场","link":"post/1553955764"},"next":{"title":"Android开发ContentProvider学习总结","link":"post/1552144290"},"plink":"https://blog.ixin.run/post/1552921890/","toc":[{"id":"通知栏的使用","title":"通知栏的使用","index":"1","children":[{"id":"显示一个普通的通知栏","title":"显示一个普通的通知栏","index":"1.1"},{"id":"显示一个下载带进度条的通知","title":"显示一个下载带进度条的通知","index":"1.2"},{"id":"显示一个悬挂式的通知","title":"显示一个悬挂式的通知","index":"1.3"},{"id":"显示一个折叠式的通知","title":"显示一个折叠式的通知","index":"1.4"}]},{"id":"低版本不兼容处理","title":"低版本不兼容处理","index":"2"},{"id":"大小图标问题","title":"大小图标问题","index":"3"},{"id":"自定义通知栏","title":"自定义通知栏","index":"4","children":[{"id":"认识remoteviews","title":"认识RemoteViews","index":"4.1"},{"id":"认识pendingintent","title":"认识PendingIntent","index":"4.2"}]},{"id":"8.0通知栏新增通知渠道","title":"8.0通知栏新增通知渠道","index":"5"},{"id":"总结","title":"总结","index":"6"},{"id":"参考","title":"参考","index":"7"}],"reward":true,"copyright":{"custom":"转载请注明出处，谢谢支持。"}}