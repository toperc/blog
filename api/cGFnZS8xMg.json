{"per_page":10,"total":12,"current":12,"data":[{"title":"Android开发之单元测试初探","date":"2016-06-12T06:36:07.000Z","date_formatted":{"ll":"2016年6月12日","L":"2016/06/12","MM-DD":"06-12"},"excerpt":"<p>从androidstudio1.5开始新建安卓项目中有两个测试包,androidTest和test。其中前者是针对设备进行的测试，即官方支持的UI测试，后者是直接在本机上进行测试即最常见的本地单元测试。在androidStudio1.5之前只有前者，单元测试要自己重建，如图：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/5E99E10A73F041BD8421DCC2593DA919?method=download&amp;shareKey=ef016b2d142019ce2373b6507a54f0db\" alt=\"android项目中的单元测试\"></p>","link":"posts/1465713367","tags":["单元测试"],"categories":["Android"]},{"title":"Android开发权限处理和自定义权限","date":"2016-04-01T02:40:11.000Z","date_formatted":{"ll":"2016年4月1日","L":"2016/04/01","MM-DD":"04-01"},"excerpt":"<p>早在Android6.0之前，权限这一块是不需要处理的，只需要用到哪些权限在Manifest里注册一下，然后在安装的时候简单声明一下。但是从6.0开始为了用户的隐私和安全，Google引入了动态权限申请机制，将所有权限分成了正常权限和危险权限，应用的相关功能每次在使用危险权限时需要动态的申请并得到用户的授权才能使用。</p>","link":"posts/1459478411","tags":["运行时权限"],"categories":["Android"]},{"title":"Android核心架构探究学习","date":"2015-08-28T09:28:50.000Z","date_formatted":{"ll":"2015年8月28日","L":"2015/08/28","MM-DD":"08-28"},"excerpt":"<p>谈起Android架构，很多人都知道Android是java开发的，以为Android就是java的一个儿子，这也只是站在表层去看问题。Android是一个系统，作为一个现在都快发展到6.0的系统，内部必有一个庞大的核心体系，就像一个舞台，要有支柱，要有台面，才能撑起各种演员和设备在其上面配合着表演。</p>\n<p>Android系统的底层是建立在Linux系统之上的，系统架构总共分为4层5块。从上往下4层分别是：应用程序层、应用程序框架层、函数库层、Linux内核层。5块分别指APPLICATIONS、APPLICATIONS FRAMWORK、LIBRARIES、ANDROID RUNTIME、LINUX KERNEL，这都和前边一一对应，其中ANDROID RUNTIME是在函数库层额外开出的android运行时虚拟机。</p>\n<p>这4层采用一种软件叠层（Software Stack）的方式进行构建，层与层之间相互分离又分工明确，确保层与层之间的低耦合，保证系统的稳定性。</p>","link":"posts/1440754130","tags":["系统"],"categories":["Android"]}]}