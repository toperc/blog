{"title":"TCP/IP协议三次握手和四次挥手大白话解说","date":"2016-09-20T12:33:01.000Z","date_formatted":{"ll":"2016年9月20日","L":"2016/09/20","MM-DD":"09-20"},"link":"posts/1474374781","comments":true,"tags":["网络"],"categories":["计算机基础"],"updated":"2021-01-29T12:51:44.672Z","content":"<p>昨天晚上被一位师傅问到了TCP/IP的工作机制，心里很清楚三次握手，然而对于四次挥手却忘了，这是大学习里学过的，奋而翻阅书籍和网络对之前所学的做一个温顾，算是夯实自我吧。</p>\n<p>TCP(Transmission Control Protocol)网络传输控制协议，是一种面向连接的、可靠的、基于字节流的传输层通信协议，数据传输前建立连接的工作要经过三次握手，数据传输后断开连接的工作要经过四次挥手。</p>\n<a id=\"more\"></a>\n<h2 id=\"工作过程\">工作过程<a title=\"#工作过程\" href=\"#工作过程\"></a></h2>\n<h3 id=\"tcp标志位：\">TCP标志位：<a title=\"#tcp标志位：\" href=\"#tcp标志位：\"></a></h3>\n<p>TCP共有6个标志位，分别是：</p>\n<ul>\n<li>SYN(synchronous),建立联机。</li>\n<li>ACK(acknowledgement),确认。</li>\n<li>PSH(push),传输。</li>\n<li>FIN(finish),结束。</li>\n<li>RST(reset),重置。</li>\n<li>URG(urgent),紧急。</li>\n</ul>\n<h3 id=\"图解三次握手和四次挥手的过程：\">图解三次握手和四次挥手的过程：<a title=\"#图解三次握手和四次挥手的过程：\" href=\"#图解三次握手和四次挥手的过程：\"></a></h3>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/F8ACFC64F224447584CF9DBFFF9437C4?method=download&amp;shareKey=830305b938361c3f08d7adec0e921cab\" alt=\"图解三次握手和四次挥手的过程\" class=\"φbs\"></p>\n<h3 id=\"三次握手建立连接阐述：\">三次握手建立连接阐述：<a title=\"#三次握手建立连接阐述：\" href=\"#三次握手建立连接阐述：\"></a></h3>\n<p>第一次握手：客户端要和服务端进行通信，首先要告知服务端一声，遂发出一个SYN=1的连接请求信号,“服务端哥哥，我想给你说说话”。</p>\n<p>第二次握手：当服务端接收到客户端的连接请求，此时要给客户端一个确认信息，“我知道了（ACK）,我这边已经准备好了，你现在能连吗（SYN）”。</p>\n<p>第三次握手：当客户端收到了服务端的确认连接信息后，要礼貌的告知一下服务端，“好的，咱们开始联通吧（ACK）”。</p>\n<p>到此整个建立连接的过程已经结束，接下来就是双方你一句我一句甚至同时交流传递信息的过程了。</p>\n<h3 id=\"四次挥手断开连接阐述：\">四次挥手断开连接阐述：<a title=\"#四次挥手断开连接阐述：\" href=\"#四次挥手断开连接阐述：\"></a></h3>\n<p>第一次挥手：双方交流的差不多了，此时客户端也已经结尾了，接下来要断开通信连接，所以告诉服务端“我说完了（FIN）”，此时自身形成等待结束连接的状态。</p>\n<p>第二次挥手：服务端知道客户端已经没话说了，服务端此时还有两句心里话要给客户端说，“我知道你说完了（ACK），我再给你说两句，&amp;*……%￥”。</p>\n<p>第三次挥手：此时客户端洗耳恭听继续处于等待结束的状态，服务器端也说完了，自身此时处于等待关闭连接的状态，并对告诉客户端，“我说完了，咱们断了吧（FIN）”。</p>\n<p>第四次挥手：客户端收知道服务端也说完了，也要告诉服务端一声（ACK），因为连接和断开要双方都按下关闭操作才能断开，客户端同时又为自己定义一个定时器，因为不知道刚才说的这句话能不能准确到达服务端（网络不稳定或者其他因素引起的网络原因），默认时间定为两个通信的最大时间之和，超出这个时间就默认服务器端已经接收到了自己的确认信息，此时客户端就关闭自身连接，服务器端一旦接收到客户端发来的确定通知就立刻关闭服务器端的连接。</p>\n<p>到此为止双方整个通信过程就此终结。这里要声明一下：断开链接不一定就是客户端，谁都可以先发起断开指令，另外客户端和服务端是没有固定标准的，谁先发起请求谁就是客户端。</p>\n<h3 id=\"问题：\">问题：<a title=\"#问题：\" href=\"#问题：\"></a></h3>\n<ol>\n<li>为什么断开链接的时候客户端设置的定时器时间等待要2MSL(两个通信报文的最大时间)？<br>\n这个问题也很好理解，当客户端最终告诉服务器端断开确认的时候，他不知道自己的发出的指令是否能准确的一次性被服务器接收。假如服务器没有接收到（这已经耗费了一个报文的最大通信时间了），服务器端将会重新发起一个结束通话的指令（FIN）到客户端，客户端又接收到了服务器发来的结束通信指令将继续给服务器进行一个确认，有人会说那要是客户端发出的确认信息服务端没收到，而服务端重发的断开指令客户端也没收到怎么办，说实话我也无奈，遇到这种情况咱们干脆认为网确实不行了。</li>\n<li>为什么建立连接要三次握手而断开连接要四次挥手?<br>\n说起这个，打一个比喻，目前祖国正在高速发展高铁，建立连接的过程正如上海到北京打通一条高铁线，TCP通信过程是一个全双工模式，即在这条高铁线上要有两个轨道，即能从上海发车到北京又能从北京发车到上海，甚至两边可以同时发车。所以断开连接前提就是要保证两条轨道都没有车，然后双方才能各自发起断开动作。</li>\n</ol>\n<h3 id=\"双方各自工作流程图：\">双方各自工作流程图：<a title=\"#双方各自工作流程图：\" href=\"#双方各自工作流程图：\"></a></h3>\n<p>客户端工作流程：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/C82075F592EF4073B63119F392DB8E0B?method=download&amp;shareKey=b9478b64d07a9a7504b944e29ae1519c\" alt=\"客户端工作流程\"><br>\n注意：在TIME_WAIT状态中，如果TCP client端最后一次发送的ACK丢失了，它将重新发送。TIME_WAIT状态中所需要的时间是依赖于实现方法的。典型的值为30秒、1分钟和2分钟。等待之后连接正式关闭，并且所有的资源(包括端口号)都被释放。</p>\n<p>服务器端工作流程：<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/E396DA73518B4DEEBC53B23F44CD031F?method=download&amp;shareKey=e7e1932fa3fd7de524472d6a82d69467\" alt=\"服务器端工作流程\"></p>\n<h2 id=\"附加\">附加<a title=\"#附加\" href=\"#附加\"></a></h2>\n<h3 id=\"syn网络攻击：\">SYN网络攻击：<a title=\"#syn网络攻击：\" href=\"#syn网络攻击：\"></a></h3>\n<p>原理：<br>\n在三次握手过程中，Server发送SYN-ACK之后，收到Client的ACK之前的TCP连接称为半连接（half-open connect），此时Server处于SYN_RCVD状态，当收到ACK后，Server转入ESTABLISHED状态。SYN攻击就是Client在短时间内伪造大量不存在的IP地址，并向Server不断地发送SYN包，Server回复确认包，并等待Client的确认，由于源地址是不存在的，因此，Server需要不断重发直至超时，这些伪造的SYN包将产时间占用未连接队列，导致正常的SYN请求因为队列满而被丢弃，从而引起网络堵塞甚至系统瘫痪。</p>\n<p>检测：<br>\nSYN攻击时一种典型的DDOS攻击，检测SYN攻击的方式非常简单，即当Server上有大量半连接状态且源IP地址是随机的，则可以断定遭到SYN攻击了。windows下打开cmd,输入命令：”netstat -n -p TCP“，查看是否有大量的”SYN_RECEIVED“状态。</p>\n<p>以下图片是表明正常的。<br>\n<img src=\"https://note.youdao.com/yws/api/personal/file/47748600FDDA4DBAABA238C2BC05CE48?method=download&amp;shareKey=459f40055e4408fffa15130aa5883495\" alt=\"SYN攻击检测\"></p>\n","prev":{"title":"Android开发之WebView详细总结","link":"posts/1476191895"},"next":{"title":"Java开发揭开socket编程的面纱","link":"posts/1472485045"},"plink":"https://blog.ixin.run/posts/1474374781/","toc":[{"id":"工作过程","title":"工作过程","index":"1","children":[{"id":"tcp标志位：","title":"TCP标志位：","index":"1.1"},{"id":"图解三次握手和四次挥手的过程：","title":"图解三次握手和四次挥手的过程：","index":"1.2"},{"id":"三次握手建立连接阐述：","title":"三次握手建立连接阐述：","index":"1.3"},{"id":"四次挥手断开连接阐述：","title":"四次挥手断开连接阐述：","index":"1.4"},{"id":"问题：","title":"问题：","index":"1.5"},{"id":"双方各自工作流程图：","title":"双方各自工作流程图：","index":"1.6"}]},{"id":"附加","title":"附加","index":"2","children":[{"id":"syn网络攻击：","title":"SYN网络攻击：","index":"2.1"}]}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1474374781/\" title=\"TCP/IP协议三次握手和四次挥手大白话解说\">https://blog.ixin.run/posts/1474374781/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}