{"per_page":10,"total":12,"current":10,"data":[{"title":"数据结构和算法知识归总","date":"2018-01-21T11:46:16.000Z","date_formatted":{"ll":"2018年1月21日","L":"2018/01/21","MM-DD":"01-21"},"excerpt":"","link":"posts/1516535176","tags":["数据结构","知识体系","算法"],"categories":["知识体系"]},{"title":"Java开发知识归总","date":"2018-01-21T11:43:38.000Z","date_formatted":{"ll":"2018年1月21日","L":"2018/01/21","MM-DD":"01-21"},"excerpt":"<p>刚毕业时自己是做java web开发的，后来转入android，便一发不可收拾，基础部分是通用的所以不能忘，当然java web也不能忘。</p>\n<p>【更新于2020.03.21】转载请注明出处：<a href=\"https://ixin.run\">https://ixin.run</a></p>","link":"posts/1516535018","tags":["Java","知识体系"],"categories":["知识体系"]},{"title":"Android开发知识归总","date":"2018-01-20T05:33:42.000Z","date_formatted":{"ll":"2018年1月20日","L":"2018/01/20","MM-DD":"01-20"},"excerpt":"<p>一直想着把Android开发这块知识归总一下，今天熬夜终于归总了，面向的是中高级部分，发现自己还有好多漏洞需要去慢慢填充。</p>\n<p>【更新于2021.03.7】转载请注明出处：<a href=\"https://ixin.run\">https://ixin.run</a></p>","link":"posts/1516426422","tags":["Android","知识体系"],"categories":["知识体系"]},{"title":"音视频开发相关基础概念","date":"2018-01-17T10:09:36.000Z","date_formatted":{"ll":"2018年1月17日","L":"2018/01/17","MM-DD":"01-17"},"excerpt":"<p>早前自己仅仅实现过视频播放相关技术方案:VideoView、mediaplayer结合SurfaceView，这只是客户端播放功能。对于视频处理形式分为点播和流媒体播放，同时又包含音视频数据的采集和播放两方面。</p>","link":"posts/1516183776","tags":["音视频"],"categories":["Android"]},{"title":"数据结构整体概括","date":"2018-01-12T10:09:36.000Z","date_formatted":{"ll":"2018年1月12日","L":"2018/01/12","MM-DD":"01-12"},"excerpt":"<p>一直想把数据结构系统温故一下，今天先来一个总括，后续慢慢补充。</p>","link":"posts/1515751776","tags":["数据结构"],"categories":["数据结构"]},{"title":"Android开发BroadcastReceiver详解","date":"2017-09-13T13:13:27.000Z","date_formatted":{"ll":"2017年9月13日","L":"2017/09/13","MM-DD":"09-13"},"excerpt":"<p>BroadcastReceiver是Android应用中一个重要的组件，顾名思义，BroadcastReceiver代表广播消息接收器。从代码实现角度来看，BroadcastReceiver非常类似于事件编程中的监听器。与普通事件监昕器不同的是，普通事件监昕器监听的事件源是程序中的对象:而BroadcastReceiver监听的事件源是Android应用中的其他组件。本篇文章就简单讲一下BoardcastReceiver的基本使用。</p>","link":"posts/1505308407","categories":["Android"]},{"title":"Fragment实现懒加载之setUserVisibleHint探究","date":"2017-07-28T11:59:01.000Z","date_formatted":{"ll":"2017年7月28日","L":"2017/07/28","MM-DD":"07-28"},"excerpt":"<p>一种场景很重要，即使所见即所得，例如页面可见时才加载数据，既节省内存，又能提示用户当前数据正在处理，不必感到迷茫。</p>","link":"posts/1501243141","tags":["Fragment","懒加载"],"categories":["Android"]},{"title":"Android架构MVC、MVP和MVVM的区别","date":"2017-02-28T11:39:23.000Z","date_formatted":{"ll":"2017年2月28日","L":"2017/02/28","MM-DD":"02-28"},"excerpt":"<p>Android比较流行的应用架构目前有3种形式：MVC、MVP、MVVM。MVC是最古老的用法，但是随着业务的拓展，框架冗余度也相应变大，以至于到最后不容易维护，近些年逐渐被MVP和MVVM所代替。以下仅仅针对这三种进行图示说明，便于更清楚的理解。</p>","link":"posts/1488281963","tags":["系统架构"],"categories":["Android"]},{"title":"Java注解小记","date":"2016-12-16T01:34:42.000Z","date_formatted":{"ll":"2016年12月16日","L":"2016/12/16","MM-DD":"12-16"},"excerpt":"<p>谈到注解，java中不可或缺的一章，更是各类框架组成的一部分，给开发者带来了极好的编程体验，代码量少，易阅读，易维护…</p>","link":"posts/1481852082","categories":["Java"]},{"title":"Java中对==、equals()、hashcode()三者的理解","date":"2016-12-08T08:57:06.000Z","date_formatted":{"ll":"2016年12月8日","L":"2016/12/08","MM-DD":"12-08"},"excerpt":"<p>以前看了有关==、equals()、hashcode()这三者的区别和使用，当时感觉就这一点知识能够记住，最近用到这块内容脑海中只有一丝印象却不知具体如何，好记性不如赖笔头，遂再重新总结一下，以便日后信手拈来。</p>","link":"posts/1481187426","categories":["Java"]}]}