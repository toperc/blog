{"title":"Android开发之玩转Android帧动画","date":"2021-02-28T04:25:24.000Z","date_formatted":{"ll":"2021年2月28日","L":"2021/02/28","MM-DD":"02-28"},"link":"posts/1614486338","comments":true,"tags":["Android","动画"],"categories":["Android"],"updated":"2021-03-03T05:20:37.286Z","content":"<p>帧动画有着极其广泛的应用，也非常容易理解，其实就是简单的由N张静态图片收集起来，然后我们通过控制依次显示这些图片，因为人眼&quot;视觉残留&quot;的原因，会让我们造成动画的&quot;错觉&quot;，跟放电影的原理一样！Android中展示这种形式一般有两种方式，一种用AnimationDrawable实现，另外一种直接引用GIF实现。本文就给阐述一下如何通过AnimationDrawable实现帧动画。</p>\n<a id=\"more\"></a>\n<h2 id=\"帧动画本质\">帧动画本质<a title=\"#帧动画本质\" href=\"#帧动画本质\"></a></h2>\n<p>将动画拆分为 帧 的形式，且定义每一帧 = 每一张图片，然后按序播放一组预先定义好的图片。</p>\n<h2 id=\"准备工作\">准备工作<a title=\"#准备工作\" href=\"#准备工作\"></a></h2>\n<p>既然是帧动画肯定需要一组图片，类似幻灯片一样，我们把每一张图片定义一个专属“组”内特定的名字，然后将这组图片资源放到<code>drawable</code>中。</p>\n<h2 id=\"实现方式\">实现方式<a title=\"#实现方式\" href=\"#实现方式\"></a></h2>\n<p>这里我给大家介绍两种实现方法：</p>\n<ul>\n<li>在XML中定义然后代码中调用</li>\n<li>直接在代码中定义调用</li>\n</ul>\n<p>其中xml创建的xml动画文件要放在<code>res/drawable/</code>目录下。</p>\n<h2 id=\"在xml中定义然后代码中调用\">在XML中定义然后代码中调用<a title=\"#在xml中定义然后代码中调用\" href=\"#在xml中定义然后代码中调用\"></a></h2>\n<p>1.在 /res/drawable 文件夹下建立一个名为 abunation_list.xml 的文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">animation-list</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:oneshot</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">    &lt;item</span><br><span class=\"line\">        android:drawable=&quot;@drawable/iron_1&quot;</span><br><span class=\"line\">        android:duration=&quot;200&quot;/&gt;</span><br><span class=\"line\">    &lt;item</span><br><span class=\"line\">        android:drawable=&quot;@drawable/iron_2&quot;</span><br><span class=\"line\">        android:duration=&quot;200&quot;/&gt;</span><br><span class=\"line\">    &lt;item</span><br><span class=\"line\">        android:drawable=&quot;@drawable/iron_3&quot;</span><br><span class=\"line\">        android:duration=&quot;200&quot;/&gt;</span><br><span class=\"line\">    &lt;item</span><br><span class=\"line\">        android:drawable=&quot;@drawable/iron_4&quot;</span><br><span class=\"line\">        android:duration=&quot;200&quot;/&gt;</span><br><span class=\"line\">    &lt;item</span><br><span class=\"line\">        android:drawable=&quot;@drawable/iron_5&quot;</span><br><span class=\"line\">        android:duration=&quot;200&quot;/&gt;</span><br><span class=\"line\">    &lt;item</span><br><span class=\"line\">        android:drawable=&quot;@drawable/iron_6&quot;</span><br><span class=\"line\">        android:duration=&quot;200&quot;/&gt;</span><br><span class=\"line\">    &lt;item</span><br><span class=\"line\">        android:drawable=&quot;@drawable/iron_7&quot;</span><br><span class=\"line\">        android:duration=&quot;200&quot;/&gt;</span><br><span class=\"line\">    &lt;item</span><br><span class=\"line\">        android:drawable=&quot;@drawable/iron_8&quot;</span><br><span class=\"line\">        android:duration=&quot;200&quot;/&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">animation-list</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>其中oneshot属性，用于设置是否需要循环播放，true为仅播放一次，false 为连续的循环播放。</p>\n<p>2.将其添加到ImageView中并启动动画</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imageView = findViewById(R.id.image);</span><br><span class=\"line\">imageView.setImageResource(R.drawable.abunation_list);</span><br><span class=\"line\">AnimationDrawable animationDrawable = (AnimationDrawable) imageView.getDrawable();</span><br><span class=\"line\">animationDrawable.start();</span><br></pre></td></tr></table></figure>\n<h2 id=\"直接在代码中定义调用\">直接在代码中定义调用<a title=\"#直接在代码中定义调用\" href=\"#直接在代码中定义调用\"></a></h2>\n<p>在代码中添加顾名思义，就是将要播放的图片集合，一张一张的添加到一个 AnimationDrawable 对象中去，接着再将其添加到 imageView 中，调用 start() 方法便能开始播放。AnimationDrawable同样也有一个OneShot()方法，用于设置是否需要循环播放。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imageView = findViewById(R.id.image);</span><br><span class=\"line\">AnimationDrawable animationDrawable1 = <span class=\"keyword\">new</span> AnimationDrawable();</span><br><span class=\"line\">animationDrawable1.addFrame(getResources().getDrawable(R.drawable.iron_1 ),<span class=\"number\">200</span>);</span><br><span class=\"line\">animationDrawable1.addFrame(getResources().getDrawable(R.drawable.iron_2 ),<span class=\"number\">200</span>);</span><br><span class=\"line\">animationDrawable1.addFrame(getResources().getDrawable(R.drawable.iron_3 ),<span class=\"number\">200</span>);</span><br><span class=\"line\">animationDrawable1.addFrame(getResources().getDrawable(R.drawable.iron_4 ),<span class=\"number\">200</span>);</span><br><span class=\"line\">animationDrawable1.addFrame(getResources().getDrawable(R.drawable.iron_5 ),<span class=\"number\">200</span>);</span><br><span class=\"line\">animationDrawable1.addFrame(getResources().getDrawable(R.drawable.iron_6 ),<span class=\"number\">200</span>);</span><br><span class=\"line\">animationDrawable1.addFrame(getResources().getDrawable(R.drawable.iron_7 ),<span class=\"number\">200</span>);</span><br><span class=\"line\">animationDrawable1.addFrame(getResources().getDrawable(R.drawable.iron_8 ),<span class=\"number\">200</span>);</span><br><span class=\"line\">animationDrawable1.setOneShot(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">imageView_2.setImageDrawable(animationDrawable1);</span><br><span class=\"line\">animationDrawable1.start();</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h2>\n<p>Android帧动画相对简单一些，开发过程中可能有多个地方使用相同的帧动画，建议采用XML定义的形式去实现，可用于文件共享，当然也可以通过代码进行封装，另外如果动画相对比较复杂，可以采用GIF加载更简单一些。无论是通过一组图片定义的帧动画还是GIF引入都需要注意内存哦，可通过一些手段进行压缩处理一下。</p>\n","prev":{"title":"Android开发之玩转Android属性动画","link":"posts/1614527870"},"next":{"title":"Android开发之玩转Android补间动画","link":"posts/1614434754"},"plink":"https://blog.ixin.run/posts/1614486338/","toc":[{"id":"帧动画本质","title":"帧动画本质","index":"1"},{"id":"准备工作","title":"准备工作","index":"2"},{"id":"实现方式","title":"实现方式","index":"3"},{"id":"在xml中定义然后代码中调用","title":"在XML中定义然后代码中调用","index":"4"},{"id":"直接在代码中定义调用","title":"直接在代码中定义调用","index":"5"},{"id":"总结","title":"总结","index":"6"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1614486338/\" title=\"Android开发之玩转Android帧动画\">https://blog.ixin.run/posts/1614486338/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}