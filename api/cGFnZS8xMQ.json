{"per_page":10,"total":12,"current":11,"data":[{"title":"Android开发图片缓存框架Glide的总结","date":"2016-11-30T12:21:56.000Z","date_formatted":{"ll":"2016年11月30日","L":"2016/11/30","MM-DD":"11-30"},"excerpt":"<p>前段时间写过一篇图片缓存框架Picasso的用法，对于Picasso有些同学也比较熟悉，采用Lru最近最少缓存策略，并且自带内存和硬盘缓存机制，在图片加载尤其是多图加载着实为大伙省了不少力，在此之前同样也相识有Afinal、Xutil、UniversalImageLoader等优秀的开源框架，今天再总结一个图片加载缓存框架 — Glide，以助自己后边的项目构建舔砖加瓦吧。</p>","link":"posts/1480508516","categories":["Android"]},{"title":"Java反射你知道多少","date":"2016-11-20T09:51:14.000Z","date_formatted":{"ll":"2016年11月20日","L":"2016/11/20","MM-DD":"11-20"},"excerpt":"<p>一直想把java反射原理详细的总结一下，昨天看到一位大虾利用许多小栗子阐述的很清楚，我就顺手拈来着手敲了一遍并加以修正补充和说明，以便日后回顾和深入学习。</p>","link":"posts/1479635474","categories":["Java"]},{"title":"Android开发之WebView详细总结","date":"2016-10-11T13:18:15.000Z","date_formatted":{"ll":"2016年10月11日","L":"2016/10/11","MM-DD":"10-11"},"excerpt":"<p>WebView是android开发中专门用来加载网页的一种控件，常用于混合式开发，它采用WebKit渲染引擎来显示网页包括控制网页的前进、后退、放大、缩小、执行文本、搜索等功能。WebKit是一种让网页浏览器绘制网页的排版引擎，被用于Apple Safari，其分支也用于基于Chromuim的网页浏览器，详细了解可移步于https://zh.wikipedia.org/zh/WebKit 。</p>","link":"posts/1476191895","categories":["Android"]},{"title":"TCP/IP协议三次握手和四次挥手大白话解说","date":"2016-09-20T12:33:01.000Z","date_formatted":{"ll":"2016年9月20日","L":"2016/09/20","MM-DD":"09-20"},"excerpt":"<p>昨天晚上被一位师傅问到了TCP/IP的工作机制，心里很清楚三次握手，然而对于四次挥手却忘了，这是大学习里学过的，奋而翻阅书籍和网络对之前所学的做一个温顾，算是夯实自我吧。</p>\n<p>TCP(Transmission Control Protocol)网络传输控制协议，是一种面向连接的、可靠的、基于字节流的传输层通信协议，数据传输前建立连接的工作要经过三次握手，数据传输后断开连接的工作要经过四次挥手。</p>","link":"posts/1474374781","tags":["HTTP"],"categories":["计算机网络"]},{"title":"Java开发揭开socket编程的面纱","date":"2016-08-29T15:37:25.000Z","date_formatted":{"ll":"2016年8月29日","L":"2016/08/29","MM-DD":"08-29"},"excerpt":"<p>socket编程大家应该听的很多了，socket又称为“套接字”，用于描述IP地址和端口，是一个通信链的句柄，最主要的特点便是设定IP和端口，保证了程序的双向互通性。应用程序通常通过&quot;套接字&quot;向网络发出请求或者应答网络请求。</p>","link":"posts/1472485045","categories":["Java"]},{"title":"Android开发之Intent及IntentFilter的探究学习","date":"2016-08-01T06:07:34.000Z","date_formatted":{"ll":"2016年8月1日","L":"2016/08/01","MM-DD":"08-01"},"excerpt":"<p>Intent在android开发过程中再熟悉不过了，调用系统相机，调用系统电话，页面跳转，数据传递…其实这些都是基本的，也是在开发过程中用到最多的，但是更深一层你又知道多少呢，所以还是总结一下吧，日后顺手拈来。</p>","link":"posts/1470031654","categories":["Android"]},{"title":"Android开发之进程间通信AIDL的探究和学习","date":"2016-07-30T05:20:29.000Z","date_formatted":{"ll":"2016年7月30日","L":"2016/07/30","MM-DD":"07-30"},"excerpt":"","link":"posts/1469856029","tags":["Android","进程间通信"],"categories":["Android"]},{"title":"什么是进程，什么是线程","date":"2016-07-28T05:03:39.000Z","date_formatted":{"ll":"2016年7月28日","L":"2016/07/28","MM-DD":"07-28"},"excerpt":"<p>提到进程和线程，大家都有所了解，但是据其概念又比较抽象不容易掌握。计算机科学是人类进步的结晶，但是也是为人类服务，所以千万不要被我们自己创造的东西绕进去而最终不知道这玩意到底是啥，所以提炼升华转成大白话最重要。</p>","link":"posts/1469682219","categories":["计算机基础"]},{"title":"Android开发Handler消息机制探究","date":"2016-07-27T07:41:45.000Z","date_formatted":{"ll":"2016年7月27日","L":"2016/07/27","MM-DD":"07-27"},"excerpt":"<p>我们知道一个应用启动时系统会为其创建一个进程，而每一个Activity启动的时候又会形成一个线程，这个线程叫主线程，又叫UI线程。Android的主线程是不安全的，因为从主线程中可以创建多个子线程来分配任务，一个activity的所有view都是唯一的，都有唯一的标识，如果在每个子线程中更新view，我们不能预知线程执行结果的先后顺序，也就无法预知什么时候才能更新view，所以造成结果就是view更新时的冲突问题。这也就是为什么从安卓2.0之后官方规定只能在主线程中更新界面了，子线程执行结果后通知主线程更新界面的桥梁便需要handler来帮忙，本篇深入探究一下handle的工作机制。</p>","link":"posts/1469605305","tags":["线程间通信"],"categories":["Android"]},{"title":"JAVA设计模式之代理模式","date":"2016-06-15T08:12:56.000Z","date_formatted":{"ll":"2016年6月15日","L":"2016/06/15","MM-DD":"06-15"},"excerpt":"<p>说起Java代理模式，不明其理可能一头雾水，明白了也就很简单了。举一个生活中最典型的例子：律师代替原告打官司，来看一下过程：</p>\n<ol>\n<li>原告准备做哪些事：原告可以提供很多材料给律师，目的是打官司赢地皮。</li>\n<li>律师二次包装：律师利用自身丰厚的经验根据这些材料帮着打。</li>\n<li>原告有信息不愿透漏：律师只能根据原告提供的信息进行辩论，原告也许有暗黑的一面，不愿意让律师说出来。</li>\n</ol>\n<p>最终结果：律师能否打赢，注重看律师的水平，当然离不开原告所提供资料的充分和真实。</p>","link":"posts/1465978376","tags":["设计模式"],"categories":["Java"]}]}