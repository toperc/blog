{"title":"Android上的硬件加速","date":"2018-11-27T15:35:38.000Z","date_formatted":{"ll":"2018年11月27日","L":"2018/11/27","MM-DD":"11-27"},"link":"posts/1543332938","comments":true,"categories":["Android"],"updated":"2021-01-29T12:51:44.621Z","content":"<p>层经接手的一个项目中有一个电子签名功能，总是莫名会出现绘制的签名跑偏的问题，后来经检测发现前人为了使view更好的进行绘制，全局开启了硬件加速。这里就总结一下硬件加速的知识，踩过的坑记一下。</p>\n<a id=\"more\"></a>\n<h2 id=\"什么是硬件加速\">什么是硬件加速<a title=\"#什么是硬件加速\" href=\"#什么是硬件加速\"></a></h2>\n<p>官方的话：<br>\n硬件加速（Hardware acceleration）就是利用硬件模块来替代软件算法以充分利用硬件所固有的快速特性。硬件加速通常比软件算法的效率要高。</p>\n<p>自己的话：<br>\n都知道CPU很厉害，计算能力超强，但是万物总有一个量，他能力强了你也不能什么都交给他，任务超出承受能力他也是受不了的。这个时候怎么弄？可以交给其他“更专业的人”（GPU）来做，分工明确，让cpu腾出来点空做其他事，这样整体效率就提高了。（不好意思，啰嗦了）</p>\n<h2 id=\"硬件加速的优缺点\">硬件加速的优缺点<a title=\"#硬件加速的优缺点\" href=\"#硬件加速的优缺点\"></a></h2>\n<p>硬件加速能能够使用GPU来加速2D图形的渲染操作，但是硬件加速并不能支持所有的渲染操作。针对自定义的View有可能会出现渲染错位的情况，如果有自定义的View，在开启硬件加速的设备上操作，出现渲染问题，我们可以关闭硬件加速。</p>\n<h2 id=\"android上的硬件加速\">Android上的硬件加速<a title=\"#android上的硬件加速\" href=\"#android上的硬件加速\"></a></h2>\n<p>在Android API 11之后，开始支持硬件加速，所有的ViewCanvas都会支持GPU,但是硬件加速会占用一定的RAM资源。在API 14（Android 4.0）之后默认是全部开启硬件加速的，如果你的应用全部都是标准的View和Drawable，全局都打开硬件加速是不会有问题的。</p>\n<p>然而硬件加速并不是支持所有的2D图形绘制操作，在Android4.0之后的设备上，有时候我们定制了比较复杂的自定义View，我们的view在刷新的时候有可能会出现花屏或者某些View错位的情况，通过Logcat分析会出现这样的错误：<br>\n<code>09-18 14:34:39.656: DEBUG/OpenGLRenderer(3104): GL error from OpenGLRenderer: 0x501</code></p>\n<p>从这个日志可以分析出，初步认为可能就是硬件加速导致的问题，必要时关闭硬件加速即可。</p>\n<h2 id=\"硬件加速的限制\">硬件加速的限制<a title=\"#硬件加速的限制\" href=\"#硬件加速的限制\"></a></h2>\n<p>目前，Android对硬件加速的支持并非完美，有些绘制操作在开启硬件加速的情况下不能正常工作（具体的列表可以参考Android开发者文档）。</p>\n<p>不过Android可以保证内置的组件和应用支持硬件加速。因此，如果应用中只使用了标准UI组件，可以放心开启硬件加速。</p>\n<h2 id=\"硬件加速的开启和关闭\">硬件加速的开启和关闭<a title=\"#硬件加速的开启和关闭\" href=\"#硬件加速的开启和关闭\"></a></h2>\n<p>由于硬件加速自身并非完美无缺，所以Android提供选项来打开或者关闭硬件加速，默认是关闭。可以在4个级别上打开或者关闭硬件加速。</p>\n<h3 id=\"application级别\">Application级别<a title=\"#application级别\" href=\"#application级别\"></a></h3>\n<p>在AndroidManifest内的application标签上可控制全局硬件加速的开启和关闭：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;application android:hardwareAccelerated=<span class=\"string\">&quot;true&quot;</span> ...&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"activity级别\">Activity级别<a title=\"#activity级别\" href=\"#activity级别\"></a></h3>\n<p>同样在在AndroidManifest内的activity标签上可控制当前activity的硬件加速的开启和关闭：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;activity android:hardwareAccelerated=<span class=\"string\">&quot;false&quot;</span> ...&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"window级别\">Window级别<a title=\"#window级别\" href=\"#window级别\"></a></h3>\n<p>Window级别上只能控制硬件加速的开启方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getWindow().setFlags(</span><br><span class=\"line\">        WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED,</span><br><span class=\"line\">    \tWindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);</span><br></pre></td></tr></table></figure>\n<h3 id=\"view级别\">View级别<a title=\"#view级别\" href=\"#view级别\"></a></h3>\n<p>View级别上只有关闭硬件加速的方法。<br>\n方法一：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myView.setLayerType(View.LAYER_TYPE_HARDWARE, <span class=\"keyword\">null</span>);</span><br></pre></td></tr></table></figure>\n<p>方法二，使用android:layerType=&quot;software&quot;来关闭硬件加速：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;LinearLayout xmlns:android=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span>  </span><br><span class=\"line\">        android:layout_width=<span class=\"string\">&quot;fill_parent&quot;</span>  </span><br><span class=\"line\">        android:layout_height=<span class=\"string\">&quot;fill_parent&quot;</span>  </span><br><span class=\"line\">        android:orientation=<span class=\"string\">&quot;vertical&quot;</span>  </span><br><span class=\"line\">        android:paddingLeft=<span class=\"string\">&quot;2dp&quot;</span>  </span><br><span class=\"line\">        android:layerType=<span class=\"string\">&quot;software&quot;</span>  </span><br><span class=\"line\">        android:paddingRight=<span class=\"string\">&quot;2dp&quot;</span> &gt; </span><br></pre></td></tr></table></figure>\n<h2 id=\"判断是否支持硬件加速方法\">判断是否支持硬件加速方法<a title=\"#判断是否支持硬件加速方法\" href=\"#判断是否支持硬件加速方法\"></a></h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// returns true if the View is attached to a hardware accelerated window. </span></span><br><span class=\"line\">View.isHardwareAccelerated(); </span><br><span class=\"line\"><span class=\"comment\">// returns true if the Canvas is hardware accelerated.</span></span><br><span class=\"line\">canvas.isHardwareAccelerated();</span><br></pre></td></tr></table></figure>\n<h2 id=\"理解view的绘制模型\">理解View的绘制模型<a title=\"#理解view的绘制模型\" href=\"#理解view的绘制模型\"></a></h2>\n<ol>\n<li>没有硬件加速：invalidate the view hierarchy ------&gt; draw the view hierarchy</li>\n<li>有硬件加速：invalidate the view hierarchy ------&gt; record and update the display list ------&gt; draw the display list</li>\n</ol>\n<h2 id=\"开启硬件加速之后的异常反应\">开启硬件加速之后的异常反应<a title=\"#开启硬件加速之后的异常反应\" href=\"#开启硬件加速之后的异常反应\"></a></h2>\n<ol>\n<li>某些UI元素没有显示：可能是没有调用invalidate。</li>\n<li>某些UI元素没有更新：可能是没有调用invalidate。</li>\n<li>绘制不正确：可能使用了不支持硬件加速的操作， 需要关闭硬件加速或者绕过该操作。</li>\n<li>抛出异常：可能使用了不支持硬件加速的操作， 需要关闭硬件加速或者绕过该操作。</li>\n</ol>\n<h2 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h2>\n<p>硬件加速开启在目前开发阶段并非是一剂良方，根据使用时机，必要时开启或关闭。事物都有一个推进过程，随着Android的版本升级以及硬件能力的提高，相信一段时间之后，硬件加速可以得到完美的支持。</p>\n","prev":{"title":"Gradle之Groovy语言","link":"posts/1543411658"},"next":{"title":"Android设备信息的那些事","link":"posts/1543208610"},"plink":"https://blog.ixin.run/posts/1543332938/","toc":[{"id":"什么是硬件加速","title":"什么是硬件加速","index":"1"},{"id":"硬件加速的优缺点","title":"硬件加速的优缺点","index":"2"},{"id":"android上的硬件加速","title":"Android上的硬件加速","index":"3"},{"id":"硬件加速的限制","title":"硬件加速的限制","index":"4"},{"id":"硬件加速的开启和关闭","title":"硬件加速的开启和关闭","index":"5","children":[{"id":"application级别","title":"Application级别","index":"5.1"},{"id":"activity级别","title":"Activity级别","index":"5.2"},{"id":"window级别","title":"Window级别","index":"5.3"},{"id":"view级别","title":"View级别","index":"5.4"}]},{"id":"判断是否支持硬件加速方法","title":"判断是否支持硬件加速方法","index":"6"},{"id":"理解view的绘制模型","title":"理解View的绘制模型","index":"7"},{"id":"开启硬件加速之后的异常反应","title":"开启硬件加速之后的异常反应","index":"8"},{"id":"总结","title":"总结","index":"9"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1543332938/\" title=\"Android上的硬件加速\">https://blog.ixin.run/posts/1543332938/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}