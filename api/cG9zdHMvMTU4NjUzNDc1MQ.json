{"title":"Android开发View滑动冲突处理","date":"2020-04-10T16:05:51.000Z","date_formatted":{"ll":"2020年4月11日","L":"2020/04/11","MM-DD":"04-11"},"link":"posts/1586534751","comments":true,"tags":["View"],"categories":["Android"],"updated":"2021-01-29T12:51:44.629Z","content":"<p>最近在重构一个老项目，遇到ScrollView嵌套WebView的场景，因为WebView加载的网页并不是自适应，所以导致在滑动网页的时候异常卡顿，很明显是滑动冲突了，解决方式也很常规，针对滑动冲突这里顺便做笔记吧。</p>\n<a id=\"more\"></a>\n<h2 id=\"冲突场景\">冲突场景<a title=\"#冲突场景\" href=\"#冲突场景\"></a></h2>\n<p>滑动冲突场景可简单分为两种：</p>\n<ul>\n<li>外部和内部的滑动方向不一致</li>\n<li>外部和内部的滑动方向一致</li>\n</ul>\n<p>示图如下：<br>\n<img src=\"https://img-blog.csdnimg.cn/20200410235829102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMDk3OA==,size_16,color_FFFFFF,t_70\" alt=\"滑动冲突场景图示\"><br>\n其他情况的滑动冲突都是在这两种冲突的基础上延伸出来的，或者以上两种场景的嵌套，面对这种我们处理方式就是剥离成以上基础的冲突场景，逐个处理。</p>\n<h2 id=\"处理规则\">处理规则<a title=\"#处理规则\" href=\"#处理规则\"></a></h2>\n<p><strong>面对场景1</strong>，它的处理规则是：当用户左右滑动时（父），需要让外部的View拦截点击事件；当用户上下滑动时（子），需要让内部View拦截点击事件。其实说白了，我们的主要目标是确定目标view的滑动方向。</p>\n<p>确定滑动方向，列举以下三种方式参考：</p>\n<ol>\n<li>根据垂直滑动和水平滑动的距离对比判断，哪个大就是哪个方向滑动。</li>\n<li>根据滑动路径与水平方向的夹角，大于45度认为是垂直滑动，否则是水平滑动。</li>\n<li>根据垂直滑动和水平滑动的速度对比判断，哪个大就是哪个方向滑动。</li>\n</ol>\n<p><strong>面对场景2</strong>，因为滑动方向是一致的，所以我们只有根据业务来区分到底应该滑动哪一个view。核心点就是准确判断滑动区域的位置。</p>\n<h2 id=\"解决方式\">解决方式<a title=\"#解决方式\" href=\"#解决方式\"></a></h2>\n<p>从上边可以知道冲突的产生主要是不确定具体应该在哪一层滑动（内层、外层）,上边也说了相关的处理规则，接下就是我们按照规则主动把事件分发给相应的view。之前我写过一篇<a href=\"https://blog.ixin.run/posts/1543414682\" target=\"_blank\">《Android开发之onTouch事件的分发拦截消费机制探究学习》</a>，这里用到的知识点就是事件的拦截机制。</p>\n<p>针对滑动冲突，这里给出两种解决滑动冲突的方式：外部拦截法和内部拦截法。</p>\n<h3 id=\"外部拦截法\">外部拦截法<a title=\"#外部拦截法\" href=\"#外部拦截法\"></a></h3>\n<p>外部拦截法，就是处理父View的滑动事件时，父View主动把事件拦截下来自行消化，其他情况继续不拦截由子View消化处理。<br>\n<img src=\"https://img-blog.csdnimg.cn/20200410235953792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMDk3OA==,size_16,color_FFFFFF,t_70\" alt=\"外部拦截法\"></p>\n<p>这里需要注意只在父View的ACTION_MOVE事件中判断是否进行拦截，其他事件不需要，因为一旦拦截事件就无法传递到子View了。</p>\n<h3 id=\"内部拦截法\">内部拦截法<a title=\"#内部拦截法\" href=\"#内部拦截法\"></a></h3>\n<p>内部拦截法，默认子View处理滑动事件，当判断某个位置或者某种情况下应该父View滑动时，主动告知父View开启事件拦截，由父View消化处理。这里用到一个<code>parent.requestDisallowInterceptTouchEvent()</code>方法。<br>\n<img src=\"https://img-blog.csdnimg.cn/20200411000015186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMDk3OA==,size_16,color_FFFFFF,t_70\" alt=\"内部拦截法\"></p>\n<h2 id=\"viewpager处理滑动冲突分析\">ViewPager处理滑动冲突分析<a title=\"#viewpager处理滑动冲突分析\" href=\"#viewpager处理滑动冲突分析\"></a></h2>\n<p>有同学可能会问，既然内外层都可以滑动，这样很容易出现冲突，但是为什么Viewpager中不存在滑动冲突呢。其实官方已经为我们处理了。</p>\n<p>ViewPager也是一个ViewGroup，在ViewPager的initViewPager方法中生成Scroller对象，Scroller是Android内置的专门用于渐进式滑动的类，配合插值器可以产生立体的滑动感，既然ViewPager是一个容器并且可以滑动，那么也就避免不了内嵌view滑动冲突这一遭。</p>\n<p>ViewPager只关注水平方向的手指滑动，根据水平方向的手指滑动来切换页面。在垂直方向上，ViewPager并不关心，因此，ViewPager很有必要解决一下滑动冲突，把竖直方向的滑动传递给子View来处理。</p>\n<p>我们知道，ViewGroup是在onInterceptTouchEvent函数中决定是否拦截触摸事件, 所以我们直接去查看ViewPager的onInterceptTouchEvent事件拦截，来分析ViewPager的滑动冲突处理方式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onInterceptTouchEvent</span><span class=\"params\">(MotionEvent ev)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 触摸动作</span></span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> action = ev.getAction() &amp; MotionEventCompat.ACTION_MASK;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 时刻要注意触摸是否已经结束</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (action == MotionEvent.ACTION_CANCEL || action == MotionEvent.ACTION_UP) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//3. Release the drag.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (DEBUG) Log.v(TAG, <span class=\"string\">&quot;Intercept done!&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//4. 重置一些跟判断是否拦截触摸相关变量</span></span><br><span class=\"line\">        resetTouch();</span><br><span class=\"line\">        <span class=\"comment\">//5. 触摸结束，无需拦截</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//6. 如果当前不是按下事件，我们就判断一下，是否是在拖拽切换页面</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (action != MotionEvent.ACTION_DOWN) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//7. 如果当前是正在拽切换页面，直接拦截掉事件，后面无需再做拦截判断</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mIsBeingDragged) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DEBUG) Log.v(TAG, <span class=\"string\">&quot;Intercept returning true!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//8. 如果标记为不允许拖拽切换页面，我们就&quot;放过&quot;一切触摸事件</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mIsUnableToDrag) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DEBUG) Log.v(TAG, <span class=\"string\">&quot;Intercept returning false!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//9. 根据不同的动作进行处理</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (action) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//10. 如果是手指移动操作</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> MotionEvent.ACTION_MOVE: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//11. 代码能执行到这里，就说明mIsBeingDragged==false，否则的话，在第7个注释处就已经执行结束了</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//12.使用触摸点Id，主要是为了处理多点触摸</span></span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> activePointerId = mActivePointerId;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (activePointerId == INVALID_POINTER) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//13.如果当前的触摸点id不是一个有效的Id，无需再做处理</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//14.根据触摸点的id来区分不同的手指，我们只需关注一个手指就好</span></span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> pointerIndex = MotionEventCompat.findPointerIndex(ev, activePointerId);</span><br><span class=\"line\">            <span class=\"comment\">//15.根据这个手指的序号，来获取这个手指对应的x坐标</span></span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> x = MotionEventCompat.getX(ev, pointerIndex);</span><br><span class=\"line\">            <span class=\"comment\">//16.在x轴方向上移动的距离</span></span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> dx = x - mLastMotionX;</span><br><span class=\"line\">            <span class=\"comment\">//17.x轴方向的移动距离绝对值</span></span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> xDiff = Math.abs(dx);</span><br><span class=\"line\">            <span class=\"comment\">//18.同理，参照16、17条注释</span></span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> y = MotionEventCompat.getY(ev, pointerIndex);</span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> yDiff = Math.abs(y - mInitialMotionY);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DEBUG) Log.v(TAG, <span class=\"string\">&quot;Moved x to &quot;</span> + x + <span class=\"string\">&quot;,&quot;</span> + y + <span class=\"string\">&quot; diff=&quot;</span> + xDiff + <span class=\"string\">&quot;,&quot;</span> + yDiff);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//19.判断当前显示的页面是否可以滑动，如果可以滑动，则将该事件丢给当前显示的页面处理</span></span><br><span class=\"line\">            <span class=\"comment\">//isGutterDrag是判断是否在两个页面之间的缝隙内移动</span></span><br><span class=\"line\">            <span class=\"comment\">//canScroll是判断页面是否可以滑动</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dx != <span class=\"number\">0</span> &amp;&amp; !isGutterDrag(mLastMotionX, dx) &amp;&amp;</span><br><span class=\"line\">                    canScroll(<span class=\"keyword\">this</span>, <span class=\"keyword\">false</span>, (<span class=\"keyword\">int</span>) dx, (<span class=\"keyword\">int</span>) x, (<span class=\"keyword\">int</span>) y)) &#123;</span><br><span class=\"line\">                mLastMotionX = x;</span><br><span class=\"line\">                mLastMotionY = y;</span><br><span class=\"line\">                <span class=\"comment\">//20.标记ViewPager不去拦截事件</span></span><br><span class=\"line\">                mIsUnableToDrag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//21.如果x移动距离大于最小距离，并且斜率小于0.5，表示在水平方向上的拖动</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (xDiff &gt; mTouchSlop &amp;&amp; xDiff * <span class=\"number\">0.5f</span> &gt; yDiff) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (DEBUG) Log.v(TAG, <span class=\"string\">&quot;Starting drag!&quot;</span>);</span><br><span class=\"line\">                <span class=\"comment\">//22.水平方向的移动，需要ViewPager去拦截</span></span><br><span class=\"line\">                mIsBeingDragged = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"comment\">//23.如果ViewPager还有父View，则还要向父View申请将触摸事件传递给ViewPager</span></span><br><span class=\"line\">                requestParentDisallowInterceptTouchEvent(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">                <span class=\"comment\">//24.设置滚动状态</span></span><br><span class=\"line\">                setScrollState(SCROLL_STATE_DRAGGING);</span><br><span class=\"line\">                <span class=\"comment\">//25.保存当前位置</span></span><br><span class=\"line\">                mLastMotionX = dx &gt; <span class=\"number\">0</span> ? mInitialMotionX + mTouchSlop :</span><br><span class=\"line\">                        mInitialMotionX - mTouchSlop;</span><br><span class=\"line\">                mLastMotionY = y;</span><br><span class=\"line\">                <span class=\"comment\">//26.启用缓存</span></span><br><span class=\"line\">                setScrollingCacheEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (yDiff &gt; mTouchSlop) &#123;<span class=\"comment\">//27.否则的话，表示是竖直方向上的移动</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (DEBUG) Log.v(TAG, <span class=\"string\">&quot;Starting unable to drag!&quot;</span>);</span><br><span class=\"line\">                <span class=\"comment\">//28.竖直方向上的移动则不去拦截触摸事件</span></span><br><span class=\"line\">                mIsUnableToDrag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mIsBeingDragged) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 29.跟随手指一起滑动</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (performDrag(x)) &#123;</span><br><span class=\"line\">                    ViewCompat.postInvalidateOnAnimation(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//30.如果手指是按下操作</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> MotionEvent.ACTION_DOWN: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//31.记录按下的点位置</span></span><br><span class=\"line\">            mLastMotionX = mInitialMotionX = ev.getX();</span><br><span class=\"line\">            mLastMotionY = mInitialMotionY = ev.getY();</span><br><span class=\"line\">            <span class=\"comment\">//32.第一个ACTION_DOWN事件对应的手指序号为0</span></span><br><span class=\"line\">            mActivePointerId = MotionEventCompat.getPointerId(ev, <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"comment\">//33.重置允许拖拽切换页面</span></span><br><span class=\"line\">            mIsUnableToDrag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            <span class=\"comment\">//34.标记开始滚动</span></span><br><span class=\"line\">            mIsScrollStarted = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            <span class=\"comment\">//35.手动调用计算滑动的偏移量</span></span><br><span class=\"line\">            mScroller.computeScrollOffset();</span><br><span class=\"line\">            <span class=\"comment\">//36.如果当前滚动状态为正在将页面放置到最终位置，</span></span><br><span class=\"line\">            <span class=\"comment\">//且当前位置距离最终位置足够远</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mScrollState == SCROLL_STATE_SETTLING &amp;&amp;</span><br><span class=\"line\">                    Math.abs(mScroller.getFinalX() - mScroller.getCurrX()) &gt; mCloseEnough) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//37. 如果此时用户手指按下，则立马暂停滑动</span></span><br><span class=\"line\">                mScroller.abortAnimation();</span><br><span class=\"line\">                mPopulatePending = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                populate();</span><br><span class=\"line\">                mIsBeingDragged = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                <span class=\"comment\">//38.如果ViewPager还有父View，则还要向父View申请将触摸事件传递给ViewPager</span></span><br><span class=\"line\">                requestParentDisallowInterceptTouchEvent(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">                <span class=\"comment\">//39.设置当前状态为正在拖拽</span></span><br><span class=\"line\">                setScrollState(SCROLL_STATE_DRAGGING);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//40.结束滚动</span></span><br><span class=\"line\">                completeScroll(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">                mIsBeingDragged = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DEBUG) Log.v(TAG, <span class=\"string\">&quot;Down at &quot;</span> + mLastMotionX + <span class=\"string\">&quot;,&quot;</span> + mLastMotionY</span><br><span class=\"line\">                    + <span class=\"string\">&quot; mIsBeingDragged=&quot;</span> + mIsBeingDragged</span><br><span class=\"line\">                    + <span class=\"string\">&quot;mIsUnableToDrag=&quot;</span> + mIsUnableToDrag);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">case</span> MotionEventCompat.ACTION_POINTER_UP:</span><br><span class=\"line\">            onSecondaryPointerUp(ev);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//41.添加速度追踪</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mVelocityTracker == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        mVelocityTracker = VelocityTracker.obtain();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mVelocityTracker.addMovement(ev);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//42.只有在当前是拖拽切换页面时我们才会去拦截事件</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> mIsBeingDragged;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>从源码上面看出，斜率小于0.5时，则要拦截，否则不拦截。越靠近y轴的直线，斜率越大，越靠近x轴直线斜率越小。因此，当手指滑动的倾斜度比0.5小时就去拦截事件，由ViewPager来响应切换页面。<br>\n<img src=\"https://img-blog.csdnimg.cn/20200411000058337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMDk3OA==,size_16,color_FFFFFF,t_70\" alt=\"斜率图示\"></p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li>《Android开发艺术探索》，微信读书可以免费阅读。</li>\n<li><a href=\"https://blog.csdn.net/huachao1001/article/details/51654692\">https://blog.csdn.net/huachao1001/article/details/51654692</a></li>\n</ul>\n","prev":{"title":"更好的人生一定要学会做减法","link":"posts/1586535410"},"next":{"title":"Android开发约束布局ConstraintLayout学习总结","link":"posts/1584977277"},"plink":"https://blog.ixin.run/posts/1586534751/","toc":[{"id":"冲突场景","title":"冲突场景","index":"1"},{"id":"处理规则","title":"处理规则","index":"2"},{"id":"解决方式","title":"解决方式","index":"3","children":[{"id":"外部拦截法","title":"外部拦截法","index":"3.1"},{"id":"内部拦截法","title":"内部拦截法","index":"3.2"}]},{"id":"viewpager处理滑动冲突分析","title":"ViewPager处理滑动冲突分析","index":"4"},{"id":"参考","title":"参考","index":"5"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1586534751/\" title=\"Android开发View滑动冲突处理\">https://blog.ixin.run/posts/1586534751/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}