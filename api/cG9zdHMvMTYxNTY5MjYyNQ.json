{"title":"Android多渠道打包","date":"2021-03-14T03:30:13.000Z","date_formatted":{"ll":"2021年3月14日","L":"2021/03/14","MM-DD":"03-14"},"link":"posts/1615692625","comments":true,"tags":["多渠道打包"],"categories":["Android"],"updated":"2021-03-15T04:16:08.115Z","content":"<p>Android的签名打包是每个android开发者都会的基本技能，但是针对多渠道打包需要当前app业务支撑，有些app是无需上线的到各个应用市场的，或者说公司不需要这些分发做定制化，这就导致可能接触不到多渠道打包，本文就记录一下Android上多渠道打包的那些事。</p>\n<a id=\"more\"></a>\n<h2 id=\"build.gradle配置\">build.gradle配置<a title=\"#build.gradle配置\" href=\"#build.gradle配置\"></a></h2>\n<p>app模块下build.gradle的配置一般分为以下几个部分：</p>\n<ul>\n<li>defaultConfig 默认配置</li>\n<li>signingConfigs 签名信息配置</li>\n<li>buildTypes 编译类型配置</li>\n<li>productFlavors 编译渠道配置</li>\n<li>dependencies 依赖配置</li>\n</ul>\n<p>其中：</p>\n<p><strong>signingConfigs</strong>主要用于配置签名文件，包括签名的账户信息以及签名文件的具体位置。</p>\n<p><strong>buildTypes</strong>主要配置编译类型，例如当前打出的包事release包还是debug包。</p>\n<p><strong>productFlavors</strong>主要用于渠道的配置，例如小米、华为、360等应用市场渠道，还有多维度设置，例如小米渠道下的1.0版本，360渠道下的1.1版本等。</p>\n<h2 id=\"打包方式\">打包方式<a title=\"#打包方式\" href=\"#打包方式\"></a></h2>\n<p>打包方式有多种：</p>\n<ol>\n<li>可采用菜单上 <code>Build-&gt; Generate Signed Bundle / Apk...</code> 进行打包。</li>\n<li>右侧Gradle菜单下触发打包task，<code>app-&gt;Tasks-&gt;build-&gt;assembleDebug/assembleRelease</code></li>\n<li>采用Terminal命令行打包，作用原理和第二种一样： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gradlew assembleDebug &#x2F;&#x2F;编译并打Debug包</span><br><span class=\"line\">gradlew assembleRelease &#x2F;&#x2F;编译并打Release的包</span><br></pre></td></tr></table></figure>\n更多命令使用可参看我之前写的一篇文章<a href=\"./posts/1521735946\">《AndroidStudio配置Terminal窗口及相关命令归总》</a></li>\n<li>自动化（CI/CD）打包，背后还是配置的命令行。</li>\n</ol>\n<h2 id=\"多渠道打包\">多渠道打包<a title=\"#多渠道打包\" href=\"#多渠道打包\"></a></h2>\n<p>一个多渠道打包最常使用的一个场景：</p>\n<blockquote>\n<p>亮仔呀，我想知道我们的APP在哪个应用市场渠道下载的最多，我们以后就重点推广这个渠道，用钱砸到排名前面！！！</p>\n</blockquote>\n<p>开发的app发布多个分发平台是常规操作，借助三方统计平台可以很清楚的观察到各个渠道市场的分发量和活跃度，例如友盟统计。也可以上传到自己的统计服务器。</p>\n<p>由于各个渠道面对的用户不同，或平台审核标准不同，甚至需要各渠道使用不同的业务逻辑，需要根据不同渠道编写针对性的差异化代码。</p>\n<h3 id=\"gradle配置多渠道变量\">gradle配置多渠道变量<a title=\"#gradle配置多渠道变量\" href=\"#gradle配置多渠道变量\"></a></h3>\n<p>在项目的build.gradle里设置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">flavorDimensions <span class=\"string\">&quot;default&quot;</span></span><br><span class=\"line\">productFlavors &#123;</span><br><span class=\"line\">        xiaomi &#123;</span><br><span class=\"line\">            dimension <span class=\"string\">&quot;default&quot;</span></span><br><span class=\"line\">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: <span class=\"string\">&quot;xiaomi&quot;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        huawei &#123;</span><br><span class=\"line\">            dimension <span class=\"string\">&quot;default&quot;</span></span><br><span class=\"line\">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: <span class=\"string\">&quot;huawei&quot;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        qihu360 &#123;</span><br><span class=\"line\">            dimension <span class=\"string\">&quot;default&quot;</span></span><br><span class=\"line\">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: <span class=\"string\">&quot;qihu360&quot;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>dimension是维度，目标是在多渠道的前提下进行更细分的差异化，通过flavorDimensions提前定义，androidstudio 3.0之后必须要定义。</p>\n<p>manifestPlaceholders是替换AndroidManifest.xml中的对应key的value值，例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">manifestPlaceholders = [</span><br><span class=\"line\">                STORE_APP_NAME: <span class=\"string\">&quot;@string/app_name&quot;</span>,</span><br><span class=\"line\">                <span class=\"comment\">// 极光推送部分</span></span><br><span class=\"line\">                JPUSH_PKGNAME : applicationId,</span><br><span class=\"line\">                JPUSH_APPKEY  : <span class=\"string\">&quot;49b9f44b89....&quot;</span>, <span class=\"comment\">//JPush正式Appkey.</span></span><br><span class=\"line\">                JPUSH_CHANNEL : <span class=\"string\">&quot;developer-default&quot;</span>, <span class=\"comment\">//暂时填写默认值即可.</span></span><br><span class=\"line\">        ]</span><br></pre></td></tr></table></figure>\n<p>manifestPlaceholders在productFlavors下边仅仅是动态替换AndroidManifest的渠道信息。</p>\n<h3 id=\"androidmanifest定义渠道变量\">AndroidManifest定义渠道变量<a title=\"#androidmanifest定义渠道变量\" href=\"#androidmanifest定义渠道变量\"></a></h3>\n<p><code>meta-data</code>是AndroidManifest多个组件下的子标签，该标签可为<activity>、<activity-alias>、<application>、<provider>、<receiver>、<service>等组件提供附加数据项。</p>\n<p>定义渠道meta-data：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;application</span><br><span class=\"line\">        android:icon=&quot;@mipmap/logo&quot;</span><br><span class=\"line\">        android:label=&quot;@string/app_name&quot;</span><br><span class=\"line\">        android:name=&quot;.App&quot;</span><br><span class=\"line\">        android:roundIcon=&quot;@mipmap/logo&quot;</span><br><span class=\"line\">        android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        &lt;meta-data</span><br><span class=\"line\">            android:name=&quot;CHANNEL_NAME&quot;</span><br><span class=\"line\">            android:value=&quot;$&#123;UMENG_CHANNEL_VALUE&#125;&quot; /&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">application</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"获取渠道变量值\">获取渠道变量值<a title=\"#获取渠道变量值\" href=\"#获取渠道变量值\"></a></h3>\n<p>获取AndroidManifest中meta-data标签的值：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ApplicationInfo applicationInfo = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            applicationInfo = getPackageManager().getApplicationInfo(getPackageName(), PackageManager.GET_META_DATA);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (applicationInfo == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            String value = applicationInfo.metaData.getString(<span class=\"string\">&quot;CHANNEL_NAME&quot;</span>);</span><br><span class=\"line\">            CommonConfig.CHANNEL_NAME=value;</span><br><span class=\"line\">            <span class=\"comment\">//按渠道设置差异化代码</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;CHANNEL_NAME:&quot;</span>+value);</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (value)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;xiaomi&quot;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">// 小米渠道</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;huawei&quot;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">// 华为渠道</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;qihu360&quot;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">// 奇虎360渠道</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (PackageManager.NameNotFoundException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"快速打渠道包\">快速打渠道包<a title=\"#快速打渠道包\" href=\"#快速打渠道包\"></a></h2>\n<p>正常情况下我们打渠道包，因为要gradle一个一个构建，速度相应比较慢，打一次包甚至花费半个小时，如果中间在修复一下bug半天时间都浪费在打包上了，项目负责人肯定不愿意啊。怎么办呢？这里可以采用美团多渠道打包方案——<a href=\"https://github.com/Meituan-Dianping/walle\" target=\"_blank\">Walle（瓦力）</a>。</p>\n<p>早前快速渠道包生成方案是通过在META-INF目录下添加空文件，用空文件的名称来作为渠道的唯一标识，之前在META-INF下添加文件是不需要重新签名应用的，这样会节省不少打包的时间，从而提高打渠道包的速度。但在新的应用签名方案下（Android 7.0（Nougat）之后）META-INF已经被列入了保护区了，向META-INF添加空文件的方案安装时会报错。</p>\n<p>Walle（瓦力）渠道包生成过程：</p>\n<ol>\n<li>对新的应用签名方案生成的APK包中的ID-value进行扩展，提供自定义ID－value（渠道信息），并保存在APK中</li>\n<li>而APK在安装过程中进行的签名校验，是忽略我们添加的这个ID-value的，这样就能正常安装了</li>\n<li>在App运行阶段，可以通过ZIP的EOCD（End of central directory）、Central directory等结构中的信息（会涉及ZIP格式的相关知识，这里不做展开描述）找到我们自己添加的ID-value，从而实现获取渠道信息的功能</li>\n</ol>\n<p>具体使用细节请参考Walle（瓦力）使用说明：<a href=\"https://github.com/Meituan-Dianping/walle\">https://github.com/Meituan-Dianping/walle</a></p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li><a href=\"https://tech.meituan.com/2017/01/13/android-apk-v2-signature-scheme.html\" target=\"_blank\">新一代开源Android渠道包生成工具Walle —— 美团</a></li>\n</ul>\n","prev":{"title":"HttpURLConnection使用细节总结","link":"posts/1615708883"},"next":{"title":"HTTPS协议原理必知必会","link":"posts/1615560323"},"plink":"https://blog.ixin.run/posts/1615692625/","toc":[{"id":"build.gradle配置","title":"build.gradle配置","index":"1"},{"id":"打包方式","title":"打包方式","index":"2"},{"id":"多渠道打包","title":"多渠道打包","index":"3","children":[{"id":"gradle配置多渠道变量","title":"gradle配置多渠道变量","index":"3.1"},{"id":"androidmanifest定义渠道变量","title":"AndroidManifest定义渠道变量","index":"3.2"},{"id":"获取渠道变量值","title":"获取渠道变量值","index":"3.3"}]},{"id":"快速打渠道包","title":"快速打渠道包","index":"4"},{"id":"参考","title":"参考","index":"5"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1615692625/\" title=\"Android多渠道打包\">https://blog.ixin.run/posts/1615692625/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}