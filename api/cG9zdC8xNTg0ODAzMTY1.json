{"title":"View手势GestureDetector使用","date":"2020-03-21T15:06:05.000Z","date_formatted":{"ll":"2020年3月21日","L":"2020/03/21","MM-DD":"03-21"},"link":"post/1584803165","comments":true,"tags":["View"],"categories":["Android"],"updated":"2021-01-14T08:08:54.907Z","content":"<p>开发同学都知道自定义view的时候可以重写onTouch()方法，进而扩展按下、移动、松开这三个函数，这也是常用的形式。但是这个方法太过简单，如果需要处理一些复杂的手势，用这个接口就会很麻烦。Android其实有一个手势库——GestureDetector，已经为我们封装了一些常用的手势方法，接下来就总结一下GestureDetector的使用和总结。</p>\n<a id=\"more\"></a>\n<h2 id=\"gesturedetector使用：\">GestureDetector使用：<a title=\"#gesturedetector使用：\" href=\"#gesturedetector使用：\"></a></h2>\n<h3 id=\"1.实现方式\">1.实现方式<a title=\"#1.实现方式\" href=\"#1.实现方式\"></a></h3>\n<p>GestureDetector的实现方式根据类别分有两种：</p>\n<ol>\n<li>实现两个接口的相关方法：OnGestureListener，OnDoubleTapListener</li>\n<li>继承一个内部类进而重写其相关方法：SimpleOnGestureListener</li>\n</ol>\n<p>其中OnGestureListener，OnDoubleTapListener，可视情况递增实现，即必须实现OnGestureListener接口，OnDoubleTapListener可根据情况追加。而SimpleOnGestureListener其实是OnGestureListener，OnDoubleTapListener这两个接口中所有函数的集成，它包含了这两个接口里所有必须要实现的函数。</p>\n<h3 id=\"2.创建gesturedetector实例\">2.创建GestureDetector实例<a title=\"#2.创建gesturedetector实例\" href=\"#2.创建gesturedetector实例\"></a></h3>\n<p>根据第一步的实现方式，创建GestureDetector实例，构造函数有下面三个，根据需要选择：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GestureDetector gestureDetector=<span class=\"keyword\">new</span> GestureDetector(GestureDetector.OnGestureListener listener);</span><br><span class=\"line\">GestureDetector gestureDetector=<span class=\"keyword\">new</span> GestureDetector(Context context,GestureDetector.OnGestureListener listener);</span><br><span class=\"line\">GestureDetector gestureDetector=<span class=\"keyword\">new</span> GestureDetector(Context context,GestureDetector.SimpleOnGestureListener listener);</span><br></pre></td></tr></table></figure>\n<h3 id=\"3.ontouch(view-v,-motionevent-event)中拦截\">3.onTouch(View v, MotionEvent event)中拦截<a title=\"#3.ontouch(view-v,-motionevent-event)中拦截\" href=\"#3.ontouch(view-v,-motionevent-event)中拦截\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mGestureDetector.onTouchEvent(event);   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4.控件绑定\">4.控件绑定<a title=\"#4.控件绑定\" href=\"#4.控件绑定\"></a></h3>\n<p>假如我们在某个View上进行手势操作，那么需要绑定当前View的OnTouchListener监听。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextView tv = (TextView)findViewById(R.id.tv);</span><br><span class=\"line\">    tv.setOnTouchListener(<span class=\"keyword\">this</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"gesturedetector.ongesturelistener\">GestureDetector.OnGestureListener<a title=\"#gesturedetector.ongesturelistener\" href=\"#gesturedetector.ongesturelistener\"></a></h2>\n<h3 id=\"基本方法\">基本方法<a title=\"#基本方法\" href=\"#基本方法\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">gesturelistener</span> <span class=\"keyword\">implements</span> <span class=\"title\">GestureDetector</span>.<span class=\"title\">OnGestureListener</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onDown</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onShowPress</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onSingleTapUp</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onScroll</span><span class=\"params\">(MotionEvent e1, MotionEvent e2,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t<span class=\"keyword\">float</span> distanceX, <span class=\"keyword\">float</span> distanceY)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLongPress</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onFling</span><span class=\"params\">(MotionEvent e1, MotionEvent e2, <span class=\"keyword\">float</span> velocityX,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t<span class=\"keyword\">float</span> velocityY)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里总共重写了六个方法:</p>\n<p>1.<strong>OnDown(MotionEvent e)</strong>：<br>\n用户按下屏幕就会触发；</p>\n<p>2.<strong>onShowPress(MotionEvent e)</strong>：<br>\n如果是按下的时间超过瞬间，而且在按下的时候没有松开或者是拖动的，那么onShowPress就会执行。</p>\n<p>3.<strong>onLongPress(MotionEvent e)</strong>：<br>\n长按触摸屏，超过一定时长，就会触发这个事件。触发顺序：onDown-&gt;onShowPress-&gt;onLongPress</p>\n<p>4.<strong>onSingleTapUp(MotionEvent e)</strong>：<br>\n从名子也可以看出,一次单独的轻击抬起操作,也就是轻击一下屏幕，立刻抬起来，才会有这个触发，当然,如果除了Down以外还有其它操作,那就不再算是Single操作了,所以也就不会触发这个事件。触发顺序：</p>\n<p>点击一下非常快的（不滑动）Touchup：onDown-&gt;onSingleTapUp-&gt;onSingleTapConfirmed</p>\n<p>点击一下稍微慢点的（不滑动）Touchup：onDown-&gt;onShowPress-&gt;onSingleTapUp-&gt;onSingleTapConfirmed</p>\n<p>5.<strong>onFling(MotionEvent e1, MotionEvent e2, float velocityX,float velocityY)</strong>：<br>\n滑屏，用户按下触摸屏、快速移动后松开，由1个MotionEvent ACTION_DOWN, 多个ACTION_MOVE, 1个ACTION_UP触发。参数解释：</p>\n<ul>\n<li>e1：第1个ACTION_DOWN MotionEvent</li>\n<li>e2：最后一个ACTION_MOVE MotionEvent</li>\n<li>velocityX：X轴上的移动速度，像素/秒</li>\n<li>velocityY：Y轴上的移动速度，像素/秒</li>\n</ul>\n<p>6.<strong>onScroll(MotionEvent e1, MotionEvent e2,float distanceX, float distanceY)</strong>：<br>\n在屏幕上拖动事件。无论是用手拖动view，或者是以抛的动作滚动，都会多次触发,这个方法在ACTION_MOVE动作发生时就会触发。</p>\n<p>滑屏，手指触动屏幕后，稍微滑动后立即松开：onDown-----》onScroll----》onScroll----》onScroll----》………-----&gt;onFling</p>\n<p>拖动：onDown------》onScroll----》onScroll------》onFiling</p>\n<p>可见，无论是滑屏，还是拖动，影响的只是中间OnScroll触发的数量多少而已，最终都会触发onFling事件！</p>\n<h3 id=\"例子\">例子<a title=\"#例子\" href=\"#例子\"></a></h3>\n<p>结合我们开篇所讲的GestureDetector使用步骤，下边演示一个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> <span class=\"keyword\">implements</span> <span class=\"title\">OnTouchListener</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> GestureDetector mGestureDetector;   </span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">\t\tsetContentView(R.layout.activity_main);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">      mGestureDetector = <span class=\"keyword\">new</span> GestureDetector(<span class=\"keyword\">new</span> gestureListener()); <span class=\"comment\">//使用派生自OnGestureListener</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      TextView tv = (TextView)findViewById(R.id.tv);</span><br><span class=\"line\">      tv.setOnTouchListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">      tv.setFocusable(<span class=\"keyword\">true</span>);   </span><br><span class=\"line\">      tv.setClickable(<span class=\"keyword\">true</span>);   </span><br><span class=\"line\">      tv.setLongClickable(<span class=\"keyword\">true</span>); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">     * 在onTouch()方法中，我们调用GestureDetector的onTouchEvent()方法，将捕捉到的MotionEvent交给GestureDetector </span></span><br><span class=\"line\"><span class=\"comment\">     * 来分析是否有合适的callback函数来处理用户的手势 </span></span><br><span class=\"line\"><span class=\"comment\">     */</span>  </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mGestureDetector.onTouchEvent(event);   </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">gestureListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">GestureDetector</span>.<span class=\"title\">OnGestureListener</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 用户轻触触摸屏，由1个MotionEvent ACTION_DOWN触发   </span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onDown</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onDown&quot;</span>);   </span><br><span class=\"line\">\t        Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onDown&quot;</span>, Toast.LENGTH_SHORT).show();   </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/*  </span></span><br><span class=\"line\"><span class=\"comment\">\t     * 用户轻触触摸屏，尚未松开或拖动，由一个1个MotionEvent ACTION_DOWN触发  </span></span><br><span class=\"line\"><span class=\"comment\">\t     * 注意和onDown()的区别，强调的是没有松开或者拖动的状态  </span></span><br><span class=\"line\"><span class=\"comment\">\t     * </span></span><br><span class=\"line\"><span class=\"comment\">\t     * 而onDown也是由一个MotionEventACTION_DOWN触发的，但是他没有任何限制，</span></span><br><span class=\"line\"><span class=\"comment\">\t     * 也就是说当用户点击的时候，首先MotionEventACTION_DOWN，onDown就会执行，</span></span><br><span class=\"line\"><span class=\"comment\">\t     * 如果在按下的瞬间没有松开或者是拖动的时候onShowPress就会执行，如果是按下的时间超过瞬间</span></span><br><span class=\"line\"><span class=\"comment\">\t     * （这块我也不太清楚瞬间的时间差是多少，一般情况下都会执行onShowPress），拖动了，就不执行onShowPress。</span></span><br><span class=\"line\"><span class=\"comment\">\t     */</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onShowPress</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onShowPress&quot;</span>);   </span><br><span class=\"line\">\t        Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onShowPress&quot;</span>, Toast.LENGTH_SHORT).show();   </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 用户（轻触触摸屏后）松开，由一个1个MotionEvent ACTION_UP触发   </span></span><br><span class=\"line\">\t\t<span class=\"comment\">///轻击一下屏幕，立刻抬起来，才会有这个触发</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//从名子也可以看出,一次单独的轻击抬起操作,当然,如果除了Down以外还有其它操作,那就不再算是Single操作了,所以这个事件 就不再响应</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onSingleTapUp</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onSingleTapUp&quot;</span>);   </span><br><span class=\"line\">\t        Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onSingleTapUp&quot;</span>, Toast.LENGTH_SHORT).show();   </span><br><span class=\"line\">\t        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;   </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 用户按下触摸屏，并拖动，由1个MotionEvent ACTION_DOWN, 多个ACTION_MOVE触发   </span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onScroll</span><span class=\"params\">(MotionEvent e1, MotionEvent e2,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t<span class=\"keyword\">float</span> distanceX, <span class=\"keyword\">float</span> distanceY)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture22&quot;</span>, <span class=\"string\">&quot;onScroll:&quot;</span>+(e2.getX()-e1.getX()) +<span class=\"string\">&quot;   &quot;</span>+distanceX);   </span><br><span class=\"line\">\t        Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onScroll&quot;</span>, Toast.LENGTH_LONG).show();   </span><br><span class=\"line\">\t        </span><br><span class=\"line\">\t        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;   </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 用户长按触摸屏，由多个MotionEvent ACTION_DOWN触发   </span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLongPress</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t Log.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onLongPress&quot;</span>);   </span><br><span class=\"line\">\t\t     Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onLongPress&quot;</span>, Toast.LENGTH_LONG).show();   </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 用户按下触摸屏、快速移动后松开，由1个MotionEvent ACTION_DOWN, 多个ACTION_MOVE, 1个ACTION_UP触发   </span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onFling</span><span class=\"params\">(MotionEvent e1, MotionEvent e2, <span class=\"keyword\">float</span> velocityX,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t<span class=\"keyword\">float</span> velocityY)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onFling&quot;</span>);   </span><br><span class=\"line\">\t        Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onFling&quot;</span>, Toast.LENGTH_LONG).show();   </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"gesturedetector.ondoubletaplistener\">GestureDetector.OnDoubleTapListener<a title=\"#gesturedetector.ondoubletaplistener\" href=\"#gesturedetector.ondoubletaplistener\"></a></h2>\n<p>OnDoubleTapListener接口主要用于实现双击手势拦截。</p>\n<h3 id=\"基本方法-1\">基本方法<a title=\"#基本方法-1\" href=\"#基本方法-1\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">doubleTapListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">GestureDetector</span>.<span class=\"title\">OnDoubleTapListener</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onSingleTapConfirmed</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onDoubleTap</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onDoubleTapEvent</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里总共重写了三个方法：</p>\n<p>1.<strong>onSingleTapConfirmed(MotionEvent e)</strong>：<br>\n单击事件。用来判定该次点击是SingleTap而不是DoubleTap，如果连续点击两次就是DoubleTap手势，如果只点击一次，系统等待一段时间后没有收到第二次点击则判定该次点击为SingleTap而不是DoubleTap，然后触发SingleTapConfirmed事件。</p>\n<p>触发顺序是：OnDown-&gt;OnsingleTapUp-&gt;OnsingleTapConfirmed</p>\n<p>关于onSingleTapConfirmed和onSingleTapUp的一点区别：<br>\nOnGestureListener有这样的一个方法onSingleTapUp，和onSingleTapConfirmed容易混淆。二者的区别是：onSingleTapUp，只要手抬起就会执行，而对于onSingleTapConfirmed来说，如果双击的话，则onSingleTapConfirmed不会执行。</p>\n<p>2.<strong>onDoubleTap(MotionEvent e)</strong>：<br>\n双击事件</p>\n<p>3.<strong>onDoubleTapEvent(MotionEvent e)</strong>：<br>\n双击间隔中发生的动作。指触发onDoubleTap以后，在双击之间发生的其它动作，包含down、up和move事件；</p>\n<p>两点总结：</p>\n<ol>\n<li>在第二下点击时，先触发OnDoubleTap，然后再触发OnDown（第二次点击）</li>\n<li>其次在触发OnDoubleTap以后，就开始触发onDoubleTapEvent了。</li>\n</ol>\n<h3 id=\"使用形式\">使用形式<a title=\"#使用形式\" href=\"#使用形式\"></a></h3>\n<p>开篇我们也提到要想使用OnDoubleTapListener必须要使用OnGestureListener，因为创建GestureDetector实例的三个构造方法的入参根本没有OnDoubleTapListener的形式。以下有两种方式设置双击监听：</p>\n<p><strong>1.新建一个类同时派生自OnGestureListener和OnDoubleTapListener</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">gestureListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">GestureDetector</span>.<span class=\"title\">OnGestureListener</span>,<span class=\"title\">GestureDetector</span>.<span class=\"title\">OnDoubleTapListener</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>2.使用GestureDetector::setOnDoubleTapListener()函数设置监听</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//构建GestureDetector实例\t</span></span><br><span class=\"line\">mGestureDetector = <span class=\"keyword\">new</span> GestureDetector(<span class=\"keyword\">new</span> gestureListener()); <span class=\"comment\">//使用派生自OnGestureListener</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">gestureListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">GestureDetector</span>.<span class=\"title\">OnGestureListener</span></span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//设置双击监听器</span></span><br><span class=\"line\">mGestureDetector.setOnDoubleTapListener(<span class=\"keyword\">new</span> doubleTapListener());</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">doubleTapListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">GestureDetector</span>.<span class=\"title\">OnDoubleTapListener</span></span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到，在构造函数中，除了后面要讲的SimpleOnGestureListener 以外的其它两个构造函数都必须是OnGestureListener的实例。所以要想使用OnDoubleTapListener的几个函数，就必须先实现OnGestureListener。</p>\n<h2 id=\"gesturedetector.simpleongesturelistener\">GestureDetector.SimpleOnGestureListener<a title=\"#gesturedetector.simpleongesturelistener\" href=\"#gesturedetector.simpleongesturelistener\"></a></h2>\n<p>它与前两个不同的是，这个是一个类，我们可以采用继承的形式，然后重写合适的方法，更加灵活。这个也是我们平时在使用GestureDetector最常用的一种实现形式。另外开篇也讲到SimpleOnGestureListener是OnGestureListener和OnDoubleTapListener所有方法的集合。</p>\n<h3 id=\"例子-1\">例子<a title=\"#例子-1\" href=\"#例子-1\"></a></h3>\n<p>下面利用SimpleOnGestureListener类来重新实现上面的几个效果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> <span class=\"keyword\">implements</span> <span class=\"title\">OnTouchListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> GestureDetector mGestureDetector;   </span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">\t\tsetContentView(R.layout.activity_main);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmGestureDetector = <span class=\"keyword\">new</span> GestureDetector(<span class=\"keyword\">new</span> simpleGestureListener());</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tTextView tv = (TextView)findViewById(R.id.tv);</span><br><span class=\"line\">\t    tv.setOnTouchListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t    tv.setFocusable(<span class=\"keyword\">true</span>);   </span><br><span class=\"line\">\t    tv.setClickable(<span class=\"keyword\">true</span>);   </span><br><span class=\"line\">\t    tv.setLongClickable(<span class=\"keyword\">true</span>); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mGestureDetector.onTouchEvent(event);   </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">simpleGestureListener</span> <span class=\"keyword\">extends</span></span></span><br><span class=\"line\"><span class=\"class\">\t\t\t<span class=\"title\">GestureDetector</span>.<span class=\"title\">SimpleOnGestureListener</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">/*****OnGestureListener的函数*****/</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onDown</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onDown&quot;</span>);</span><br><span class=\"line\">\t\t\tToast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onDown&quot;</span>, Toast.LENGTH_SHORT)</span><br><span class=\"line\">\t\t\t\t\t.show();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onShowPress</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onShowPress&quot;</span>);</span><br><span class=\"line\">\t\t\tToast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onShowPress&quot;</span>, Toast.LENGTH_SHORT)</span><br><span class=\"line\">\t\t\t\t\t.show();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onSingleTapUp</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onSingleTapUp&quot;</span>);</span><br><span class=\"line\">\t\t\tToast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onSingleTapUp&quot;</span>,</span><br><span class=\"line\">\t\t\t\t\tToast.LENGTH_SHORT).show();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onScroll</span><span class=\"params\">(MotionEvent e1, MotionEvent e2,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t<span class=\"keyword\">float</span> distanceX, <span class=\"keyword\">float</span> distanceY)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onScroll:&quot;</span> + (e2.getX() - e1.getX()) + <span class=\"string\">&quot;   &quot;</span></span><br><span class=\"line\">\t\t\t\t\t+ distanceX);</span><br><span class=\"line\">\t\t\tToast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onScroll&quot;</span>, Toast.LENGTH_LONG)</span><br><span class=\"line\">\t\t\t\t\t.show();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLongPress</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onLongPress&quot;</span>);</span><br><span class=\"line\">\t\t\tToast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onLongPress&quot;</span>, Toast.LENGTH_LONG)</span><br><span class=\"line\">\t\t\t\t\t.show();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onFling</span><span class=\"params\">(MotionEvent e1, MotionEvent e2, <span class=\"keyword\">float</span> velocityX,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t<span class=\"keyword\">float</span> velocityY)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onFling&quot;</span>);</span><br><span class=\"line\">\t\t\tToast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onFling&quot;</span>, Toast.LENGTH_LONG)</span><br><span class=\"line\">\t\t\t\t\t.show();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">/*****OnDoubleTapListener的函数*****/</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onSingleTapConfirmed</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onSingleTapConfirmed&quot;</span>);</span><br><span class=\"line\">\t\t\tToast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onSingleTapConfirmed&quot;</span>,</span><br><span class=\"line\">\t\t\t\t\tToast.LENGTH_LONG).show();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onDoubleTap</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onDoubleTap&quot;</span>);</span><br><span class=\"line\">\t\t\tToast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onDoubleTap&quot;</span>, Toast.LENGTH_LONG)</span><br><span class=\"line\">\t\t\t\t\t.show();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onDoubleTapEvent</span><span class=\"params\">(MotionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tLog.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;onDoubleTapEvent&quot;</span>);</span><br><span class=\"line\">\t\t\tToast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;onDoubleTapEvent&quot;</span>,</span><br><span class=\"line\">\t\t\t\t\tToast.LENGTH_LONG).show();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"onfling应用\">OnFling应用<a title=\"#onfling应用\" href=\"#onfling应用\"></a></h2>\n<p>OnFling是用户执行抛操作之后的回调，MOVE事件之后手松开（UP事件）那一瞬间的x或者y方向速度，如果达到一定数值（源码默认是每秒50px），就是抛操作（也就是快速滑动的时候松手会有这个回调，因此基本上有onFling必然有onScroll）。</p>\n<p>下边就演示一个小例子，利用OnFling函数来识别当前用户是在向左滑还是向右滑，功能原理：<br>\n当用户向左滑动距离超过100px，且滑动速度超过100 px/s时，即判断为向左滑动；向右同理。</p>\n<p>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> <span class=\"keyword\">implements</span> <span class=\"title\">OnTouchListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> GestureDetector mGestureDetector;   </span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">\t\tsetContentView(R.layout.activity_main);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmGestureDetector = <span class=\"keyword\">new</span> GestureDetector(<span class=\"keyword\">new</span> simpleGestureListener());</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tTextView tv = (TextView)findViewById(R.id.tv);</span><br><span class=\"line\">\t    tv.setOnTouchListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t    tv.setFocusable(<span class=\"keyword\">true</span>);   </span><br><span class=\"line\">\t    tv.setClickable(<span class=\"keyword\">true</span>);   </span><br><span class=\"line\">\t    tv.setLongClickable(<span class=\"keyword\">true</span>); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mGestureDetector.onTouchEvent(event);   </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">simpleGestureListener</span> <span class=\"keyword\">extends</span></span></span><br><span class=\"line\"><span class=\"class\">\t\t\t<span class=\"title\">GestureDetector</span>.<span class=\"title\">SimpleOnGestureListener</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">/*****OnGestureListener的函数*****/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> FLING_MIN_DISTANCE = <span class=\"number\">100</span>, FLING_MIN_VELOCITY = <span class=\"number\">200</span>;  </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 触发条件 ：   </span></span><br><span class=\"line\">        <span class=\"comment\">// X轴的坐标位移大于FLING_MIN_DISTANCE，且移动速度大于FLING_MIN_VELOCITY个像素/秒   </span></span><br><span class=\"line\">       </span><br><span class=\"line\">\t\t<span class=\"comment\">// 参数解释：   </span></span><br><span class=\"line\">        <span class=\"comment\">// e1：第1个ACTION_DOWN MotionEvent   </span></span><br><span class=\"line\">        <span class=\"comment\">// e2：最后一个ACTION_MOVE MotionEvent   </span></span><br><span class=\"line\">        <span class=\"comment\">// velocityX：X轴上的移动速度，像素/秒   </span></span><br><span class=\"line\">        <span class=\"comment\">// velocityY：Y轴上的移动速度，像素/秒   </span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onFling</span><span class=\"params\">(MotionEvent e1, MotionEvent e2, <span class=\"keyword\">float</span> velocityX,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t\t\t<span class=\"keyword\">float</span> velocityY)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t        </span><br><span class=\"line\">\t        <span class=\"keyword\">if</span> (e1.getX() - e2.getX() &gt; FLING_MIN_DISTANCE  </span><br><span class=\"line\">\t                &amp;&amp; Math.abs(velocityX) &gt; FLING_MIN_VELOCITY) &#123;  </span><br><span class=\"line\">\t            <span class=\"comment\">// Fling left   </span></span><br><span class=\"line\">\t            Log.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;Fling left&quot;</span>);  </span><br><span class=\"line\">\t            Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Fling Left&quot;</span>, Toast.LENGTH_SHORT).show();  </span><br><span class=\"line\">\t        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e2.getX() - e1.getX() &gt; FLING_MIN_DISTANCE  </span><br><span class=\"line\">\t                &amp;&amp; Math.abs(velocityX) &gt; FLING_MIN_VELOCITY) &#123;  </span><br><span class=\"line\">\t            <span class=\"comment\">// Fling right   </span></span><br><span class=\"line\">\t            Log.i(<span class=\"string\">&quot;MyGesture&quot;</span>, <span class=\"string\">&quot;Fling right&quot;</span>);  </span><br><span class=\"line\">\t            Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Fling Right&quot;</span>, Toast.LENGTH_SHORT).show();  </span><br><span class=\"line\">\t        &#125;  </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"手势相关事件的触发时机\">手势相关事件的触发时机<a title=\"#手势相关事件的触发时机\" href=\"#手势相关事件的触发时机\"></a></h2>\n<p>下边是大神给出的一个手势相关事件的触发时机总结说明，再此记录一下有待以后验证：<br>\n<img src=\"https://img-blog.csdnimg.cn/20200405231603176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMDk3OA==,size_16,color_FFFFFF,t_70\" alt=\"手势相关事件的触发时机\"></p>\n<p>从上面的分析可以看出，虽然GestureDetector能识别很多手势，但是也是不能满足所有的需求的，如滑动和长按之后松开没有回调（这个可以重写onTouch()捕捉UP事件实现）、多点触控缩放手势的实现（这个可以用ScaleGestureDetector）等。</p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li><a href=\"https://blog.csdn.net/harvic880925/article/details/39520901\">https://blog.csdn.net/harvic880925/article/details/39520901</a></li>\n<li><a href=\"https://blog.csdn.net/totond/article/details/77881180#commentBox\">https://blog.csdn.net/totond/article/details/77881180#commentBox</a></li>\n</ul>\n","prev":{"title":"Android开发约束布局ConstraintLayout学习总结","link":"post/1584977277"},"next":{"title":"健康小记","link":"post/1584787534"},"plink":"https://blog.ixin.run/post/1584803165/","toc":[{"id":"gesturedetector使用：","title":"GestureDetector使用：","index":"1","children":[{"id":"1.实现方式","title":"1.实现方式","index":"1.1"},{"id":"2.创建gesturedetector实例","title":"2.创建GestureDetector实例","index":"1.2"},{"id":"3.ontouch(view-v,-motionevent-event)中拦截","title":"3.onTouch(View v, MotionEvent event)中拦截","index":"1.3"},{"id":"4.控件绑定","title":"4.控件绑定","index":"1.4"}]},{"id":"gesturedetector.ongesturelistener","title":"GestureDetector.OnGestureListener","index":"2","children":[{"id":"基本方法","title":"基本方法","index":"2.1"},{"id":"例子","title":"例子","index":"2.2"}]},{"id":"gesturedetector.ondoubletaplistener","title":"GestureDetector.OnDoubleTapListener","index":"3","children":[{"id":"基本方法-1","title":"基本方法","index":"3.1"},{"id":"使用形式","title":"使用形式","index":"3.2"}]},{"id":"gesturedetector.simpleongesturelistener","title":"GestureDetector.SimpleOnGestureListener","index":"4","children":[{"id":"例子-1","title":"例子","index":"4.1"}]},{"id":"onfling应用","title":"OnFling应用","index":"5"},{"id":"手势相关事件的触发时机","title":"手势相关事件的触发时机","index":"6"},{"id":"参考","title":"参考","index":"7"}],"reward":true,"copyright":{"custom":"转载请注明出处，谢谢支持。"}}