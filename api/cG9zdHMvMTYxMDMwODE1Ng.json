{"title":"带你玩转Hexo——网站搭建","date":"2021-01-10T16:28:31.000Z","date_formatted":{"ll":"2021年1月11日","L":"2021/01/11","MM-DD":"01-11"},"thumbnail":"https://tommy.net.cn/2020/07/07/upgrade-hexo-to-v4-2-1/hexo.png","link":"posts/1610308156","comments":true,"tags":["HEXO","网站搭建"],"categories":["DevOps"],"updated":"2021-03-15T04:16:08.117Z","content":"<p>我的博客用的是Hexo框架，有一段时间没有倒腾它了，最近浏览<a href=\"https://hexo.io/\" target=\"_blank\">官网</a>发现hexo版本已经到5.3.0了，我自己的还是4.0时代，瞅了一下5.0版本的升级日志是各种牛逼，我也看不懂，是时候升级一波体验一下，顺便总结一下自己对hexo的玩法。</p>\n<a id=\"more\"></a>\n<h2 id=\"hexo是什么\">Hexo是什么<a title=\"#hexo是什么\" href=\"#hexo是什么\"></a></h2>\n<p>一个静态博客生成框架，推荐看<a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\">Hexo官方文档</a></p>\n<h2 id=\"hexo搭建准备工作\">Hexo搭建准备工作<a title=\"#hexo搭建准备工作\" href=\"#hexo搭建准备工作\"></a></h2>\n<p>首先电脑上需要安装以下两个程序：</p>\n<ol>\n<li><a href=\"https://git-scm.com/\" target=\"_blank\">Git</a></li>\n<li><a href=\"https://nodejs.org/zh-cn/\" target=\"_blank\">Node.js</a></li>\n</ol>\n<p>git是为了部署生成的博客；Node.js为博客生成创造编译环境，类比java的jvm。</p>\n<h2 id=\"hexo下载\">Hexo下载<a title=\"#hexo下载\" href=\"#hexo下载\"></a></h2>\n<p>打开CMD，采用node.js的npm命令下载官网hexo依赖，npm下载依赖有两种方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 系统全局下载，默认安装在C:\\Users\\PC用户名\\AppData\\Roaming\\npm目录下</span><br><span class=\"line\">$ npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 文件根目录下载，指定目录下执行，下载当前目录</span><br><span class=\"line\">$ npm install hexo --save</span><br></pre></td></tr></table></figure>\n<p>hexo下载采用第一种，后续博客中用到的插件可以定位到博客项目目录下采用第二种下载。</p>\n<h2 id=\"hexo初始化\">Hexo初始化<a title=\"#hexo初始化\" href=\"#hexo初始化\"></a></h2>\n<p>本地随便一个地方建一个文件夹例如blog，cmd命令行指示到该文件夹下进行hexo的初始化：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>稍等片刻，hexo初始化完成，即我们的博客雏形已经有了，此时我们执行以下两个命令后渲染博客进行预览：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>复制命令行给出地址<code>http://localhost:4000</code>到浏览器预览即可。</p>\n<h2 id=\"添加文章\">添加文章<a title=\"#添加文章\" href=\"#添加文章\"></a></h2>\n<p>生成的博客发现空空如也，我们添加一篇文吧：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n 我的第一篇博客</span><br></pre></td></tr></table></figure>\n<p>hexo默认管理的文章都在<code>blog\\source\\_posts</code>路径下，我们在此路径下找到刚才生成的md文件，用vscode编辑器随便写点东西，保存。</p>\n<p>然后接着执行刚才渲染博客的命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>然后刷新博客首页，马上多出来一篇文章。</p>\n<h2 id=\"主题更换\">主题更换<a title=\"#主题更换\" href=\"#主题更换\"></a></h2>\n<p>Hexo初始化后默认自带的主题是不是很丑，哈哈，别急，我们到<a href=\"https://hexo.io/themes/\" target=\"_blank\">Hexo主题市场</a>下载一个主题，hexo博客项目的主题存放在根目录themes文件夹下，把刚才下载的主题复制到此文件夹并解压，然后修改项目根目录<code>_config.yml</code>的主题指向即可。</p>\n<p><code>_config.yml</code>是博客的配置项，有两种：</p>\n<ol>\n<li>上边所说博客项目根目录下的，控制博客整体的配置，例如网站名称，主题指向等等。</li>\n<li>每个主题theme根目录下的，控制主题的配置，用于博客美化，例如背景色，头像，字体等等。</li>\n</ol>\n<h2 id=\"插件安装\">插件安装<a title=\"#插件安装\" href=\"#插件安装\"></a></h2>\n<p>hexo初始化后至少需要安装一个git插件，用于引导系统安装的git发布博客到服务器。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>注意此时的插件是安装在博客项目根目录下的node_modules中了，上文已经讲过。</p>\n<p>有些主题采用<code>markdown-it</code>api渲染md文本，然而Hexo框架默认采用的是&quot;hexo-renderer-marked&quot;插件来渲染的，好多文章指出替换默认的渲染插件（删除、替换），其实我建议直接安装即可，爱用哪个用哪个，谁知道哪种主题抽什么风呢。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure>\n<p>其他插件可自行研究，更多插件见：<a href=\"https://hexo.io/plugins/\">https://hexo.io/plugins/</a></p>\n<h2 id=\"博客发布\">博客发布<a title=\"#博客发布\" href=\"#博客发布\"></a></h2>\n<p>以上只能看到博客在本地的预览，如何把博客发布到服务器上随时随地预览呢？这里涉及到域名购买，服务器购买，域名解析，CDN加速，网站备案等等诸多技术限制，当然个人博客简单起见可以部署到github pages上进行练手。github上建立一个特殊仓库<code>【github用户名】.github.io</code>。</p>\n<p>修改本地博客项目根目录下的<code>_config.yml</code>文件中的deploy项：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:xxx&#x2F;xxx.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>好了，万事具备，开始发布，继续执行CMD命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>稍等几分钟，打开浏览器输入<code>【github用户名】.github.io</code>, 激动吧</p>\n<h2 id=\"五个常用命令\">五个常用命令<a title=\"#五个常用命令\" href=\"#五个常用命令\"></a></h2>\n<p>以下是发布博客的五个常用CMD命令：</p>\n<ol>\n<li>hexo g 完整命令为hexo generate，用于生成静态文件。</li>\n<li>hexo s 完整命令为hexo server，用于启动服务器，主要用来本地预览。</li>\n<li>hexo d 完整命令为hexo deploy，用于将本地文件发布到github上。</li>\n<li>hexo n 完整命令为hexo new，用于新建一篇文章。</li>\n<li>hexo clean, 有些时候可能有冲突，所以在生成静态页面前先clean,然后生成、发布，一切都很自然。</li>\n</ol>\n<h2 id=\"高级用法\">高级用法<a title=\"#高级用法\" href=\"#高级用法\"></a></h2>\n<h3 id=\"自定义首页\">自定义首页<a title=\"#自定义首页\" href=\"#自定义首页\"></a></h3>\n<p>原理：github pages有两种：</p>\n<ol>\n<li>github全局：<code>xxx.github.io</code></li>\n<li>其他仓库：每个仓库都有一个开启github pages的选项，用于描述该仓库的相关说明。生成的连接是<code>xxx.github.io/仓库名/</code>。</li>\n</ol>\n<p>自定义首页部署在第一个，博客部署在第二个，利用他们共有的域名<code>xxx.github.io</code>建立上下级联系。</p>\n<p>将来我们购买过域名后，例如 <a href=\"http://xxxx.com\">xxxx.com</a>， 那么我们的首页就是<code>www.xxx.com</code>，那么第二个仓库的page地址就是<code>www.xxx.com/仓库名/</code>。我们也可以采用二级域名形式，这个以后再讲咯。</p>\n<p>修改根目录_config.yml的url:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># URL</span><br><span class=\"line\">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br><span class=\"line\">url: https:&#x2F;&#x2F;xxx.github.io</span><br><span class=\"line\">root: &#x2F;</span><br></pre></td></tr></table></figure>\n<p>接下来将首页（<code>xxx.github.io</code>）中进入博客的入口超链接到子库的page地址即可。</p>\n<p>注意：将新仓库的setting里的Git page打开。（这步很重要）</p>\n<h3 id=\"添加rss订阅\">添加RSS订阅<a title=\"#添加rss订阅\" href=\"#添加rss订阅\"></a></h3>\n<p>安装RSS订阅插件，根目录执行CMD命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure>\n<p>然后根目录下的_config.yml按照官方文档配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feed:</span><br><span class=\"line\">  type: atom</span><br><span class=\"line\">  path: atom.xml</span><br><span class=\"line\">  limit: 20</span><br></pre></td></tr></table></figure>\n<p>详情请看：<a href=\"https://www.npmjs.com/package/hexo-generator-feed\">https://www.npmjs.com/package/hexo-generator-feed</a></p>\n<h3 id=\"急速搭建\">急速搭建<a title=\"#急速搭建\" href=\"#急速搭建\"></a></h3>\n<p>有时候更换电脑或者换了个工作环境，以上繁琐的搭建步骤还要要走一遍，感觉有点心累啊，为了简单起见，我建议把上边安装的所有插件和主题设置一同打包push到远程仓库中，除了<strong>把每次<code>hexo g</code>产生的冗余文件忽略掉</strong>。博客项目下有个<code>.gitignore</code>，hexo默认忽略了很多，包含初始化的<code>node_modules</code>，这个不能忽略，我们自己安装的插件都在这里面，以下是我自己项目中<code>.gitignore</code>的内容:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.DS_Store</span><br><span class=\"line\">Thumbs.db</span><br><span class=\"line\">*.log</span><br><span class=\"line\">public&#x2F;</span><br><span class=\"line\">.deploy*&#x2F;</span><br><span class=\"line\">&#x2F;db.json</span><br></pre></td></tr></table></figure>\n<p>下次我们换电脑，只需要安装git和node.js，项目clong下来就可以发布文章了。</p>\n<h3 id=\"hexo升级\">Hexo升级<a title=\"#hexo升级\" href=\"#hexo升级\"></a></h3>\n<p>文初说的Hexo升级，到结束了才说，我日😂。<br>\nHexo升级先看官方说明，一般是以下几步：</p>\n<ol>\n<li>检查是否需要升级node.js，需要的话进行升级</li>\n<li>升级hexo-cli: <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g  #全局升级hexo-cli(Hexo框架生成器)</span><br></pre></td></tr></table></figure>\n</li>\n<li>其他命令 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;以下命令分别执行即可</span><br><span class=\"line\">npm install -g npm-check     &#x2F;&#x2F;安装npm-check</span><br><span class=\"line\">npm-check                    &#x2F;&#x2F;查看系统插件是否需要升级</span><br><span class=\"line\">npm install -g npm-upgrade   &#x2F;&#x2F;安装npm-upgrade</span><br><span class=\"line\">npm-upgrade        &#x2F;&#x2F;更新package.json</span><br><span class=\"line\">npm update -g      &#x2F;&#x2F;更新全局插件</span><br><span class=\"line\">npm update --save  &#x2F;&#x2F;更新系统插件</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>最后<code>hexo -v</code>查看以下hexo的版本信息情况，注意该指令在系统目录执行时只能看到hexo-cli的版本情况，只有在博客根目录执行才能看到博客hexo的版本信息，我们说的hexo升级主要指的就是博客hexo框架版本的升级。</p>\n<h2 id=\"最后\">最后<a title=\"#最后\" href=\"#最后\"></a></h2>\n<p>本文注重过程，细节不明之处详看官方文档：<a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a></p>\n<p>🤞谢谢各位看官🤞</p>\n","prev":{"title":"Markdown基本使用方法","link":"posts/1610311108"},"next":{"title":"Alibaba插件代码质量检测问题归总","link":"posts/1589521857"},"plink":"https://blog.ixin.run/posts/1610308156/","toc":[{"id":"hexo是什么","title":"Hexo是什么","index":"1"},{"id":"hexo搭建准备工作","title":"Hexo搭建准备工作","index":"2"},{"id":"hexo下载","title":"Hexo下载","index":"3"},{"id":"hexo初始化","title":"Hexo初始化","index":"4"},{"id":"添加文章","title":"添加文章","index":"5"},{"id":"主题更换","title":"主题更换","index":"6"},{"id":"插件安装","title":"插件安装","index":"7"},{"id":"博客发布","title":"博客发布","index":"8"},{"id":"五个常用命令","title":"五个常用命令","index":"9"},{"id":"高级用法","title":"高级用法","index":"10","children":[{"id":"自定义首页","title":"自定义首页","index":"10.1"},{"id":"添加rss订阅","title":"添加RSS订阅","index":"10.2"},{"id":"急速搭建","title":"急速搭建","index":"10.3"},{"id":"hexo升级","title":"Hexo升级","index":"10.4"}]},{"id":"最后","title":"最后","index":"11"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1610308156/\" title=\"带你玩转Hexo——网站搭建\">https://blog.ixin.run/posts/1610308156/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}