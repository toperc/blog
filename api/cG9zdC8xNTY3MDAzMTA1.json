{"title":"位运算的那些事（三）位掩码","date":"2019-08-28T14:34:40.000Z","date_formatted":{"ll":"2019年8月28日","L":"2019/08/28","MM-DD":"08-28"},"link":"post/1567003105","comments":true,"tags":["二进制","位运算"],"categories":["计算机基础"],"updated":"2021-01-14T08:08:54.917Z","content":"<p>前两篇我重点针对位运算基础以及运算过程详细的进行了讲解说明，相信看过的小伙伴也都很明了了。那么基础有了，也知道运算过程了，那我们常见的战场在哪里呢？这就像排兵布阵一样，只阅读兵法，而没有实践和模拟，只能算纸上谈兵了。本篇就拉开帷幕直面开发中这个最常见的战场——位掩码（BitMask）。</p>\n<a id=\"more\"></a>\n<h2 id=\"什么是掩码\">什么是掩码<a title=\"#什么是掩码\" href=\"#什么是掩码\"></a></h2>\n<p>说起掩码大家都听过子网掩码吧，<a href=\"https://baike.baidu.com/item/%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81\" target=\"_blank\">子网掩码</a>的主要作用是判断当前IP是属于什么样的网络，是A类还是B类还是C类；当前IP处于什么样的网段，网段内可以拥有多少个机子。比如我们公司电脑的子网掩码是255.255.255.0，很明显就是一个局域网。如果你对子网掩码还是不清晰，可以看一下<a href=\"https://www.zhihu.com/question/56895036\" target=\"_blank\">《如何理解子网掩码》</a>。</p>\n<p>掩码就是一串二进制代码对目标字段进行位与运算，屏蔽当前的输入位，最终得到一个合理的需求。<strong>说白了，掩码就是一把辅助钥匙，你给我一个盒子我帮助你打开看看里面是什么</strong>。</p>\n<p>说到这不知道大家有没有对掩码有一个概念性的认识呢？不清楚没关系，这只是位运算中一个插曲，下边的讲解中也会相应用到，到时候你就明白了，本篇的目的是为了讲位运算在项目开发中的一些典型用法。</p>\n<h2 id=\"抛砖引玉\">抛砖引玉<a title=\"#抛砖引玉\" href=\"#抛砖引玉\"></a></h2>\n<p>有一个很经典的算法题，说是有1000个一模一样的瓶子，其中有999瓶是普通的水，有一瓶是毒药。任何喝下毒药的生物都会在一星期之后死亡。现在，你只有10只小白鼠和一星期的时间，如何检验出哪个瓶子里有毒药？如果按照常规的解法是不是很繁琐，我们不妨思考一下用二进制来处理。</p>\n<p>具体实现跟3个老鼠确定8个瓶子原理一样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000&#x3D;0</span><br><span class=\"line\">001&#x3D;1</span><br><span class=\"line\">010&#x3D;2</span><br><span class=\"line\">011&#x3D;3</span><br><span class=\"line\">100&#x3D;4</span><br><span class=\"line\">101&#x3D;5</span><br><span class=\"line\">110&#x3D;6</span><br><span class=\"line\">111&#x3D;7</span><br></pre></td></tr></table></figure>\n<p>一位表示一个老鼠，0-7表示8个瓶子。也就是分别将1、3、5、7号瓶子的药混起来给老鼠1吃，2、3、6、7号瓶子的药混起来给老鼠2吃，4、5、6、7号瓶子的药混起来给老鼠3吃，哪个老鼠死了，相应的位标为1。如老鼠1死了、老鼠2没死、老鼠3死了，那么就是101=5号瓶子有毒。同样道理10个老鼠可以确定1000个瓶子。</p>\n<h2 id=\"经典场景\">经典场景<a title=\"#经典场景\" href=\"#经典场景\"></a></h2>\n<p>在开发过程中，有些时候我们要定义很多种状态标，举一个经典的权限操作的例子（来源于网上）,假设这里有四种权限状态如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Permission</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 是否允许查询</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> allowSelect;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 是否允许新增</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> allowInsert;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 是否允许删除</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> allowDelete;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 是否允许更新</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> allowUpdate;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们的目的是判断当前用户是否拥有某种权限，如果单个判断好说，也就四种。但如果混合这来呢，就是2的4次方，共有16种，这就繁琐了。那如果有更多权限呢？组合起来复杂度也就成倍往上升了。</p>\n<h2 id=\"应用分析\">应用分析<a title=\"#应用分析\" href=\"#应用分析\"></a></h2>\n<p>还是拿上边的权限例子来说事，我们改造一下，运用二进制移位来表示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NewPermission</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 是否允许查询，二进制第1位，0表示否，1表示是</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> ALLOW_SELECT = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">0</span>; <span class=\"comment\">// 0001</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 是否允许新增，二进制第2位，0表示否，1表示是</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> ALLOW_INSERT = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">1</span>; <span class=\"comment\">// 0010</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 是否允许修改，二进制第3位，0表示否，1表示是</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> ALLOW_UPDATE = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">2</span>; <span class=\"comment\">// 0100</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 是否允许删除，二进制第4位，0表示否，1表示是</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> ALLOW_DELETE = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">3</span>; <span class=\"comment\">// 1000</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 存储目前的权限状态</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> flag;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t *  重新设置权限</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPermission</span><span class=\"params\">(<span class=\"keyword\">int</span> permission)</span> </span>&#123;</span><br><span class=\"line\">\t\tflag = permission;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t *  添加一项或多项权限</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">enable</span><span class=\"params\">(<span class=\"keyword\">int</span> permission)</span> </span>&#123;</span><br><span class=\"line\">\t\tflag |= permission;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t *  删除一项或多项权限</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">disable</span><span class=\"params\">(<span class=\"keyword\">int</span> permission)</span> </span>&#123;</span><br><span class=\"line\">\t\tflag &amp;= ~permission;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t *  是否拥某些权限</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAllow</span><span class=\"params\">(<span class=\"keyword\">int</span> permission)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (flag &amp; permission) == permission;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t *  是否禁用了某些权限</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isNotAllow</span><span class=\"params\">(<span class=\"keyword\">int</span> permission)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (flag &amp; permission) == <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t *  是否仅仅拥有某些权限</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isOnlyAllow</span><span class=\"params\">(<span class=\"keyword\">int</span> permission)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> flag == permission;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上边代码就是抛开常规的状态表示法（移位表示），例如：</p>\n<p>ALLOW_SELECT = 1 &lt;&lt; 0，转成二进制就是0001，二进制第一位表示Select权限。<br>\nALLOW_INSERT = 1 &lt;&lt; 1，转成二进制就是0010，二进制第二位表示Insert权限。<br>\nALLOW_UPDATE = 1 &lt;&lt; 2，转成二进制就是0100，二进制第三位表示Update权限。<br>\nALLOW_DELETE = 1 &lt;&lt; 3，转成二进制就是1000，二进制第四位表示Delete权限。</p>\n<p>你会发现上边四种权限表示都有一个特点，那就是转化成二进制中的“1”只占用其中的某一位，其余的全部都是0，这就为接下来的位运算提供了极大的便利。我们用一个全局的整形变量flag来存储各种权限的启用和停用状态，那么得到的二进制结果中每一位的0或1都代表当前所在位的权限关闭和开启，四种权限有16种组合方式，下边就列举一部分，大家可以看一下：</p>\n<div class=\"φcy\"><div class=\"φda\"><table><thead>\n<tr>\n<th>flag</th>\n<th>查询</th>\n<th>新增</th>\n<th>修改</th>\n<th>删除</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1（0001）</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>只允许查询（即等于ALLOW_SELECT）</td>\n</tr>\n<tr>\n<td>2（0010）</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>只允许新增（即等于ALLOW_INSERT）</td>\n</tr>\n<tr>\n<td>4（0100）</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>只允许修改（即等于ALLOW_UPDATE）</td>\n</tr>\n<tr>\n<td>8（1000）</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>只允许删除（即等于ALLOW_DELETE）</td>\n</tr>\n<tr>\n<td>3（0011）</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>只允许查询和新增</td>\n</tr>\n<tr>\n<td>12（1100）</td>\n<td>1</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>只允许修改和删除</td>\n</tr>\n<tr>\n<td>0（0000）</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>都不允许</td>\n</tr>\n<tr>\n<td>15（1111）</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>全都允许</td>\n</tr>\n</tbody>\n</table></div></div><p>四种权限有16种组合方式，这16种组合方式就都是通过位运算得来的，其中参与位运算的每个因子你都可以叫做掩码（MASK），例如我要查询是否有修改和删除的权限我可以这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (permission.isAllow(NewPermission.ALLOW_UPDATE | ALLOW_DELETE))&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当然我也可以定义一个isAllowUpdateDelete()这样的方法，这样处理：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义拥有修改和删除权限的mask</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> ALLOW_UPDATE_DELETE_MASK = <span class=\"number\">12</span>; </span><br><span class=\"line\"><span class=\"comment\">// 是否拥有修改和删除的权限</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAllowUpdateDelete</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag &amp; ALLOW_UPDATE_DELETE_MASK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 用的时候这样既可</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (permission.isAllowUpdateDelete())&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码中的常量<code>ALLOW_UPDATE_DELETE_MASK</code>就是我们定义的拥有某些操作的掩码，这在Android源码也是很常见的，这样处理我们就不用建立List或者专门遍历判断一些相关权限了。</p>\n<p>至此应该对掩码有一个清楚的了解了吧，那位掩码（BitMask）是什么呢？</p>\n<p><strong>BitMask并不是一个类，也不是某种特殊的单位，它更像是一种思想。在BitMask中，使用一个数值来记录各种状态的集合，使用这个数值的每一位来表达每一种状态。在Android中，一个普通的int类型，是32位，则可以表达32中不同的状态而互不影响。</strong></p>\n<p>其实在开发过程中除了移位表示标识，大部分采用的是十六进制表示，还有十六进制和移位混合形式，这些在一些系统源码中普遍体现。</p>\n<h2 id=\"源码实例\">源码实例<a title=\"#源码实例\" href=\"#源码实例\"></a></h2>\n<p>在Android源码中主要针对FLAG的运算有三种：</p>\n<p>1.增加属性 “|” 。</p>\n<p>如果需要向flag变量中增加某个FLAG，使用&quot;|&quot;运算符 flag |= XXX_FLAG;</p>\n<p>原因: 如果flag变量没有XXX_FLAG，则“|”完后flag对应的位的值为1，如果已经有XXX_FLAG，则“|”完后值不会变，对应位还是1。</p>\n<p>2.包含属性 “&amp;” 。</p>\n<p>如果需要判断flag变量中是否包含XXX_FLAG，使用&quot;&amp;&quot;运算符，flag &amp; XXX_FLAG != 0 或者 flag &amp; XXX_FLAG = XXX_FLAG。</p>\n<p>原因: 如果flag变量里包含XXX_FLAG，则“&amp;”完后flag对应的位的值为1，因为XXX_FLAG的定义保证了只有一位非0，其他位都为0，所以如果是包含的话进行“&amp;”运算后值不为0，该位上的值为此XXX_FLAG的所在位上的值，不包含的话值为0。</p>\n<p>3.去除属性 “&amp;~” 。</p>\n<p>如果需要去除flag变量的XXX_FLAG, 使用 “&amp;~”， flag &amp;= ~XXX_FLAG;</p>\n<p>原因: 先对XXX_FLAG进行取反则XXX_FLAG原来非0的那一位变为0，然后使用“&amp;”运算后如果flag变量非0的那一位变为0，则意味着flag变量不包含XXX_FLAG。</p>\n<h3 id=\"configuration-类\">Configuration 类<a title=\"#configuration-类\" href=\"#configuration-类\"></a></h3>\n<p>比如Android源码中的Configuration类。Configuration类专门描述手机设备上的配置信息，包括屏幕旋转、屏幕方向、字体设置、缩放因子、软键盘、移动信号等等，因此有很多种状态配置，以下是部分配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** Constant for &#123;<span class=\"doctag\">@link</span> #colorMode&#125;: bits that encode whether the screen is wide gamut. */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COLOR_MODE_WIDE_COLOR_GAMUT_MASK = <span class=\"number\">0x3</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Constant for &#123;<span class=\"doctag\">@link</span> #colorMode&#125;: a &#123;<span class=\"doctag\">@link</span> #COLOR_MODE_WIDE_COLOR_GAMUT_MASK&#125; value</span></span><br><span class=\"line\"><span class=\"comment\"> * indicating that it is unknown whether or not the screen is wide gamut.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COLOR_MODE_WIDE_COLOR_GAMUT_UNDEFINED = <span class=\"number\">0x0</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Constant for &#123;<span class=\"doctag\">@link</span> #colorMode&#125;: a &#123;<span class=\"doctag\">@link</span> #COLOR_MODE_WIDE_COLOR_GAMUT_MASK&#125; value</span></span><br><span class=\"line\"><span class=\"comment\"> * indicating that the screen is not wide gamut.</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;Corresponds to the &lt;code&gt;-nowidecg&lt;/code&gt; resource qualifier.&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COLOR_MODE_WIDE_COLOR_GAMUT_NO = <span class=\"number\">0x1</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Constant for &#123;<span class=\"doctag\">@link</span> #colorMode&#125;: a &#123;<span class=\"doctag\">@link</span> #COLOR_MODE_WIDE_COLOR_GAMUT_MASK&#125; value</span></span><br><span class=\"line\"><span class=\"comment\"> * indicating that the screen is wide gamut.</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;Corresponds to the &lt;code&gt;-widecg&lt;/code&gt; resource qualifier.&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COLOR_MODE_WIDE_COLOR_GAMUT_YES = <span class=\"number\">0x2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** Constant for &#123;<span class=\"doctag\">@link</span> #colorMode&#125;: bits that encode the dynamic range of the screen. */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COLOR_MODE_HDR_MASK = <span class=\"number\">0xc</span>;</span><br><span class=\"line\"><span class=\"comment\">/** Constant for &#123;<span class=\"doctag\">@link</span> #colorMode&#125;: bits shift to get the screen dynamic range. */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COLOR_MODE_HDR_SHIFT = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Constant for &#123;<span class=\"doctag\">@link</span> #colorMode&#125;: a &#123;<span class=\"doctag\">@link</span> #COLOR_MODE_HDR_MASK&#125; value</span></span><br><span class=\"line\"><span class=\"comment\"> * indicating that it is unknown whether or not the screen is HDR.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COLOR_MODE_HDR_UNDEFINED = <span class=\"number\">0x0</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Constant for &#123;<span class=\"doctag\">@link</span> #colorMode&#125;: a &#123;<span class=\"doctag\">@link</span> #COLOR_MODE_HDR_MASK&#125; value</span></span><br><span class=\"line\"><span class=\"comment\"> * indicating that the screen is not HDR (low/standard dynamic range).</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;Corresponds to the &lt;code&gt;-lowdr&lt;/code&gt; resource qualifier.&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COLOR_MODE_HDR_NO = <span class=\"number\">0x1</span> &lt;&lt; COLOR_MODE_HDR_SHIFT;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Constant for &#123;<span class=\"doctag\">@link</span> #colorMode&#125;: a &#123;<span class=\"doctag\">@link</span> #COLOR_MODE_HDR_MASK&#125; value</span></span><br><span class=\"line\"><span class=\"comment\"> * indicating that the screen is HDR (dynamic range).</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;Corresponds to the &lt;code&gt;-highdr&lt;/code&gt; resource qualifier.&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COLOR_MODE_HDR_YES = <span class=\"number\">0x2</span> &lt;&lt; COLOR_MODE_HDR_SHIFT;</span><br></pre></td></tr></table></figure>\n<p>Configuration类标识这设备的详细信息，但是源码编写者也不可能把每一个很微小的细节都标识进来，这样就太庞大了，他们会把基本使用标识进来，然后在定义一些场景掩码（_MASK），通过这些场景掩码在代码逻辑中进行位掩码实现所需要的功能：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Return whether the screen has a round shape. Apps may choose to change styling based</span></span><br><span class=\"line\"><span class=\"comment\"> * on this property, such as the alignment or layout of text or informational icons.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> true if the screen is rounded, false otherwise</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isScreenRound</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (screenLayout &amp; SCREENLAYOUT_ROUND_MASK) == SCREENLAYOUT_ROUND_YES;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Return whether the screen has a wide color gamut and wide color gamut rendering</span></span><br><span class=\"line\"><span class=\"comment\"> * is supported by this device.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> true if the screen has a wide color gamut and wide color gamut rendering</span></span><br><span class=\"line\"><span class=\"comment\"> * is supported, false otherwise</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isScreenWideColorGamut</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (colorMode &amp; COLOR_MODE_WIDE_COLOR_GAMUT_MASK) == COLOR_MODE_WIDE_COLOR_GAMUT_YES;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Return whether the screen has a high dynamic range.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> true if the screen has a high dynamic range, false otherwise</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isScreenHdr</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (colorMode &amp; COLOR_MODE_HDR_MASK) == COLOR_MODE_HDR_YES;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"view绘制过程中onmeasure的参数\">View绘制过程中onMeasure的参数<a title=\"#view绘制过程中onmeasure的参数\" href=\"#view绘制过程中onmeasure的参数\"></a></h3>\n<p>在自定义view中我们常常实现三种方法，其中有一个onMeasure方法，主要用于view绘制过程中的一个测量，Android开发的同学这点很清楚:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其入参中有两个参数“widthMeasureSpec”、“heightMeasureSpec”。这两个参数都是32位int值，其中高2位是SpecMode（测量模式），低30位是SpecSize（在某种测量模式下，所测得的精确值）。</p>\n<p>针对测量模式，系统预制了三种：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Measure specification mode: The parent has not imposed any constraint</span></span><br><span class=\"line\"><span class=\"comment\"> * on the child. It can be whatever size it wants.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> UNSPECIFIED = <span class=\"number\">0</span> &lt;&lt; MODE_SHIFT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Measure specification mode: The parent has determined an exact size</span></span><br><span class=\"line\"><span class=\"comment\"> * for the child. The child is going to be given those bounds regardless</span></span><br><span class=\"line\"><span class=\"comment\"> * of how big it wants to be.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> EXACTLY     = <span class=\"number\">1</span> &lt;&lt; MODE_SHIFT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Measure specification mode: The child can be as large as it wants up</span></span><br><span class=\"line\"><span class=\"comment\"> * to the specified size.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> AT_MOST     = <span class=\"number\">2</span> &lt;&lt; MODE_SHIFT;</span><br></pre></td></tr></table></figure>\n<p>那我们在平时开发中如何取view的精确值（宽、高）呢，按理说只需要取后30位的值即可，左移两位。如果用api去处理：<code>MeasureSpec.getSize(widthMeasureSpec)</code>，然后我们深入系统源码看一下系统是如何运作的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Extracts the size from the supplied measure specification.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> measureSpec the measure specification to extract the size from</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> the size in pixels defined in the supplied measure specification</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getSize</span><span class=\"params\">(<span class=\"keyword\">int</span> measureSpec)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (measureSpec &amp; ~MODE_MASK);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里就清楚了，原来系统也是用位掩码处理的，我们再看一下掩码MODE_MASK是怎么表示的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MODE_SHIFT = <span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MODE_MASK  = <span class=\"number\">0x3</span> &lt;&lt; MODE_SHIFT;</span><br></pre></td></tr></table></figure>\n<p>看到有同学可能会问为什么是0x3呢？当你想到上边的三种模式，不由的惊喜，原来<code>MODE_MASK = UNSPECIFIED | EXACTLY | AT_MOST</code>。MODE_MASK左移30位刚好是view的SpecMode，然后measureSpec再将SpecMode去除，刚好就是我们想要的SpecSize。</p>\n<h3 id=\"一个小问题\">一个小问题<a title=\"#一个小问题\" href=\"#一个小问题\"></a></h3>\n<p>上边也提到开发过程中针对位掩码这些FLAG，会用到移位表示法、十六进制表示法、混合表示法，但十六进制表示法更为常见，那么这里抛出一个小问题：<strong>为什么开发普遍用十六进制来定义FLAG？</strong></p>\n<p>其实开发过程中不固定使用哪种进制，8进制的也有用到，但是最终回归到的都是二进制，开发者普遍用十六进制主要是编码习惯和更为方便，具体原因个人总结有两条：</p>\n<ol>\n<li>缩短编写空间，总不能用二进制32个1或者0来定义一个整形常量吧。</li>\n<li>十六进制更容易转化成二进制，因此在代码阅读和逻辑分析尤其是运用在位运算上更有优势。</li>\n</ol>\n<h2 id=\"其他用法\">其他用法<a title=\"#其他用法\" href=\"#其他用法\"></a></h2>\n<p>1.判断int型变量a是奇数还是偶数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a&amp;1 &#x3D; 0 偶数</span><br><span class=\"line\">a&amp;1 &#x3D; 1 奇数 </span><br></pre></td></tr></table></figure>\n<p>2.整数的平均值</p>\n<p>对于两个整数x,y，如果用 (x+y)/2 求平均值，会产生溢出，因为 x+y 可能会大于INT_MAX，但是我们知道它们的平均值是肯定不会溢出的，我们用如下算法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">average</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x&amp;y)+((x^y)&gt;&gt;<span class=\"number\">1</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.判断一个正整数是不是2的幂</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">power2</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> ((x&amp;(x-<span class=\"number\">1</span>))==<span class=\"number\">0</span>)&amp;&amp;(x!=<span class=\"number\">0</span>)； </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h2>\n<p>到此针对位运算的相关知识点终于完了，从起初的机器码，到位运算规则，再到本篇的实用战场，相信读过这三篇的小伙伴一定有很大收获。</p>\n<p>在开发过程中运用位运算，有些时候可以极好的缩短编写空间和良好的程序扩展性，但是并不是说位运算就是最好的，毕竟代码是写给人看的，我们的代码要有可读性可持续维护性，所以在开发过程中针对场景的不用，运用的策略也不同，避免滥用，良好运用。</p>\n","prev":{"title":"JVM（一）内存分配","link":"post/1568979766"},"next":{"title":"位运算的那些事（二）如何位运算","link":"post/1566743147"},"plink":"https://blog.ixin.run/post/1567003105/","toc":[{"id":"什么是掩码","title":"什么是掩码","index":"1"},{"id":"抛砖引玉","title":"抛砖引玉","index":"2"},{"id":"经典场景","title":"经典场景","index":"3"},{"id":"应用分析","title":"应用分析","index":"4"},{"id":"源码实例","title":"源码实例","index":"5","children":[{"id":"configuration-类","title":"Configuration 类","index":"5.1"},{"id":"view绘制过程中onmeasure的参数","title":"View绘制过程中onMeasure的参数","index":"5.2"},{"id":"一个小问题","title":"一个小问题","index":"5.3"}]},{"id":"其他用法","title":"其他用法","index":"6"},{"id":"总结","title":"总结","index":"7"}],"reward":true,"copyright":{"custom":"转载请注明出处，谢谢支持。"}}