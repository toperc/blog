{"title":"你知道ImageView的ScaleType怎么用吗","date":"2021-02-27T11:18:34.000Z","date_formatted":{"ll":"2021年2月27日","L":"2021/02/27","MM-DD":"02-27"},"link":"posts/1614424714","comments":true,"tags":["Android","ImageView"],"categories":["Android"],"updated":"2021-03-03T05:20:37.289Z","content":"<p>如果你像我一样很容易健忘，那么你也应该像我一样有一个好习惯——“好记性不如赖笔头”。Android开发中ImageView的ScaleType属性就有很多选择，说实话我是真的记不住这么多类型的用法，所以只有用笔记下来咯，用的时候直接翻看一下，2分钟搞定。你知道ImageView的ScaleType怎么用吗？</p>\n<a id=\"more\"></a>\n<h2 id=\"scaletype概述\">ScaleType概述<a title=\"#scaletype概述\" href=\"#scaletype概述\"></a></h2>\n<p>ImageView 的 ScaleType 一共八种类型，分别是：</p>\n<ul>\n<li>CENTER</li>\n<li>CENTER_CROP</li>\n<li>CENTER_INSIDE</li>\n<li>FIT_CENTER</li>\n<li>FIT_END</li>\n<li>FIT_START</li>\n<li>FIT_XY</li>\n<li>MATRIX</li>\n</ul>\n<p>由于不同类型的 ScaleType 最终展示的 ImageView 不一样，再加上 ImageView 的使用频率非常高，因此，了解不同类型的 ScaleType 的作用是十分有必要的。</p>\n<p>下面是ScaleType并排放置的所有不同屏幕截图，来自thoughtbot：</p>\n<p><img src=\"https://note.youdao.com/yws/api/personal/file/99D59113365F4B09BBAA817F08B7C84F?method=download&amp;shareKey=bfc7957fe01b73af511d9ec29e3aa3a5\" alt=\"ScaleType八种类型图示\" class=\"φbs\"></p>\n<h2 id=\"scaletype详解\">ScaleType详解<a title=\"#scaletype详解\" href=\"#scaletype详解\"></a></h2>\n<h3 id=\"1.-center\">1. CENTER<a title=\"#1.-center\" href=\"#1.-center\"></a></h3>\n<blockquote>\n<p>Center the image in the view, but perform no scaling.</p>\n</blockquote>\n<p>在不缩放的前提下，将 Image 的中间显示在 ImageView 的中间。</p>\n<ul>\n<li>Image 尺寸比 ImageView 尺寸大<br>\n只显示 Image 中间与 ImageView 尺寸相等的部分</li>\n<li>Image 尺寸与 ImageView 尺寸相等<br>\n完整显示</li>\n<li>Image 尺寸比 ImageView 尺寸小<br>\nImage 完整地显示在 ImageView 中间</li>\n</ul>\n<h3 id=\"2.-center_crop\">2. CENTER_CROP<a title=\"#2.-center_crop\" href=\"#2.-center_crop\"></a></h3>\n<blockquote>\n<p>Scale the image uniformly (maintain the image’s aspect ratio) so that both dimensions (width and height) of the image will be equal to or larger than the corresponding dimension of the view (minus padding).</p>\n</blockquote>\n<p>Image Width Height 等比例缩放至至少一个方向上 Image 与 ImageView 尺寸一样（Image 短边缩放至与 ImageView 对应边相等（Width 对应 Width，Height 对应 Height）），之后将缩放后的 Image 的中间显示在 ImageView 的中间。</p>\n<ul>\n<li>Image 尺寸比 ImageView 尺寸大<br>\nImage 短边缩小至与 ImageView 对应边相等，Image 长边根据相应的缩放系数进行缩放，之后将 Image 中间显示在 ImageView 中间。</li>\n<li>Image 尺寸与 ImageView 尺寸相等<br>\n完整显示</li>\n<li>Image 尺寸比 ImageView 尺寸小<br>\nImage 短边放大至与 ImageView 对应边相等，Image 长边根据相应的缩放系数进行缩放，之后将 Image 中间显示在 ImageView 中间。</li>\n</ul>\n<h3 id=\"3.-center_inside\">3. CENTER_INSIDE<a title=\"#3.-center_inside\" href=\"#3.-center_inside\"></a></h3>\n<blockquote>\n<p>Scale the image uniformly (maintain the image’s aspect ratio) so that both dimensions (width and height) of the image will be equal to or less than the corresponding dimension of the view (minus padding).</p>\n</blockquote>\n<p>完整地将 Image 显示在 ImageView 中间。如果 Image 比 ImageView 尺寸大，则将长边缩放至与 ImageView 对应边相等，同时，短边根据缩放系数缩放。之后，将缩放后的 Image 完整地显示在 ImageView 上；如果 Image 比 ImageView 尺寸小，直接将 Image 显示在 ImageView 中间。</p>\n<ul>\n<li>Image 尺寸比 ImageView 尺寸大<br>\nImage 长边缩小至与 ImageView 对应边相等，Image 短边根据相应的缩放系数进行缩放，之后将 Image 显示在 ImageView 中间。</li>\n<li>Image 尺寸与 Image View 尺寸相等<br>\n完整显示</li>\n<li>Image 尺寸比 ImageView 尺寸小<br>\nImage 不进行任何处理，直接显示在 ImageView 中间。</li>\n</ul>\n<h3 id=\"4.-fit_center\">4. FIT_CENTER<a title=\"#4.-fit_center\" href=\"#4.-fit_center\"></a></h3>\n<blockquote>\n<p>Compute a scale that will maintain the original src aspect ratio, but will also ensure that src fits entirely inside dst. At least one axis (X or Y) will fit exactly. The result is centered inside dst.</p>\n</blockquote>\n<p>完整地将 Image 显示在 ImageView 中间。如果 Image 比 ImageView 尺寸大，则将长边缩放至与 ImageView 对应边相等，同时，短边根据缩放系数缩放，之后将缩放后的 Image 完整地显示在 ImageView 上；如果 Image 比 ImageView 尺寸小，则将长边放大至与 ImageView 对应边相等，之后将缩放后的 Image 完整地显示在 ImageView 上。总之，在保证 Image 完整显示在 ImageView 里面的前提下，保证在一个方向上，Image 与 ImageView 是相等的。</p>\n<ul>\n<li>Image 尺寸比 ImageView 尺寸大<br>\nImage 长边缩小至与 ImageView 对应边相等，Image 短边根据相应的缩放系数进行缩放，之后将 Image 显示在 ImageView 中间。</li>\n<li>Image 尺寸与 ImageView 尺寸相等<br>\n完整显示</li>\n<li>Image 尺寸比 ImageView 尺寸小<br>\nImage 长边放大至与 ImageView 对应边相等，Image 短边根据相应的缩放系数进行缩放，之后将 Image 显示在 ImageView 中间。</li>\n</ul>\n<h3 id=\"5.-fit_end\">5. FIT_END<a title=\"#5.-fit_end\" href=\"#5.-fit_end\"></a></h3>\n<blockquote>\n<p>Compute a scale that will maintain the original src aspect ratio, but will also ensure that src fits entirely inside dst. At least one axis (X or Y) will fit exactly. END aligns the result to the right and bottom edges of dst.</p>\n</blockquote>\n<p>完整地将 Image 显示在 ImageView 右边或下边。如果 Image 比 ImageView 尺寸大，则将长边缩放至与 ImageView 对应边相等，同时，短边根据缩放系数缩放，之后将缩放后的 Image 完整地显示在 ImageView 右边或下边；如果 Image 比 ImageView 尺寸小，则将长边放大至与 ImageView 对应边相等，之后将缩放后的 Image 完整地显示在 ImageView 右边或下边。总之，在保证 Image 完整显示在 ImageView 里面的前提下，保证在一个方向上，Image 与 ImageView 是相等的。</p>\n<ul>\n<li>Image 尺寸比 ImageView 尺寸大<br>\nImage 长边缩小至与 ImageView 对应边相等，Image 短边根据相应的缩放系数进行缩放，之后将 Image 显示在 ImageView 右边或下边。</li>\n<li>Image 尺寸与 ImageView 尺寸相等<br>\n完整显示</li>\n<li>Image 尺寸比 ImageView 尺寸小<br>\nImage 长边放大至与 ImageView 对应边相等，Image 短边根据相应的缩放系数进行缩放，之后将 Image 显示在 ImageView 右边或下边。</li>\n</ul>\n<h3 id=\"6.-fit_start\">6. FIT_START<a title=\"#6.-fit_start\" href=\"#6.-fit_start\"></a></h3>\n<blockquote>\n<p>Compute a scale that will maintain the original src aspect ratio, but will also ensure that src fits entirely inside dst. At least one axis (X or Y) will fit exactly. START aligns the result to the left and top edges of dst.</p>\n</blockquote>\n<p>完整地将 Image 显示在 ImageView 左边或上边。如果 Image 比 ImageView 尺寸大，则将长边缩放至与 ImageView 对应边相等，同时，短边根据缩放系数缩放，之后将缩放后的 Image 完整地显示在 ImageView 左边或上；如果 Image 比 ImageView 尺寸小，则将长边放大至与 ImageView 对应边相等，之后将缩放后的 Image 完整地显示在 ImageView 左边或上边。总之，在保证 Image 完整显示在 ImageView 里面的前提下，保证在一个方向上，Image 与 ImageView 是相等的。</p>\n<ul>\n<li>Image 尺寸比 ImageView 尺寸大<br>\nImage 长边缩小至与 ImageView 对应边相等，Image 短边根据相应的缩放系数进行缩放，之后将 Image 显示在 ImageView 左边或上边。</li>\n<li>Image 尺寸与 ImageView 尺寸相等<br>\n完整显示</li>\n<li>Image 尺寸比 ImageView 尺寸小<br>\nImage 长边放大至与 ImageView 对应边相等，Image 短边根据相应的缩放系数进行缩放，之后将 Image 显示在 ImageView 左边或上边。</li>\n</ul>\n<h3 id=\"7.-fit_xy\">7. FIT_XY<a title=\"#7.-fit_xy\" href=\"#7.-fit_xy\"></a></h3>\n<blockquote>\n<p>Scale in X and Y independently, so that src matches dst exactly. This may change the aspect ratio of the src.</p>\n</blockquote>\n<p>完整地将 Image 显示在 ImageView 里面。Image X、Y 方向上分别缩放至与 ImageView 对应边相等，Image 的 Width 和 Height 缩放系数可以不一致。</p>\n<ul>\n<li>Image 尺寸比 ImageView 尺寸大<br>\nImage 的 Width、Height 分别缩放至与 ImageView 对应边相等，之后将 Image 完整地显示在 ImageView 里面。</li>\n<li>Image 尺寸与 ImageView 尺寸相等<br>\n完整显示</li>\n<li>Image 尺寸比 ImageView 尺寸小<br>\nImage 的 Width、Height 分别缩放至与 ImageView 对应边相等，之后将 Image 完整地显示在 ImageView 里面。</li>\n</ul>\n<h3 id=\"8.-matrix\">8. MATRIX<a title=\"#8.-matrix\" href=\"#8.-matrix\"></a></h3>\n<blockquote>\n<p>Compute a scale that will maintain the original src aspect ratio, but will also ensure that src fits entirely inside dst. At least one axis (X or Y) will fit exactly. START aligns the result to the left and top edges of dst.</p>\n</blockquote>\n<p>将 Image 从 ImageView 左上角开始显示。</p>\n<ul>\n<li>Image 尺寸比 ImageView 尺寸大<br>\nImageView 只显示 Image 中从左上角开始与 ImageView 尺寸相等的部分，多余的地方不显示。</li>\n<li>Image 尺寸与 ImageView 尺寸相等<br>\n完整显示</li>\n<li>Image 尺寸比 ImageView 尺寸小<br>\nImage 显示在 ImageView 的左上角。</li>\n</ul>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li><a href=\"https://developer.android.com/reference/android/widget/ImageView.ScaleType.html\">https://developer.android.com/reference/android/widget/ImageView.ScaleType.html</a></li>\n<li><a href=\"https://thoughtbot.com/blog/android-imageview-scaletype-a-visual-guide\">https://thoughtbot.com/blog/android-imageview-scaletype-a-visual-guide</a></li>\n</ul>\n","prev":{"title":"Android开发之玩转Android补间动画","link":"posts/1614434754"},"next":{"title":"极度干货——GitHub受欢迎的Android UI Library整理","link":"posts/1614235078"},"plink":"https://blog.ixin.run/posts/1614424714/","toc":[{"id":"scaletype概述","title":"ScaleType概述","index":"1"},{"id":"scaletype详解","title":"ScaleType详解","index":"2","children":[{"id":"1.-center","title":"1. CENTER","index":"2.1"},{"id":"2.-center_crop","title":"2. CENTER_CROP","index":"2.2"},{"id":"3.-center_inside","title":"3. CENTER_INSIDE","index":"2.3"},{"id":"4.-fit_center","title":"4. FIT_CENTER","index":"2.4"},{"id":"5.-fit_end","title":"5. FIT_END","index":"2.5"},{"id":"6.-fit_start","title":"6. FIT_START","index":"2.6"},{"id":"7.-fit_xy","title":"7. FIT_XY","index":"2.7"},{"id":"8.-matrix","title":"8. MATRIX","index":"2.8"}]},{"id":"参考","title":"参考","index":"3"}],"reward":true,"copyright":{"author":"i猩人","link":"<a href=\"https://blog.ixin.run/posts/1614424714/\" title=\"你知道ImageView的ScaleType怎么用吗\">https://blog.ixin.run/posts/1614424714/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}